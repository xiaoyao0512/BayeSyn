adder.c: In function ‘main’:
adder.c:9:10: warning: implicit declaration of function ‘atoi’ [-Wimplicit-function-declaration]
  int a = atoi(argv[1]);
          ^~~~
31.0 : There are 14 number of failed testcases.
31.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
2 2
47.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 47.000000
-------------------
0 1.42516408274e-21
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 9
Case 3: replace a new instruction
33.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 33.000000
-------------------
1 0.00247875217667
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 6
Case 2: Swap two instructions
47.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 47.000000
-------------------
2 1.42516408274e-21
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
1 0
46.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 46.000000
-------------------
3 2.86251858055e-20
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
0 3
43.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 43.000000
-------------------
4 2.31952283024e-16
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 4
Case 2: Swap two instructions
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 39.000000
-------------------
5 3.77513454428e-11
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
1 1
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 41.000000
-------------------
6 9.35762296884e-14
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
44.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 44.000000
-------------------
7 1.1548224173e-17
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 3
Case 3: replace a new instruction
44.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 44.000000
-------------------
8 1.1548224173e-17
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
1 1
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 39.000000
-------------------
9 3.77513454428e-11
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
1 0
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 44.000000
-------------------
10 1.1548224173e-17
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 10
Case 2: Swap two instructions
33.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 33.000000
-------------------
11 0.00247875217667
Best Cost:  31.0
-------------------
BEST Program:
Error = 31
31.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
0 1
25.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 31.000000
-------------------
New Cost: 25.000000
-------------------
12 1
Accepting the new proposal...
Best Cost:  31.0
Updating the best program...
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
2 1
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 36.000000
-------------------
13 4.6588861451e-15
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 6: replace all operands
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
14 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 4: remove a random instruction
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
15 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
34.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 34.000000
-------------------
16 1.87952881654e-12
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
2 2
43.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
17 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 2
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 38.000000
-------------------
18 1.1548224173e-17
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 6: replace all operands
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
19 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 6: replace all operands
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
20 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
2 1
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
21 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 3: replace a new instruction
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
22 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 3
45.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
23 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 2: Swap two instructions
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
24 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 2: Swap two instructions
43.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
25 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 2: Swap two instructions
44.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
26 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 1
43.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
27 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
0 0
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
28 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 1
44.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
29 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
1 1
33.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 33.000000
-------------------
30 3.77513454428e-11
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
1 1
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
31 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 1
55.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 55.000000
-------------------
32 8.19401262399e-40
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 6: replace all operands
52.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 52.000000
-------------------
33 6.63967719958e-36
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 3
30.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 30.000000
-------------------
34 3.05902320502e-07
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 2: Swap two instructions
47.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 47.000000
-------------------
35 2.1705220113e-29
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 2: Swap two instructions
28.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 28.000000
-------------------
36 0.000123409804087
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 6: replace all operands
44.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
37 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 7
Case 5: Insert an instruction
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
38 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 2: Swap two instructions
51.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 51.000000
-------------------
39 1.3336148155e-34
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
1 3
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
40 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 0
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 36.000000
-------------------
41 4.6588861451e-15
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
55.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 55.000000
-------------------
42 8.19401262399e-40
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 4: remove a random instruction
34.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 34.000000
-------------------
43 1.87952881654e-12
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 6: replace all operands
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
44 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 4: remove a random instruction
46.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
45 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
0 0
49.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 49.000000
-------------------
46 5.38018616002e-32
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 5: Insert an instruction
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 36.000000
-------------------
47 4.6588861451e-15
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 6: replace all operands
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 38.000000
-------------------
48 1.1548224173e-17
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 0
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 32.000000
-------------------
49 7.58256042791e-10
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
1 3
27.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 27.000000
-------------------
50 0.00247875217667
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
0 2
49.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 49.000000
-------------------
51 5.38018616002e-32
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 5: Insert an instruction
45.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
52 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 6: replace all operands
46.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
53 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 6: replace all operands
44.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
54 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
0 0
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
55 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
1 2
29.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 29.000000
-------------------
56 6.14421235333e-06
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 5: Insert an instruction
43.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
57 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 4: remove a random instruction
51.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 51.000000
-------------------
58 1.3336148155e-34
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
2 3
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 36.000000
-------------------
59 4.6588861451e-15
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
0 1
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
60 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
0 1
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 37.000000
-------------------
61 2.31952283024e-16
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 0
49.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 49.000000
-------------------
62 5.38018616002e-32
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 3: replace a new instruction
35.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 35.000000
-------------------
63 9.35762296884e-14
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 2: Swap two instructions
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
64 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 4: remove a random instruction
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
65 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 6: replace all operands
41.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
66 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
0 0
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
67 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 6: replace all operands
55.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 55.000000
-------------------
68 8.19401262399e-40
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 1
45.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
69 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
1 3
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
70 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 6: replace all operands
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 33.000000
-------------------
71 3.77513454428e-11
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
2 2
49.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 49.000000
-------------------
72 5.38018616002e-32
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
0 2
46.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
73 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 0
26.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 26.000000
-------------------
74 0.0497870683679
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 6: replace all operands
48.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 48.000000
-------------------
75 1.08063927771e-30
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 6: replace all operands
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 38.000000
-------------------
76 1.1548224173e-17
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 2: Swap two instructions
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
77 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 2
55.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 55.000000
-------------------
78 8.19401262399e-40
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 2: Swap two instructions
45.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
79 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 2
49.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 49.000000
-------------------
80 5.38018616002e-32
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
0 2
42.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
81 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
1 2
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 37.000000
-------------------
82 2.31952283024e-16
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
1 0
42.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
83 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
0 1
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
84 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 3: replace a new instruction
50.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 50.000000
-------------------
85 2.67863696181e-33
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 6: replace all operands
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
86 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 3: replace a new instruction
28.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 28.000000
-------------------
87 0.000123409804087
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
1 1
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
88 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 3: replace a new instruction
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
89 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
31.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 31.000000
-------------------
90 1.52299797447e-08
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 2: Swap two instructions
40.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
91 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
0 1
45.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
92 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 1
30.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 30.000000
-------------------
93 3.05902320502e-07
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 3
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
94 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
30.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 30.000000
-------------------
95 3.05902320502e-07
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 3: replace a new instruction
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
96 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
2 1
52.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 52.000000
-------------------
97 6.63967719958e-36
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
1 0
47.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 47.000000
-------------------
98 2.1705220113e-29
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
1 3
33.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 33.000000
-------------------
99 3.77513454428e-11
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 6: replace all operands
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
100 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
1 3
47.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 47.000000
-------------------
101 2.1705220113e-29
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 32.000000
-------------------
102 7.58256042791e-10
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
0 3
42.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
103 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
0 3
42.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
104 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
0 3
34.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 34.000000
-------------------
105 1.87952881654e-12
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
1 0
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
106 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 6: replace all operands
44.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
107 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 2
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
108 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
0 2
38.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 38.000000
-------------------
109 1.1548224173e-17
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 2: Swap two instructions
42.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
110 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
2 2
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
111 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 4: remove a random instruction
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 38.000000
-------------------
112 1.1548224173e-17
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 5
Case 2: Swap two instructions
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
113 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 8
Case 6: replace all operands
39.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
114 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 3: replace a new instruction
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 44.000000
-------------------
115 1.75879220242e-25
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 3: replace a new instruction
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 40.000000
-------------------
116 2.86251858055e-20
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 1
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
117 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
1 0
35.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 35.000000
-------------------
118 9.35762296884e-14
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
2 1
36.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 36.000000
-------------------
119 4.6588861451e-15
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
37.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 37.000000
-------------------
120 2.31952283024e-16
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
2 1
46.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 46.000000
-------------------
121 4.35961000006e-28
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
1 3
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
122 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 2
Case 6: replace all operands
48.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 48.000000
-------------------
123 1.08063927771e-30
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 3
Case 2: Swap two instructions
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 39.000000
-------------------
124 5.74952226429e-19
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
1 2
25.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 25.000000
-------------------
125 1
Accepting the new proposal...
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 4
Case 4: remove a random instruction
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
126 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 3
Case 3: replace a new instruction
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 45.000000
-------------------
127 8.7565107627e-27
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 1
Case 5: Insert an instruction
31.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 31.000000
-------------------
128 1.52299797447e-08
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 7
Case 1: replace operand
2 0
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 31.000000
-------------------
129 1.52299797447e-08
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 2
Case 2: Swap two instructions
49.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 49.000000
-------------------
130 5.38018616002e-32
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 1
Case 1: replace operand
1 0
41.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
131 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 7
Case 3: replace a new instruction
42.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
132 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
2 1
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 43.000000
-------------------
133 3.5326285722e-24
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 9
Case 2: Swap two instructions
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
134 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 4
Case 1: replace operand
1 0
41.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 41.000000
-------------------
135 1.42516408274e-21
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 6
Case 1: replace operand
0 0
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 37.000000
-------------------
136 2.31952283024e-16
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
0 1
42.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 42.000000
-------------------
137 7.09547416228e-23
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 4
Case 2: Swap two instructions
31.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 31.000000
-------------------
138 1.52299797447e-08
Best Cost:  25.0
-------------------
BEST Program:
Error = 25
25.0 : There are 12 number of failed testcases.
random instr 5
Case 2: Swap two instructions
23.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 25.000000
-------------------
New Cost: 23.000000
-------------------
139 1
Accepting the new proposal...
Best Cost:  25.0
Updating the best program...
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
140 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
0 2
26.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
141 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
1 0
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
142 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 3: replace a new instruction
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
143 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 2: Swap two instructions
28.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
144 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 2: Swap two instructions
31.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
145 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 6: replace all operands
44.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
146 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 6: replace all operands
48.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 48.000000
-------------------
147 2.67863696181e-33
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 3: replace a new instruction
46.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 46.000000
-------------------
148 1.08063927771e-30
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 2: Swap two instructions
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
149 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 3: replace a new instruction
36.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
150 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 0
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
151 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
2 2
40.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
152 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
153 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 3: replace a new instruction
49.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 49.000000
-------------------
154 1.3336148155e-34
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
1 0
44.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
155 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 2: Swap two instructions
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
156 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 1
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
157 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 0
31.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
158 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 2: Swap two instructions
30.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
159 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 5: Insert an instruction
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
160 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 4: remove a random instruction
29.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
161 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 2
25.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
162 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
2 0
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
163 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 2: Swap two instructions
45.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
164 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
1 3
36.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
165 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 4: remove a random instruction
36.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
166 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
1 0
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
167 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
0 2
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
168 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
2 2
36.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
169 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 0
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
170 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 0
37.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
171 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
0 2
25.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
172 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 6: replace all operands
42.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
173 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 6: replace all operands
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
174 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 3: replace a new instruction
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
175 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
0 2
31.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
176 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 3: replace a new instruction
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
177 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 2: Swap two instructions
43.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
178 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 3: replace a new instruction
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
179 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 5: Insert an instruction
27.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
180 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
1 3
42.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
181 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 0
33.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
182 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 0
32.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
183 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
0 2
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
184 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
2 1
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
185 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
0 2
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
186 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 2: Swap two instructions
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
187 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
2 0
43.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
188 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 5: Insert an instruction
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
189 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 2: Swap two instructions
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
190 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
2 2
50.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 50.000000
-------------------
191 6.63967719958e-36
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
0 0
34.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
192 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
26.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
193 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
25.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
194 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
0 0
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
195 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 3: replace a new instruction
29.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
196 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
197 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
1 3
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
198 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 2: Swap two instructions
42.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
199 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 6: replace all operands
41.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
200 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
1 1
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 46.000000
-------------------
201 1.08063927771e-30
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 4: remove a random instruction
29.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
202 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
2 3
40.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
203 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 6: replace all operands
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
204 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
1 2
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
205 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
2 2
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
206 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 2: Swap two instructions
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
207 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
1 2
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
208 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 3: replace a new instruction
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
209 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
0 2
32.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
210 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 6: replace all operands
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
211 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
2 0
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
212 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 3: replace a new instruction
37.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
213 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
1 0
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
214 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 4
Case 6: replace all operands
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
215 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
2 1
34.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
216 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 2: Swap two instructions
34.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
217 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 6: replace all operands
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
218 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
1 0
29.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
219 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
220 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
1 1
31.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
221 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
0 0
28.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
222 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
1 2
38.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
223 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 0
44.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
224 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 2
34.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
225 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
1 2
30.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
226 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 6: replace all operands
30.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
227 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 3: replace a new instruction
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
228 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 3
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
229 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 3: replace a new instruction
41.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
230 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
43.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
231 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 2: Swap two instructions
31.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
232 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 2: Swap two instructions
34.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
233 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
0 0
29.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
234 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
1 3
30.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
235 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 2
30.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
236 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
2 0
25.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
237 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 6: replace all operands
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
238 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 2: Swap two instructions
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
239 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
1 1
28.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
240 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 3: replace a new instruction
29.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
241 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
2 2
36.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
242 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 3
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
243 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
31.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
244 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
1 1
29.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
245 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
2 0
38.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
246 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 5
Case 1: replace operand
0 1
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
247 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 6
Case 1: replace operand
0 2
48.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 48.000000
-------------------
248 2.67863696181e-33
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 3
24.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 24.000000
-------------------
249 0.0497870683679
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
30.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
250 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 0
34.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
251 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
0 1
29.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
252 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
1 0
28.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
253 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
0 1
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
254 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 10
Case 1: replace operand
2 1
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
255 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 13 number of failed testcases.
random instr 1
Case 1: replace operand
2 2
23.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 23.000000
-------------------
256 1
Accepting the new proposal...
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 1: replace operand
1 0
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
257 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 2
Case 5: Insert an instruction
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
258 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 2: Swap two instructions
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
259 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 9
Case 1: replace operand
1 1
33.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
260 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 6
Case 2: Swap two instructions
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
261 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 4: remove a random instruction
25.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
262 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
2 1
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
263 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 1: replace operand
2 2
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
264 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 3: replace a new instruction
27.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
265 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 9
Case 1: replace operand
0 3
50.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 50.000000
-------------------
266 6.63967719958e-36
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 5: Insert an instruction
28.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
267 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 9
Case 3: replace a new instruction
48.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 48.000000
-------------------
268 2.67863696181e-33
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 8
Case 1: replace operand
2 1
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
269 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 4: remove a random instruction
28.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
270 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 1: replace operand
0 3
34.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
271 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 8
Case 6: replace all operands
24.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 24.000000
-------------------
272 0.0497870683679
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 1: replace operand
2 1
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
273 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 6
Case 6: replace all operands
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
274 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 1: replace operand
2 1
47.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 47.000000
-------------------
275 5.38018616002e-32
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 6
Case 6: replace all operands
31.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
276 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 4
Case 1: replace operand
2 1
46.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 46.000000
-------------------
277 1.08063927771e-30
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
33.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
278 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 1: replace operand
1 0
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
279 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 6
Case 1: replace operand
2 0
37.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
280 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
281 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 1: replace operand
1 0
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
282 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 6: replace all operands
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
283 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 6
Case 2: Swap two instructions
34.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
284 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 3: replace a new instruction
25.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
285 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 1: replace operand
1 1
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
286 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 1: replace operand
0 0
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
287 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
2 1
33.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
288 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 6: replace all operands
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
289 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 4
Case 1: replace operand
1 3
41.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
290 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 1: replace operand
2 2
25.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
291 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 9
Case 6: replace all operands
26.0 : There are 10 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
292 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 1: replace operand
2 2
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
293 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 2
Case 1: replace operand
2 3
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
294 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 1: replace operand
0 1
38.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
295 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 2: Swap two instructions
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
296 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 6
Case 1: replace operand
0 0
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
297 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 9
Case 1: replace operand
2 2
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
298 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 7
Case 1: replace operand
0 0
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
299 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 8
Case 1: replace operand
1 3
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
300 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 2: Swap two instructions
28.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
301 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 4
Case 2: Swap two instructions
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
302 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
1 3
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
303 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
1 0
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
304 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 2: Swap two instructions
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
305 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 1: replace operand
0 3
32.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
306 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
24.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 24.000000
-------------------
307 0.0497870683679
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 2: Swap two instructions
32.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
308 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 5
Case 1: replace operand
2 1
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
309 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 4
Case 1: replace operand
2 0
43.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
310 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 4
Case 2: Swap two instructions
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
311 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 2
Case 2: Swap two instructions
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
312 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 2
Case 1: replace operand
1 0
32.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
313 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 1
Case 1: replace operand
0 3
29.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
314 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
0 0
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
315 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 1: replace operand
0 3
43.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
316 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 5: Insert an instruction
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
317 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 10
Case 5: Insert an instruction
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
318 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 12 number of failed testcases.
random instr 3
Case 1: replace operand
2 2
23.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 23.000000
-------------------
319 1
Accepting the new proposal...
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 5: Insert an instruction
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
320 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
321 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 1: replace operand
2 1
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
322 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 3: replace a new instruction
37.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
323 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 8
Case 1: replace operand
0 0
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
324 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 6: replace all operands
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
325 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 2: Swap two instructions
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
326 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
2 3
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
327 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 3: replace a new instruction
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
328 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
2 2
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
329 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 3: replace a new instruction
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
330 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
1 0
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
331 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 8
Case 1: replace operand
1 2
42.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
332 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 1: replace operand
1 3
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
333 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 4: remove a random instruction
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
334 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 4: remove a random instruction
28.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
335 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
1 3
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
336 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 8
Case 1: replace operand
1 3
38.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
337 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 1: replace operand
1 0
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
338 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
2 0
24.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 24.000000
-------------------
339 0.0497870683679
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 3: replace a new instruction
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
340 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
341 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 2: Swap two instructions
28.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
342 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
1 1
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
343 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 2: Swap two instructions
36.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
344 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
0 3
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
345 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
1 0
48.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 48.000000
-------------------
346 2.67863696181e-33
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 6: replace all operands
30.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
347 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 6: replace all operands
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
348 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 3: replace a new instruction
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
349 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
2 0
42.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
350 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
0 3
27.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
351 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
0 1
47.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 47.000000
-------------------
352 5.38018616002e-32
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 5: Insert an instruction
27.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
353 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 2: Swap two instructions
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
354 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
2 2
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
355 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
26.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
356 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
357 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 1: replace operand
0 2
42.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
358 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
359 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
1 0
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
360 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 1: replace operand
0 2
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
361 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 8
Case 3: replace a new instruction
46.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 46.000000
-------------------
362 1.08063927771e-30
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 2: Swap two instructions
26.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
363 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 2: Swap two instructions
27.0 : There are 10 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
364 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
1 2
40.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 40.000000
-------------------
365 7.09547416228e-23
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 1: replace operand
1 0
28.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
366 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
2 3
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
367 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
2 1
29.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
368 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 4: remove a random instruction
31.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
369 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 2: Swap two instructions
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
370 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 3: replace a new instruction
33.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
371 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 1: replace operand
2 1
28.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
372 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 1: replace operand
1 0
38.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
373 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 2: Swap two instructions
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
374 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
2 3
34.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
375 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 3: replace a new instruction
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
376 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 2: Swap two instructions
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
377 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 2: Swap two instructions
33.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
378 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 2: Swap two instructions
43.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
379 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 1: replace operand
0 3
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
380 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 4: remove a random instruction
31.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
381 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
1 3
38.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
382 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 4: remove a random instruction
29.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
383 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 3: replace a new instruction
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
384 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 6: replace all operands
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
385 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
1 0
28.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 28.000000
-------------------
386 3.05902320502e-07
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 4: remove a random instruction
37.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
387 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 5: Insert an instruction
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
388 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 6: replace all operands
30.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
389 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
1 1
32.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
390 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 2: Swap two instructions
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
391 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 1: replace operand
2 2
52.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 52.000000
-------------------
392 1.64581143108e-38
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
30.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
393 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
0 2
29.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
394 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 8
Case 4: remove a random instruction
24.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 24.000000
-------------------
395 0.0497870683679
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 4: remove a random instruction
48.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 48.000000
-------------------
396 2.67863696181e-33
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
1 2
44.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
397 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
1 2
30.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 30.000000
-------------------
398 7.58256042791e-10
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 1: replace operand
2 0
32.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
399 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 7
Case 6: replace all operands
33.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
400 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 3: replace a new instruction
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
401 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 3: replace a new instruction
34.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
402 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
1 3
49.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 49.000000
-------------------
403 1.3336148155e-34
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 1: replace operand
1 0
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
404 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
405 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 2: Swap two instructions
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
406 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 6: replace all operands
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
407 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 9
Case 6: replace all operands
33.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
408 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 2
Case 1: replace operand
0 2
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
409 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
2 1
45.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
410 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 1
Case 6: replace all operands
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
411 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 6: replace all operands
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
412 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 8
Case 1: replace operand
0 2
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
413 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
1 2
42.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
414 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 5
Case 6: replace all operands
25.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 25.000000
-------------------
415 0.00247875217667
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 6
Case 1: replace operand
1 0
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
416 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 4
Case 1: replace operand
1 3
45.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
417 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 6: replace all operands
43.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
418 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 1: replace operand
2 1
38.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
419 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 10
Case 1: replace operand
0 2
43.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 43.000000
-------------------
420 8.7565107627e-27
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 14 number of failed testcases.
random instr 3
Case 4: remove a random instruction
23.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 23.000000
-------------------
421 1
Accepting the new proposal...
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 8
Case 6: replace all operands
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
422 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 4
Case 2: Swap two instructions
33.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
423 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 4
Case 1: replace operand
0 1
39.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
424 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 2: Swap two instructions
46.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 46.000000
-------------------
425 1.08063927771e-30
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 1: replace operand
1 1
39.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
426 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
2 3
32.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
427 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 6: replace all operands
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
428 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
42.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
429 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 6: replace all operands
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
430 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 3
Case 2: Swap two instructions
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
431 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
1 0
37.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
432 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 4
Case 1: replace operand
1 1
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
433 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
434 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 7
Case 6: replace all operands
41.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
435 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 4
Case 1: replace operand
0 3
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
436 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 1: replace operand
2 0
38.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
437 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 6: replace all operands
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
438 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 1: replace operand
2 1
26.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
439 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 1: replace operand
0 1
32.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
440 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
34.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
441 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 5: Insert an instruction
33.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 33.000000
-------------------
442 9.35762296884e-14
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 1: replace operand
1 2
27.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
443 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 3: replace a new instruction
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
444 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 1: replace operand
1 3
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
445 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 3: replace a new instruction
27.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 27.000000
-------------------
446 6.14421235333e-06
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 4
Case 1: replace operand
1 1
37.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
447 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 6: replace all operands
36.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
448 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 1: replace operand
0 1
47.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 47.000000
-------------------
449 5.38018616002e-32
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 5
Case 6: replace all operands
44.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 44.000000
-------------------
450 4.35961000006e-28
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 1: replace operand
0 0
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
451 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 5
Case 6: replace all operands
29.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 29.000000
-------------------
452 1.52299797447e-08
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 6: replace all operands
45.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
453 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
1 1
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
454 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 3
Case 1: replace operand
2 0
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
455 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 1: replace operand
0 0
42.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 42.000000
-------------------
456 1.75879220242e-25
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 3: replace a new instruction
32.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 32.000000
-------------------
457 1.87952881654e-12
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 3
Case 1: replace operand
1 0
41.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 41.000000
-------------------
458 3.5326285722e-24
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 4
Case 6: replace all operands
38.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 38.000000
-------------------
459 2.86251858055e-20
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
2 1
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
460 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
1 2
37.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
461 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 1: replace operand
2 2
26.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 26.000000
-------------------
462 0.000123409804087
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 1: replace operand
1 3
35.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 35.000000
-------------------
463 2.31952283024e-16
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 1: replace operand
0 2
45.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 45.000000
-------------------
464 2.1705220113e-29
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 4: remove a random instruction
39.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 39.000000
-------------------
465 1.42516408274e-21
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 8
Case 1: replace operand
1 0
52.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 52.000000
-------------------
466 1.64581143108e-38
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 8
Case 1: replace operand
0 1
31.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
467 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 9
Case 2: Swap two instructions
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
468 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 2
Case 6: replace all operands
31.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 31.000000
-------------------
469 3.77513454428e-11
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 1: replace operand
1 0
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 37.000000
-------------------
470 5.74952226429e-19
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 5
Case 4: remove a random instruction
34.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 34.000000
-------------------
471 4.6588861451e-15
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 1
Case 1: replace operand
2 1
36.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 36.000000
-------------------
472 1.1548224173e-17
Best Cost:  23.0
-------------------
BEST Program:
Error = 23
23.0 : There are 11 number of failed testcases.
random instr 6
Case 2: Swap two instructions
20.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 23.000000
-------------------
New Cost: 20.000000
-------------------
473 1
Accepting the new proposal...
Best Cost:  23.0
Updating the best program...
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 1
24.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 24.000000
-------------------
474 6.14421235333e-06
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
2 0
23.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 23.000000
-------------------
475 0.000123409804087
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
2 0
36.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 36.000000
-------------------
476 1.42516408274e-21
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
0 0
29.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 29.000000
-------------------
477 1.87952881654e-12
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
1 3
55.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 55.000000
-------------------
478 2.5065674759e-46
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 5
Case 3: replace a new instruction
31.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 31.000000
-------------------
479 4.6588861451e-15
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 8
Case 1: replace operand
0 1
52.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 52.000000
-------------------
480 2.03109266273e-42
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
1 2
33.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 33.000000
-------------------
481 1.1548224173e-17
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 7
Case 6: replace all operands
41.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 41.000000
-------------------
482 4.35961000006e-28
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
0 1
26.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 26.000000
-------------------
483 1.52299797447e-08
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 6
Case 5: Insert an instruction
29.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 29.000000
-------------------
484 1.87952881654e-12
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 3
35.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 35.000000
-------------------
485 2.86251858055e-20
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 8
Case 6: replace all operands
29.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 29.000000
-------------------
486 1.87952881654e-12
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
0 0
25.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 25.000000
-------------------
487 3.05902320502e-07
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
0 1
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 37.000000
-------------------
488 7.09547416228e-23
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 9
Case 2: Swap two instructions
28.0 : There are 11 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 28.000000
-------------------
489 3.77513454428e-11
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 3
Case 1: replace operand
2 3
44.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 44.000000
-------------------
490 5.38018616002e-32
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 5
Case 4: remove a random instruction
28.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 28.000000
-------------------
491 3.77513454428e-11
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 3
Case 6: replace all operands
38.0 : There are 13 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 38.000000
-------------------
492 3.5326285722e-24
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 7
Case 1: replace operand
0 3
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 37.000000
-------------------
493 7.09547416228e-23
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
2 3
37.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 37.000000
-------------------
494 7.09547416228e-23
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 9
Case 1: replace operand
2 0
36.0 : There are 14 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 36.000000
-------------------
495 1.42516408274e-21
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 2
Case 2: Swap two instructions
42.0 : There are 16 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 42.000000
-------------------
496 2.1705220113e-29
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 1
Case 2: Swap two instructions
26.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 26.000000
-------------------
497 1.52299797447e-08
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 2
Case 1: replace operand
2 1
23.0 : There are 12 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 23.000000
-------------------
498 0.000123409804087
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
random instr 4
Case 1: replace operand
2 1
31.0 : There are 15 number of failed testcases.
-------------------
OLD Cost: 20.000000
-------------------
New Cost: 31.000000
-------------------
499 4.6588861451e-15
Best Cost:  20.0
-------------------
BEST Program:
Error = 20
20.0 : There are 13 number of failed testcases.
         4179817 function calls (3995020 primitive calls) in 21.097 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     8032   12.393    0.002   12.393    0.002 {posix.read}
     8032    2.047    0.000    2.047    0.000 {posix.fork}
     8033    1.808    0.000    1.808    0.000 {method 'read' of 'file' objects}
    16048    0.643    0.000    0.643    0.000 {method 'close' of 'file' objects}
     8024    0.589    0.000    0.589    0.000 {open}
     8032    0.542    0.000   15.232    0.002 subprocess.py:1187(_execute_child)
     8016    0.388    0.000    1.794    0.000 program.py:191(print2File)
      501    0.223    0.000   20.481    0.041 program.py:234(runProgram)
     8016    0.200    0.000    0.496    0.000 program.py:268(storeResults)
     8032    0.156    0.000   15.707    0.002 subprocess.py:650(__init__)
   234571    0.109    0.000    0.189    0.000 re.py:226(_compile)
     8032    0.105    0.000    0.105    0.000 {posix.fdopen}
    64256    0.098    0.000    0.098    0.000 {fcntl.fcntl}
142584/501    0.095    0.000    0.268    0.001 copy.py:145(deepcopy)
   530272    0.094    0.000    0.094    0.000 {method 'write' of 'file' objects}
     8032    0.086    0.000    0.086    0.000 {posix.waitpid}
     8032    0.074    0.000   17.860    0.002 subprocess.py:544(check_output)
     8016    0.068    0.000    0.088    0.000 program.py:125(initialization)
   232700    0.063    0.000    0.249    0.000 re.py:188(compile)
    24096    0.061    0.000    0.061    0.000 {posix.close}
     8032    0.060    0.000    2.059    0.000 subprocess.py:768(communicate)
   450077    0.056    0.000    0.056    0.000 {method 'get' of 'dict' objects}
   232984    0.053    0.000    0.053    0.000 {method 'search' of '_sre.SRE_Pattern' objects}
    32128    0.053    0.000    0.151    0.000 subprocess.py:1148(_set_cloexec_flag)
    24096    0.053    0.000   14.339    0.001 subprocess.py:473(_eintr_retry_call)
     8032    0.051    0.000    0.071    0.000 subprocess.py:1208(_close_in_parent)
    16064    0.044    0.000    0.044    0.000 {posix.pipe}
     8032    0.037    0.000    0.151    0.000 subprocess.py:1371(wait)
   127176    0.035    0.000    0.062    0.000 __init__.py:50(__get__)
     8032    0.034    0.000    0.199    0.000 subprocess.py:1099(_get_handles)
     1002    0.033    0.000    0.038    0.000 program.py:296(cost)
   126896    0.027    0.000    0.027    0.000 __init__.py:776(name)
    16087    0.027    0.000    0.027    0.000 {method 'split' of 'str' objects}
   151268    0.026    0.000    0.026    0.000 {range}
13449/501    0.026    0.000    0.266    0.001 copy.py:283(_deepcopy_inst)
    70494    0.024    0.000    0.032    0.000 copy.py:267(_keep_alive)
    16064    0.024    0.000    0.219    0.000 subprocess.py:1161(pipe_cloexec)
        1    0.023    0.023   20.783   20.783 synthesis.py:140(synthesize)
13449/501    0.023    0.000    0.258    0.001 copy.py:253(_deepcopy_dict)
   261686    0.023    0.000    0.023    0.000 {method 'append' of 'list' objects}
15954/3006    0.022    0.000    0.223    0.000 copy.py:226(_deepcopy_list)
        1    0.022    0.022    0.022    0.022 {posix.system}
     8016    0.021    0.000    0.034    0.000 program.py:176(measurement)
452511/452038    0.021    0.000    0.021    0.000 {len}
    48232    0.020    0.000    0.020    0.000 gates.py:66(__init__)
     8032    0.020    0.000    0.020    0.000 {gc.enable}
    55043    0.019    0.000    0.019    0.000 {hasattr}
32391/32388    0.017    0.000    0.018    0.000 {isinstance}
     8032    0.017    0.000    0.020    0.000 subprocess.py:802(poll)
     8032    0.014    0.000    0.022    0.000 subprocess.py:1330(_handle_exitstatus)
     8032    0.013    0.000    0.013    0.000 subprocess.py:458(_cleanup)
   258649    0.011    0.000    0.011    0.000 {id}
      359    0.010    0.000    0.015    0.000 sre_compile.py:178(_compile_charset)
     8080    0.009    0.000    0.009    0.000 {method 'remove' of 'set' objects}
        1    0.008    0.008    0.214    0.214 synthesis.py:6(<module>)
     8017    0.008    0.000    0.008    0.000 {method 'pop' of 'list' objects}
     8050    0.007    0.000    0.007    0.000 {method 'update' of 'set' objects}
     8032    0.007    0.000    0.008    0.000 subprocess.py:754(__del__)
     8124    0.006    0.000    0.006    0.000 {method 'replace' of 'str' objects}
  446/123    0.006    0.000    0.018    0.000 sre_parse.py:379(_parse)
      500    0.006    0.000    0.011    0.000 synthesis.py:28(rewrite)
  340/116    0.005    0.000    0.019    0.000 sre_parse.py:301(_parse_sub)
        1    0.005    0.005    0.005    0.005 collections.py:1(<module>)
       12    0.005    0.000    0.070    0.006 __init__.py:1(<module>)
       18    0.005    0.000    0.006    0.000 collections.py:288(namedtuple)
      911    0.004    0.000    0.016    0.000 copy.py:306(_reconstruct)
    16064    0.004    0.000    0.004    0.000 subprocess.py:1344(_internal_poll)
    14566    0.004    0.000    0.004    0.000 {method 'update' of 'dict' objects}
     8032    0.004    0.000    0.004    0.000 {method 'count' of 'list' objects}
      771    0.004    0.000    0.004    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
8321/8317    0.003    0.000    0.004    0.000 {method 'join' of 'str' objects}
     8032    0.003    0.000    0.003    0.000 {posix.WIFSIGNALED}
        1    0.003    0.003    0.004    0.004 overrides.py:1(<module>)
  880/116    0.003    0.000    0.020    0.000 sre_compile.py:32(_compile)
     8221    0.003    0.000    0.003    0.000 {method 'extend' of 'list' objects}
      359    0.003    0.000    0.005    0.000 sre_compile.py:207(_optimize_charset)
     8345    0.003    0.000    0.003    0.000 {getattr}
 1002/501    0.003    0.000    0.007    0.000 copy.py:234(_deepcopy_tuple)
     8032    0.003    0.000    0.003    0.000 {posix.WEXITSTATUS}
     2452    0.003    0.000    0.003    0.000 random.py:173(randrange)
        1    0.003    0.003    0.003    0.003 __init__.py:24(<module>)
     8032    0.003    0.000    0.003    0.000 {gc.isenabled}
     5556    0.003    0.000    0.003    0.000 sre_parse.py:182(__next)
        1    0.002    0.002    0.110    0.110 __init__.py:101(<module>)
     8032    0.002    0.000    0.002    0.000 {gc.disable}
       27    0.002    0.000    0.014    0.001 __init__.py:1041(_rc_params_in_file)
        1    0.002    0.002    0.017    0.017 _axes.py:1(<module>)
    26139    0.002    0.000    0.002    0.000 copy.py:198(_deepcopy_atomic)
      501    0.002    0.000    0.003    0.000 __init__.py:330(__call__)
  290/289    0.002    0.000    0.010    0.000 {__import__}
       12    0.002    0.000    0.005    0.000 artist.py:1149(_get_setters_and_targets)
        2    0.002    0.001    0.047    0.023 __init__.py:7(<module>)
        1    0.002    0.002    0.005    0.005 dates.py:137(<module>)
        1    0.002    0.002    0.002    0.002 __init__.py:86(<module>)
 1238/487    0.002    0.000    0.002    0.000 sre_parse.py:140(getwidth)
     2452    0.002    0.000    0.004    0.000 random.py:236(randint)
    10778    0.002    0.000    0.002    0.000 mathtext.py:2757(<genexpr>)
     8032    0.001    0.000    0.001    0.000 {posix.WIFEXITED}
        2    0.001    0.001    0.002    0.001 decoder.py:372(raw_decode)
        1    0.001    0.001    0.002    0.002 socket.py:45(<module>)
        1    0.001    0.001    0.020    0.020 fontconfig_pattern.py:7(<module>)
      373    0.001    0.000    0.003    0.000 colors.py:176(_to_rgba_no_colorcycle)
        1    0.001    0.001    0.096    0.096 pyplot.py:19(<module>)
        1    0.001    0.001    0.022    0.022 contour.py:3(<module>)
     1490    0.001    0.000    0.013    0.000 __init__.py:896(__setitem__)
     5217    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
        1    0.001    0.001    0.002    0.002 afm.py:35(<module>)
        1    0.001    0.001    0.046    0.046 colorbar.py:20(<module>)
       69    0.001    0.000    0.001    0.000 sre_compile.py:258(_mk_bitmap)
        1    0.001    0.001    0.002    0.002 Tkinter.py:31(<module>)
     3614    0.001    0.000    0.002    0.000 sre_parse.py:130(__getitem__)
       64    0.001    0.000    0.007    0.000 colors.py:706(from_list)
    13514    0.001    0.000    0.001    0.000 {method 'iteritems' of 'dict' objects}
     4717    0.001    0.000    0.004    0.000 sre_parse.py:201(get)
    12382    0.001    0.000    0.001    0.000 {method 'startswith' of 'unicode' objects}
        1    0.001    0.001    0.003    0.003 backend_bases.py:33(<module>)
    16035    0.001    0.000    0.001    0.000 {abs}
        1    0.001    0.001    0.007    0.007 textpath.py:3(<module>)
     1016    0.001    0.000    0.005    0.000 colors.py:142(to_rgba)
       27    0.001    0.000    0.001    0.000 {dir}
        1    0.001    0.001    0.009    0.009 cm.py:6(<module>)
        1    0.001    0.001    0.014    0.014 text.py:3(<module>)
       60    0.001    0.000    0.002    0.000 function_base.py:37(linspace)
        1    0.001    0.001    0.016    0.016 collections.py:10(<module>)
        1    0.001    0.001    0.003    0.003 _constrained_layout.py:16(<module>)
        7    0.001    0.000    0.001    0.000 {method 'readlines' of 'file' objects}
        1    0.001    0.001    0.021    0.021 _subplots.py:1(<module>)
       12    0.001    0.000    0.003    0.000 artist.py:1091(get_aliases)
      501    0.001    0.000    0.001    0.000 __init__.py:764(__reduce_ex__)
        1    0.001    0.001    0.008    0.008 numeric.py:1(<module>)
      605    0.001    0.000    0.001    0.000 inspect.py:744(getargs)
        1    0.001    0.001    0.001    0.001 case.py:1(<module>)
      501    0.001    0.000    0.001    0.000 __init__.py:644(__new__)
      324    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
        3    0.001    0.000    0.002    0.001 __init__.py:3(<module>)
        1    0.001    0.001    0.001    0.001 path.py:10(<module>)
      410    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
        1    0.001    0.001    0.003    0.003 __init__.py:41(<module>)
     1852    0.001    0.000    0.001    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
        1    0.001    0.001    0.017    0.017 pyparsing.py:96(<module>)
      957    0.001    0.000    0.004    0.000 {any}
        1    0.001    0.001    0.023    0.023 rcsetup.py:15(<module>)
      501    0.001    0.000    0.001    0.000 {math.exp}
        1    0.001    0.001    0.001    0.001 __init__.py:4(<module>)
        1    0.001    0.001    0.005    0.005 urllib2.py:76(<module>)
        1    0.001    0.001    0.040    0.040 __init__.py:106(<module>)
        1    0.001    0.001    0.002    0.002 __init__.py:15(<module>)
        1    0.001    0.001    0.004    0.004 mathtext.py:16(<module>)
        1    0.001    0.001    0.003    0.003 artist.py:1(<module>)
      397    0.001    0.000    0.004    0.000 artist.py:1120(get_valid_values)
     3171    0.001    0.000    0.001    0.000 {method 'split' of 'unicode' objects}
      605    0.001    0.000    0.003    0.000 inspect.py:804(getargspec)
        2    0.001    0.000    0.004    0.002 __init__.py:45(<module>)
   260/11    0.001    0.000    0.003    0.000 pyparsing.py:1633(_parseNoCache)
      233    0.001    0.000    0.001    0.000 pyparsing.py:1386(__init__)
      158    0.001    0.000    0.004    0.000 deprecation.py:163(deprecate)
        1    0.001    0.001    0.001    0.001 index_tricks.py:294(__init__)
        1    0.001    0.001    0.001    0.001 Image.py:27(<module>)
      522    0.001    0.000    0.001    0.000 {numpy.array}
        1    0.001    0.001    0.002    0.002 legend.py:22(<module>)
     2154    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x8e8040}
        1    0.001    0.001    0.003    0.003 index_tricks.py:1(<module>)
     2411    0.001    0.000    0.001    0.000 {min}
      116    0.001    0.000    0.003    0.000 sre_compile.py:359(_compile_info)
       70    0.001    0.000    0.001    0.000 generator.py:18(random)
        1    0.001    0.001    0.001    0.001 _globals.py:17(<module>)
     1472    0.001    0.000    0.002    0.000 colors.py:107(_is_nth_color)
        3    0.001    0.000    0.003    0.001 __init__.py:2(<module>)
       11    0.001    0.000    0.010    0.001 artist.py:1227(pprint_setters)
      456    0.001    0.000    0.005    0.000 rcsetup.py:373(validate_color)
        1    0.001    0.001    0.009    0.009 program.py:6(<module>)
      162    0.001    0.000    0.001    0.000 {method 'findall' of '_sre.SRE_Pattern' objects}
     3099    0.001    0.000    0.001    0.000 sre_parse.py:195(match)
     1395    0.001    0.000    0.002    0.000 re.py:134(match)
        1    0.001    0.001    0.001    0.001 npyio.py:1(<module>)
        1    0.001    0.001    0.002    0.002 _base.py:1(<module>)
        1    0.001    0.001    0.004    0.004 financial.py:12(<module>)
      259    0.001    0.000    0.001    0.000 functools.py:17(update_wrapper)
     4787    0.001    0.000    0.001    0.000 {method 'strip' of 'unicode' objects}
      698    0.001    0.000    0.001    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.006    0.006 _internal.py:6(<module>)
        1    0.000    0.000    0.004    0.004 font_manager.py:21(<module>)
        1    0.000    0.000    0.001    0.001 tz.py:9(<module>)
        1    0.000    0.000    0.000    0.000 ticker.py:260(Formatter)
      272    0.000    0.000    0.001    0.000 function_base.py:438(add_newdoc)
        1    0.000    0.000    0.004    0.004 httplib.py:67(<module>)
      410    0.000    0.000    0.003    0.000 copy.py:66(copy)
      150    0.000    0.000    0.007    0.000 cm.py:67(_generate_cmap)
        1    0.000    0.000    0.000    0.000 _factories.py:24(__init__)
        1    0.000    0.000    0.004    0.004 backend_tkagg.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:17(<module>)
        1    0.000    0.000    0.001    0.001 offsetbox.py:15(<module>)
        2    0.000    0.000    0.001    0.000 function_base.py:1(<module>)
        1    0.000    0.000    0.001    0.001 subprocess.py:387(<module>)
       84    0.000    0.000    0.000    0.000 docstring.py:44(__call__)
        1    0.000    0.000    0.051    0.051 program.py:76(genStates)
        1    0.000    0.000    0.000    0.000 hashlib.py:55(<module>)
      116    0.000    0.000    0.043    0.000 sre_compile.py:493(compile)
        1    0.000    0.000    0.001    0.001 six.py:21(<module>)
      383    0.000    0.000    0.000    0.000 {method 'join' of 'unicode' objects}
       27    0.000    0.000    0.001    0.000 {_io.open}
     1408    0.000    0.000    0.001    0.000 sre_parse.py:138(append)
      144    0.000    0.000    0.004    0.000 rcsetup.py:76(f)
        1    0.000    0.000    0.002    0.002 rrule.py:7(<module>)
     1260    0.000    0.000    0.000    0.000 colors.py:228(<genexpr>)
     1608    0.000    0.000    0.001    0.000 artist.py:1184(is_alias)
        1    0.000    0.000    0.002    0.002 core.py:21(<module>)
       16    0.000    0.000    0.003    0.000 {eval}
        1    0.000    0.000    0.001    0.001 gridspec.py:14(<module>)
      116    0.000    0.000    0.020    0.000 sre_parse.py:675(parse)
        1    0.000    0.000    0.002    0.002 colors.py:45(<module>)
      355    0.000    0.000    0.001    0.000 abc.py:128(__instancecheck__)
        1    0.000    0.000    0.000    0.000 linalg.py:10(<module>)
        1    0.000    0.000    0.001    0.001 _backend_tk.py:1(<module>)
        1    0.000    0.000    0.002    0.002 pyplot.py:2256(_setup_pyplot_info_docstrings)
      410    0.000    0.000    0.004    0.000 pyparsing.py:1409(copy)
      162    0.000    0.000    0.003    0.000 textwrap.py:374(dedent)
        1    0.000    0.000    0.002    0.002 lines.py:4(<module>)
        1    0.000    0.000    0.003    0.003 patches.py:3(<module>)
     3452    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.001    0.001 random.py:40(<module>)
     1753    0.000    0.000    0.000    0.000 sre_parse.py:126(__len__)
      456    0.000    0.000    0.004    0.000 colors.py:112(is_color_like)
       79    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 main.py:1(<module>)
      202    0.000    0.000    0.003    0.000 __init__.py:988(dedent)
      300    0.000    0.000    0.000    0.000 rcsetup.py:125(validate_bool)
        1    0.000    0.000    0.003    0.003 mlab.py:163(<module>)
        1    0.000    0.000    0.000    0.000 image.py:5(<module>)
      472    0.000    0.000    0.002    0.000 re.py:144(sub)
       15    0.000    0.000    0.000    0.000 arrayprint.py:463(wrapper)
  697/629    0.000    0.000    0.001    0.000 {issubclass}
    61/37    0.000    0.000    0.001    0.000 abc.py:148(__subclasscheck__)
      371    0.000    0.000    0.000    0.000 sre_compile.py:354(_simple)
        1    0.000    0.000    0.001    0.001 ticker.py:165(<module>)
  263/261    0.000    0.000    0.000    0.000 pyparsing.py:546(__init__)
        3    0.000    0.000    0.001    0.000 __init__.py:153(__new__)
        1    0.000    0.000    0.000    0.000 transforms.py:30(<module>)
       40    0.000    0.000    0.004    0.000 _abcoll.py:526(update)
        1    0.000    0.000    0.000    0.000 triangulation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 backend_tools.py:12(<module>)
        1    0.000    0.000    0.000    0.000 backend_agg.py:21(<module>)
        1    0.000    0.000    0.003    0.003 decimal.py:116(<module>)
        1    0.000    0.000    0.006    0.006 gates.py:6(<module>)
      158    0.000    0.000    0.000    0.000 deprecation.py:23(_generate_deprecation_message)
        1    0.000    0.000    0.000    0.000 scale.py:1(<module>)
      115    0.000    0.000    0.000    0.000 {posix.stat}
       22    0.000    0.000    0.001    0.000 abc.py:86(__new__)
     72/4    0.000    0.000    0.002    0.000 pyparsing.py:1821(_parseCache)
      312    0.000    0.000    0.000    0.000 font_manager.py:958(_json_decode)
        1    0.000    0.000    0.001    0.001 pickle.py:25(<module>)
       54    0.000    0.000    0.001    0.000 __init__.py:1023(_open_file_or_url)
        1    0.000    0.000    0.000    0.000 subprocess.py:14(<module>)
       39    0.000    0.000    0.001    0.000 __init__.py:1589(_add_data_doc)
      554    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        1    0.000    0.000    0.001    0.001 defmatrix.py:1(<module>)
        1    0.000    0.000    0.001    0.001 _type_aliases.py:24(<module>)
        1    0.000    0.000    0.000    0.000 arrayprint.py:5(<module>)
        1    0.000    0.000    0.001    0.001 axis.py:3(<module>)
        1    0.000    0.000    0.024    0.024 inspect.py:25(<module>)
        1    0.000    0.000    0.001    0.001 numerictypes.py:81(<module>)
       18    0.000    0.000    0.004    0.000 rcsetup.py:805(validate_cycler)
       75    0.000    0.000    0.000    0.000 {_codecs.ascii_decode}
  245/129    0.000    0.000    0.001    0.000 pyparsing.py:228(_ustr)
      572    0.000    0.000    0.003    0.000 colors.py:330(to_rgba)
      880    0.000    0.000    0.000    0.000 sre_parse.py:90(__init__)
        1    0.000    0.000    0.000    0.000 _mathtext_data.py:3(<module>)
      996    0.000    0.000    0.000    0.000 {setattr}
        1    0.000    0.000    0.007    0.007 generator.py:6(<module>)
        1    0.000    0.000    0.000    0.000 csv.py:4(<module>)
       25    0.000    0.000    0.002    0.000 traceback.py:281(extract_stack)
      116    0.000    0.000    0.023    0.000 sre_compile.py:478(_code)
     1513    0.000    0.000    0.000    0.000 {chr}
        1    0.000    0.000    0.000    0.000 widgets.py:10(<module>)
      244    0.000    0.000    0.003    0.000 rcsetup.py:357(validate_color_for_prop_cycle)
       67    0.000    0.000    0.001    0.000 pyparsing.py:3980(__init__)
        1    0.000    0.000    0.000    0.000 subprocess32.py:38(<module>)
        1    0.000    0.000    0.000    0.000 polynomial.py:57(<module>)
      255    0.000    0.000    0.000    0.000 sre_parse.py:257(_escape)
       75    0.000    0.000    0.000    0.000 cm.py:51(_reverse_cmap_spec)
        6    0.000    0.000    0.001    0.000 patches.py:1844(_pprint_styles)
      160    0.000    0.000    0.000    0.000 colors.py:431(__init__)
    63/11    0.000    0.000    0.003    0.000 pyparsing.py:4017(parseImpl)
      232    0.000    0.000    0.000    0.000 sre_compile.py:472(isstring)
      811    0.000    0.000    0.000    0.000 inspect.py:142(isfunction)
        1    0.000    0.000    0.022    0.022 tokenize.py:23(<module>)
      397    0.000    0.000    0.000    0.000 artist.py:1194(aliased_name)
        1    0.000    0.000    0.000    0.000 heapq.py:31(<module>)
        1    0.000    0.000   21.098   21.098 run_synthesis.py:6(<module>)
        1    0.000    0.000    0.000    0.000 urllib.py:23(<module>)
      312    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 fftpack.py:32(<module>)
      188    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.000    0.000    0.000    0.000 _cm_listed.py:1(<module>)
      116    0.000    0.000    0.000    0.000 {_sre.compile}
        1    0.000    0.000    0.000    0.000 io.py:34(<module>)
      605    0.000    0.000    0.000    0.000 <string>:8(__new__)
        1    0.000    0.000    0.000    0.000 _parser.py:30(<module>)
      124    0.000    0.000    0.000    0.000 threading.py:146(acquire)
        1    0.000    0.000    0.000    0.000 pyplot.py:1939(get_plot_commands)
        1    0.000    0.000    0.000    0.000 polar.py:1(<module>)
      605    0.000    0.000    0.000    0.000 inspect.py:67(ismethod)
      605    0.000    0.000    0.000    0.000 inspect.py:209(iscode)
       31    0.000    0.000    0.000    0.000 cm.py:34(revcmap)
        1    0.000    0.000    0.023    0.023 figure.py:12(<module>)
       92    0.000    0.000    0.000    0.000 {sorted}
       83    0.000    0.000    0.001    0.000 pyparsing.py:3839(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:10(<module>)
     56/9    0.000    0.000    0.003    0.000 pyparsing.py:3866(leaveWhitespace)
      437    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
      485    0.000    0.000    0.000    0.000 urllib.py:1206(<genexpr>)
        1    0.000    0.000    0.000    0.000 extras.py:10(<module>)
   114/56    0.000    0.000    0.003    0.000 pyparsing.py:3937(copy)
      485    0.000    0.000    0.000    0.000 urlparse.py:332(<genexpr>)
      132    0.000    0.000    0.001    0.000 deprecation.py:197(finalize)
        1    0.000    0.000    0.000    0.000 shutil.py:5(<module>)
       39    0.000    0.000    0.001    0.000 __init__.py:1664(param)
        1    0.000    0.000    0.002    0.002 __init__.py:99(<module>)
      255    0.000    0.000    0.000    0.000 functools.py:39(wraps)
       27    0.000    0.000    0.017    0.001 __init__.py:1119(rc_params_from_file)
       36    0.000    0.000    0.000    0.000 pyparsing.py:2848(__init__)
        1    0.000    0.000    0.004    0.004 multiarray.py:7(<module>)
       67    0.000    0.000    0.001    0.000 pyparsing.py:4410(__init__)
      407    0.000    0.000    0.000    0.000 six.py:184(find_module)
       60    0.000    0.000    0.001    0.000 fromnumeric.py:69(_wrapreduction)
        1    0.000    0.000    0.000    0.000 __init__.py:265(_reset_cache)
        1    0.000    0.000    0.000    0.000 mimetools.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _color_data.py:995(<dictcomp>)
       19    0.000    0.000    0.001    0.000 _add_newdocs.py:6664(add_newdoc_for_scalar_type)
        1    0.000    0.000    0.000    0.000 legend_handler.py:25(<module>)
        1    0.000    0.000    0.003    0.003 mathtext.py:2756(<lambda>)
       27    0.000    0.000    0.006    0.000 pyparsing.py:3263(__init__)
      124    0.000    0.000    0.000    0.000 threading.py:186(release)
      643    0.000    0.000    0.000    0.000 collections.py:329(<genexpr>)
      263    0.000    0.000    0.000    0.000 pyparsing.py:537(__new__)
      432    0.000    0.000    0.000    0.000 colors.py:196(<genexpr>)
       19    0.000    0.000    0.000    0.000 path.py:101(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:3157(ArrowStyle)
       10    0.000    0.000    0.000    0.000 collections.py:38(__init__)
      410    0.000    0.000    0.000    0.000 copy_reg.py:92(__newobj__)
        1    0.000    0.000    0.000    0.000 threading.py:1(<module>)
        6    0.000    0.000    0.000    0.000 patches.py:1807(_pprint_table)
      103    0.000    0.000    0.000    0.000 collections.py:54(__setitem__)
        1    0.000    0.000    0.002    0.002 dviread.py:19(<module>)
        1    0.000    0.000    0.001    0.001 scanner.py:2(<module>)
      529    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.001    0.001 result.py:1(<module>)
        1    0.000    0.000    0.000    0.000 _factories.py:1(<module>)
       27    0.000    0.000    0.000    0.000 posixpath.py:336(normpath)
        6    0.000    0.000    0.001    0.000 getlimits.py:37(__init__)
      102    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
     33/5    0.000    0.000    0.001    0.000 pyparsing.py:3897(streamline)
       10    0.000    0.000    0.002    0.000 pyparsing.py:3118(__init__)
        1    0.000    0.000    0.000    0.000 py3k.py:4(<module>)
       53    0.000    0.000    0.000    0.000 core.py:892(__init__)
      317    0.000    0.000    0.000    0.000 overrides.py:146(decorator)
      126    0.000    0.000    0.000    0.000 colors.py:632(__init__)
        4    0.000    0.000    0.000    0.000 rcsetup.py:476(validate_whiskers)
        1    0.000    0.000    0.000    0.000 utils.py:4(<module>)
      449    0.000    0.000    0.000    0.000 {max}
       25    0.000    0.000    0.001    0.000 pyparsing.py:1275(_trim_arity)
     1586    0.000    0.000    0.000    0.000 sre_compile.py:24(_identityfunction)
        1    0.000    0.000    0.003    0.003 _axes.py:96(Axes)
        1    0.000    0.000    0.001    0.001 getlimits.py:96(_register_known_types)
      203    0.000    0.000    0.000    0.000 {all}
        1    0.000    0.000    0.000    0.000 category.py:13(<module>)
     1752    0.000    0.000    0.000    0.000 {ord}
      268    0.000    0.000    0.000    0.000 pyplot.py:2267(pad)
       18    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
      158    0.000    0.000    0.002    0.000 docstring.py:94(dedent)
        1    0.000    0.000    0.001    0.001 urlparse.py:29(<module>)
        1    0.000    0.000    0.000    0.000 fontconfig_pattern.py:38(FontconfigPatternParser)
     1341    0.000    0.000    0.000    0.000 _mathtext_data.py:1755(<genexpr>)
        1    0.000    0.000    0.014    0.014 core.py:191(read_style_directory)
        1    0.000    0.000    0.000    0.000 calendar.py:6(<module>)
       42    0.000    0.000    0.000    0.000 pyparsing.py:938(copy)
       54    0.000    0.000    0.000    0.000 pyparsing.py:3339(__str__)
       19    0.000    0.000    0.000    0.000 path.py:198(_update_values)
        1    0.000    0.000    0.000    0.000 runner.py:1(<module>)
      164    0.000    0.000    0.000    0.000 sre_parse.py:72(opengroup)
       88    0.000    0.000    0.000    0.000 __init__.py:930(__getitem__)
      117    0.000    0.000    0.000    0.000 sre_parse.py:178(__init__)
        1    0.000    0.000    0.008    0.008 pyparsing.py:6366(pyparsing_common)
        1    0.000    0.000    0.000    0.000 _iotools.py:3(<module>)
        1    0.000    0.000    0.000    0.000 einsumfunc.py:4(<module>)
        1    0.000    0.000    0.000    0.000 scimath.py:17(<module>)
       50    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:3(<module>)
       39    0.000    0.000    0.000    0.000 _inspect.py:142(formatargspec)
      276    0.000    0.000    0.000    0.000 rcsetup.py:160(validate_float)
      139    0.000    0.000    0.000    0.000 rcsetup.py:66(__call__)
      272    0.000    0.000    0.000    0.000 function_base.py:431(_add_docstring)
        1    0.000    0.000    0.001    0.001 _color_data.py:1(<module>)
      124    0.000    0.000    0.000    0.000 sre_parse.py:225(_class_escape)
      549    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}
       60    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
       59    0.000    0.000    0.023    0.000 {map}
       57    0.000    0.000    0.000    0.000 rcsetup.py:437(validate_fontsize)
       79    0.000    0.000    0.000    0.000 posixpath.py:68(join)
        1    0.000    0.000    0.001    0.001 decoder.py:2(<module>)
       17    0.000    0.000    0.000    0.000 __init__.py:1010(getLogger)
        1    0.000    0.000    0.000    0.000 core.py:2710(MaskedArray)
        1    0.000    0.000    0.000    0.000 util.py:1(<module>)
       18    0.000    0.000    0.000    0.000 __init__.py:578(__init__)
        1    0.000    0.000    0.000    0.000 _base.py:410(_AxesBase)
        2    0.000    0.000    0.002    0.001 _version.py:7(<module>)
      139    0.000    0.000    0.000    0.000 pyparsing.py:2563(__eq__)
        1    0.000    0.000    0.000    0.000 ast.py:27(<module>)
        4    0.000    0.000    0.000    0.000 numeric.py:3083(extend_all)
       60    0.000    0.000    0.000    0.000 {numpy.arange}
       66    0.000    0.000    0.001    0.000 pyparsing.py:2116(__add__)
       17    0.000    0.000    0.000    0.000 cycler.py:191(_from_iter)
        1    0.000    0.000    0.000    0.000 {posix.listdir}
        1    0.000    0.000    0.000    0.000 pyparsing.py:6731(pyparsing_unicode)
      547    0.000    0.000    0.000    0.000 {method 'lower' of 'unicode' objects}
       27    0.000    0.000    0.001    0.000 core.py:181(iter_style_files)
       50    0.000    0.000    0.000    0.000 __init__.py:409(__setattr__)
        1    0.000    0.000    0.000    0.000 dis.py:1(<module>)
      252    0.000    0.000    0.000    0.000 {numpy.can_cast}
      103    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        1    0.000    0.000    0.000    0.000 quiver.py:15(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1944(BoxStyle)
        1    0.000    0.000    0.002    0.002 _add_newdocs.py:10(<module>)
        1    0.000    0.000    0.000    0.000 defchararray.py:17(<module>)
       79    0.000    0.000    0.002    0.000 docstring.py:113(dedent_interpd)
        1    0.000    0.000    0.002    0.002 tkagg.py:1(<module>)
      121    0.000    0.000    0.000    0.000 pyparsing.py:1614(preParse)
        1    0.000    0.000    0.000    0.000 geo.py:1(<module>)
     1758    0.000    0.000    0.000    0.000 {callable}
       48    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 type_check.py:3(<module>)
        1    0.000    0.000    0.000    0.000 hermite.py:60(<module>)
       80    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
       51    0.000    0.000    0.000    0.000 _internal.py:843(_ufunc_doc_signature_formatter)
      149    0.000    0.000    0.000    0.000 inspect.py:472(getmodule)
      164    0.000    0.000    0.000    0.000 sre_parse.py:83(closegroup)
       11    0.000    0.000    0.012    0.001 artist.py:1474(kwdoc)
       24    0.000    0.000    0.003    0.000 functools_lru_cache.py:120(wrapper)
       27    0.000    0.000    0.000    0.000 contextlib.py:21(__exit__)
       76    0.000    0.000    0.000    0.000 __init__.py:517(iterable)
        1    0.000    0.000    0.000    0.000 colors.py:80(<dictcomp>)
       37    0.000    0.000    0.000    0.000 pyparsing.py:3308(parseImpl)
        1    0.000    0.000    0.000    0.000 streamplot.py:4(<module>)
        2    0.000    0.000    0.000    0.000 utils.py:118(deprecate)
       22    0.000    0.000    0.000    0.000 collections.py:108(items)
       21    0.000    0.000    0.001    0.000 pyparsing.py:1504(setParseAction)
      361    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      651    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 opcode.py:5(<module>)
      115    0.000    0.000    0.000    0.000 {repr}
       58    0.000    0.000    0.000    0.000 linecache.py:43(checkcache)
       16    0.000    0.000    0.002    0.000 rcsetup.py:720(cycler)
        1    0.000    0.000    0.000    0.000 records.py:36(<module>)
        1    0.000    0.000    0.000    0.000 decorators.py:15(<module>)
        1    0.000    0.000    0.001    0.001 markers.py:84(<module>)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:100(FigureCanvasTk)
    24/12    0.000    0.000    0.001    0.000 pyparsing.py:4217(parseImpl)
        1    0.000    0.000    0.000    0.000 polynomial.py:4(<module>)
      130    0.000    0.000    0.000    0.000 {method 'ljust' of 'unicode' objects}
       34    0.000    0.000    0.000    0.000 sre_parse.py:216(isname)
       17    0.000    0.000    0.000    0.000 __init__.py:1112(__init__)
     24/4    0.000    0.000    0.001    0.000 pyparsing.py:3999(streamline)
        1    0.000    0.000    0.000    0.000 text.py:119(Text)
      317    0.000    0.000    0.000    0.000 overrides.py:111(array_function_dispatch)
       10    0.000    0.000    0.000    0.000 {method 'split' of '_sre.SRE_Pattern' objects}
        7    0.000    0.000    0.001    0.000 linecache.py:68(updatecache)
       83    0.000    0.000    0.000    0.000 pyparsing.py:2806(__init__)
       12    0.000    0.000    0.003    0.000 artist.py:1071(__init__)
        1    0.000    0.000    0.000    0.000 defchararray.py:1824(chararray)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:154(_add_integer_aliases)
        1    0.000    0.000    0.000    0.000 _common.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3248(Regex)
        1    0.000    0.000    0.000    0.000 backend_agg.py:71(RendererAgg)
       60    0.000    0.000    0.000    0.000 {numpy.result_type}
       39    0.000    0.000    0.000    0.000 _inspect.py:67(getargs)
        1    0.000    0.000    0.000    0.000 polyutils.py:45(<module>)
      371    0.000    0.000    0.000    0.000 sre_parse.py:134(__setitem__)
       72    0.000    0.000    0.000    0.000 pyparsing.py:1766(set)
        1    0.000    0.000    0.000    0.000 deprecation.py:1(<module>)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:3(<module>)
       26    0.000    0.000    0.000    0.000 deprecation.py:174(finalize)
        1    0.000    0.000    0.000    0.000 _common.py:6(weekday)
       70    0.000    0.000    0.001    0.000 generator.py:50(generation)
       60    0.000    0.000    0.001    0.000 fromnumeric.py:2083(any)
        1    0.000    0.000    0.001    0.001 texmanager.py:34(<module>)
        1    0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
      297    0.000    0.000    0.000    0.000 __init__.py:878(<genexpr>)
       60    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
      254    0.000    0.000    0.000    0.000 pyparsing.py:3851(<genexpr>)
        1    0.000    0.000    0.000    0.000 base64.py:3(<module>)
       42    0.000    0.000    0.000    0.000 __init__.py:105(__setitem__)
        1    0.000    0.000    0.000    0.000 patches.py:2729(_Base)
        1    0.000    0.000    0.000    0.000 patches.py:2687(ConnectionStyle)
       93    0.000    0.000    0.000    0.000 pyparsing.py:296(__init__)
        1    0.000    0.000    0.000    0.000 getlimits.py:3(<module>)
        1    0.000    0.000    0.001    0.001 table.py:21(<module>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:51(<module>)
      280    0.000    0.000    0.000    0.000 __init__.py:782(value)
       25    0.000    0.000    0.000    0.000 rcsetup.py:303(__call__)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:115(_add_aliases)
       30    0.000    0.000    0.000    0.000 getlimits.py:43(<lambda>)
        1    0.000    0.000    0.000    0.000 blocking_input.py:23(<module>)
        1    0.000    0.000    0.000    0.000 _datasource.py:35(<module>)
      116    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
      288    0.000    0.000    0.000    0.000 pyparsing.py:2577(__hash__)
       32    0.000    0.000    0.000    0.000 warnings.py:339(__enter__)
      135    0.000    0.000    0.000    0.000 rcsetup.py:414(validate_string)
       43    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
       44    0.000    0.000    0.000    0.000 rcsetup.py:648(__call__)
       16    0.000    0.000    0.000    0.000 __init__.py:1056(_fixupParents)
        1    0.000    0.000    0.000    0.000 <string>:1(DecimalTuple)
        1    0.000    0.000    0.000    0.000 utils.py:1(<module>)
       22    0.000    0.000    0.000    0.000 artist.py:37(allow_rasterization)
       79    0.000    0.000    0.001    0.000 docstring.py:128(<lambda>)
       25    0.000    0.000    0.000    0.000 pyparsing.py:4809(__init__)
       21    0.000    0.000    0.000    0.000 pyparsing.py:3203(__str__)
      402    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       70    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        2    0.000    0.000    0.000    0.000 shape_base.py:1(<module>)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
      149    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_managers.py:5(<module>)
       58    0.000    0.000    0.001    0.000 linecache.py:13(getline)
        3    0.000    0.000    0.000    0.000 __init__.py:78(CFUNCTYPE)
       70    0.000    0.000    0.000    0.000 gates.py:47(univGates)
      158    0.000    0.000    0.000    0.000 deprecation.py:110(deprecated)
        1    0.000    0.000    0.003    0.003 mathtext.py:2209(Parser)
        1    0.000    0.000    0.000    0.000 _string_helpers.py:5(<module>)
        1    0.000    0.000    0.000    0.000 hex_codec.py:8(<module>)
        1    0.000    0.000    0.000    0.000 signals.py:1(<module>)
        1    0.000    0.000    0.001    0.001 version.py:27(<module>)
       42    0.000    0.000    0.000    0.000 pyparsing.py:1305(wrapper)
      120    0.000    0.000    0.000    0.000 numeric.py:541(asanyarray)
       14    0.000    0.000    0.000    0.000 __init__.py:147(_check_size)
       26    0.000    0.000    0.000    0.000 core.py:6572(getdoc)
        1    0.000    0.000    0.000    0.000 bezier.py:3(<module>)
        1    0.000    0.000    0.000    0.000 _endian.py:4(<module>)
       70    0.000    0.000    0.000    0.000 rcsetup.py:217(validate_int)
        1    0.000    0.000   20.874   20.874 run_synthesis.py:11(main)
        3    0.000    0.000    0.000    0.000 backend_bases.py:212(export)
       24    0.000    0.000    0.000    0.000 dviread.py:164(decorate)
        1    0.000    0.000    0.000    0.000 ssl.py:56(<module>)
        1    0.000    0.000    0.000    0.000 six.py:699(exec_)
        1    0.000    0.000    0.000    0.000 container.py:1(<module>)
        1    0.000    0.000    0.000    0.000 isoparser.py:9(<module>)
       36    0.000    0.000    0.000    0.000 posixpath.py:258(expanduser)
       48    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 encoder.py:2(<module>)
      193    0.000    0.000    0.000    0.000 {method 'replace' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 units.py:43(<module>)
       54    0.000    0.000    0.001    0.000 pyplot.py:2585(<lambda>)
      249    0.000    0.000    0.000    0.000 threading.py:63(_note)
       34    0.000    0.000    0.000    0.000 colors.py:785(__init__)
        1    0.000    0.000    0.000    0.000 relativedelta.py:2(<module>)
       44    0.000    0.000    0.000    0.000 core.py:146(get_object_signature)
       14    0.000    0.000    0.008    0.001 six.py:91(__get__)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:370(<dictcomp>)
       44    0.000    0.000    0.000    0.000 _inspect.py:98(getargspec)
       88    0.000    0.000    0.000    0.000 six.py:141(__init__)
        1    0.000    0.000    0.001    0.001 pyparsing.py:5774(_makeTags)
        1    0.000    0.000    0.000    0.000 loader.py:1(<module>)
       75    0.000    0.000    0.000    0.000 ascii.py:25(decode)
      138    0.000    0.000    0.000    0.000 pyparsing.py:2428(setWhitespaceChars)
       22    0.000    0.000    0.000    0.000 rcsetup.py:64(<dictcomp>)
       61    0.000    0.000    0.000    0.000 generator.py:12(__init__)
        1    0.000    0.000    0.000    0.000 markers.py:109(MarkerStyle)
       47    0.000    0.000    0.000    0.000 pyparsing.py:2874(parseImpl)
        3    0.000    0.000    0.001    0.000 six.py:837(wrapper)
      116    0.000    0.000    0.000    0.000 pyparsing.py:2523(__str__)
        1    0.000    0.000    0.000    0.000 gzip.py:4(<module>)
     32/9    0.000    0.000    0.004    0.000 pyparsing.py:4434(leaveWhitespace)
       18    0.000    0.000    0.001    0.000 pyparsing.py:4747(parseImpl)
        1    0.000    0.000    0.000    0.000 tight_layout.py:10(<module>)
       20    0.000    0.000    0.001    0.000 pyparsing.py:4815(parseImpl)
      209    0.000    0.000    0.000    0.000 {_sre.getlower}
        1    0.000    0.000    0.000    0.000 token.py:1(<module>)
       20    0.000    0.000    0.001    0.000 pyparsing.py:4654(parseImpl)
      297    0.000    0.000    0.000    0.000 {numpy.core._multiarray_umath.add_docstring}
      101    0.000    0.000    0.000    0.000 _inspect.py:133(strseq)
       20    0.000    0.000    0.000    0.000 pyparsing.py:1846(resetCache)
       12    0.000    0.000    0.000    0.000 rcsetup.py:886(validate_animation_writer_path)
      204    0.000    0.000    0.000    0.000 patches.py:1822(<genexpr>)
        1    0.000    0.000    0.000    0.000 contour.py:737(ContourSet)
        1    0.000    0.000    0.000    0.000 pyparsing.py:1343(ParserElement)
        1    0.000    0.000    0.000    0.000 _cm.py:7(<module>)
        1    0.000    0.000    0.000    0.000 program.py:110(genGates)
      158    0.000    0.000    0.000    0.000 pyparsing.py:3994(<genexpr>)
       32    0.000    0.000    0.000    0.000 warnings.py:355(__exit__)
       18    0.000    0.000    0.000    0.000 abc.py:105(register)
        1    0.000    0.000    0.000    0.000 pkgutil.py:482(extend_path)
       17    0.000    0.000    0.000    0.000 __init__.py:1552(getLogger)
       60    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
      545    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        3    0.000    0.000    0.000    0.000 __init__.py:35(__deprecate_private_class)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:79(bitname)
        4    0.000    0.000    0.000    0.000 __init__.py:649(_get_config_or_cache_dir)
        1    0.000    0.000    0.000    0.000 difflib.py:27(<module>)
       65    0.000    0.000    0.000    0.000 six.py:604(iteritems)
       45    0.000    0.000    0.000    0.000 pyparsing.py:1438(setName)
        1    0.000    0.000    0.000    0.000 helper.py:4(<module>)
      149    0.000    0.000    0.000    0.000 inspect.py:51(ismodule)
        3    0.000    0.000    0.000    0.000 __init__.py:493(PYFUNCTYPE)
        1    0.000    0.000    0.000    0.000 arrayterator.py:9(<module>)
       60    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       60    0.000    0.000    0.000    0.000 function_base.py:20(_index_deprecate)
        1    0.000    0.000    0.000    0.000 docstring.py:1(<module>)
       91    0.000    0.000    0.000    0.000 collections.py:353(<genexpr>)
       61    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 ascii.py:8(<module>)
       16    0.000    0.000    0.000    0.000 pyparsing.py:4204(__init__)
        1    0.000    0.000    0.000    0.000 dviread.py:182(Dvi)
        1    0.000    0.000    0.000    0.000 posixpath.py:89(split)
        1    0.000    0.000    0.000    0.000 _dtype_ctypes.py:24(<module>)
       46    0.000    0.000    0.000    0.000 rcsetup.py:920(_validate_linestyle)
       17    0.000    0.000    0.000    0.000 cycler.py:55(_process_keys)
        1    0.000    0.000    0.000    0.000 __config__.py:3(<module>)
       54    0.000    0.000    0.000    0.000 docstring.py:88(__call__)
        1    0.000    0.000    0.000    0.000 twodim_base.py:3(<module>)
      242    0.000    0.000    0.000    0.000 collections.py:73(__iter__)
      132    0.000    0.000    0.000    0.000 six.py:88(__init__)
      233    0.000    0.000    0.000    0.000 {method 'end' of '_sre.SRE_Match' objects}
       29    0.000    0.000    0.004    0.000 __init__.py:893(__init__)
       60    0.000    0.000    0.000    0.000 _methods.py:42(_any)
        1    0.000    0.000    0.000    0.000 contextlib.py:1(<module>)
       19    0.000    0.000    0.000    0.000 __init__.py:2044(_to_unmasked_float_array)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:601(_ReducedHCT_Element)
        1    0.000    0.000    0.000    0.000 __init__.py:869(RcParams)
        5    0.000    0.000    0.000    0.000 warnings.py:45(filterwarnings)
        1    0.000    0.000    0.001    0.001 fontconfig_pattern.py:73(__init__)
       16    0.000    0.000    0.000    0.000 pyparsing.py:3175(parseImpl)
      119    0.000    0.000    0.000    0.000 opcode.py:27(def_op)
       32    0.000    0.000    0.000    0.000 warnings.py:318(__init__)
       80    0.000    0.000    0.000    0.000 docstring.py:102(do_copy)
       11    0.000    0.000    0.004    0.000 pyparsing.py:1887(parseString)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
       30    0.000    0.000    0.000    0.000 _type_aliases.py:238(_add_array_type)
       60    0.000    0.000    0.000    0.000 numeric.py:2035(isscalar)
        1    0.000    0.000    0.001    0.001 texmanager.py:83(TexManager)
        1    0.000    0.000    0.000    0.000 umath.py:7(<module>)
        1    0.000    0.000    0.004    0.004 platform.py:10(<module>)
       54    0.000    0.000    0.000    0.000 pyplot.py:2579(_autogen_docstring)
       39    0.000    0.000    0.000    0.000 __init__.py:1624(_preprocess_data)
       64    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 _pytesttester.py:29(<module>)
      105    0.000    0.000    0.000    0.000 threading.py:214(__exit__)
       58    0.000    0.000    0.000    0.000 {method 'acquire' of 'thread.lock' objects}
       25    0.000    0.000    0.000    0.000 genericpath.py:38(isdir)
        1    0.000    0.000    0.000    0.000 numbers.py:6(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:195(_sanity_check)
       14    0.000    0.000    0.000    0.000 genericpath.py:15(exists)
        1    0.000    0.000    0.000    0.000 nosetester.py:6(<module>)
       78    0.000    0.000    0.000    0.000 _internal.py:854(<genexpr>)
       27    0.000    0.000    0.000    0.000 contextlib.py:82(helper)
     13/9    0.000    0.000    0.000    0.000 __init__.py:405(wrapper)
       11    0.000    0.000    0.000    0.000 pyparsing.py:5422(_escapeRegexRangeChars)
       29    0.000    0.000    0.000    0.000 {method 'groupdict' of '_sre.SRE_Match' objects}
        1    0.000    0.000    0.000    0.000 figure.py:253(Figure)
      109    0.000    0.000    0.000    0.000 {iter}
        1    0.000    0.000    0.000    0.000 functools_lru_cache.py:1(<module>)
        6    0.000    0.000    0.000    0.000 decimal.py:515(__new__)
       17    0.000    0.000    0.000    0.000 cycler.py:112(__init__)
        2    0.000    0.000    0.000    0.000 {_ctypes.POINTER}
        1    0.000    0.000    0.000    0.000 trirefine.py:3(<module>)
       98    0.000    0.000    0.000    0.000 pyparsing.py:2529(streamline)
        1    0.000    0.000    0.000    0.000 socket.py:179(_socketobject)
       12    0.000    0.000    0.000    0.000 pyparsing.py:5641(<lambda>)
       27    0.000    0.000    0.000    0.000 posixpath.py:365(abspath)
        9    0.000    0.000    0.003    0.000 fontconfig_pattern.py:121(parse)
        8    0.000    0.000    0.000    0.000 collections.py:91(clear)
        4    0.000    0.000    0.000    0.000 functools_lru_cache.py:82(decorating_function)
        3    0.000    0.000    0.000    0.000 __init__.py:530(_find_new_)
        7    0.000    0.000    0.000    0.000 _parser.py:315(_convert)
        1    0.000    0.000    0.000    0.000 cycler.py:41(<module>)
        1    0.000    0.000    0.000    0.000 nanfunctions.py:22(<module>)
        1    0.000    0.000    0.000    0.000 legend.py:283(Legend)
       10    0.000    0.000    0.004    0.000 pyparsing.py:5088(__init__)
       16    0.000    0.000    0.000    0.000 pyparsing.py:844(__iadd__)
        1    0.000    0.000    0.000    0.000 trifinder.py:1(<module>)
        5    0.000    0.000    0.000    0.000 getlimits.py:497(__init__)
        6    0.000    0.000    0.000    0.000 weakref.py:47(__init__)
       15    0.000    0.000    0.000    0.000 arrayprint.py:1499(_array_str_implementation)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:7(<module>)
       24    0.000    0.000    0.003    0.000 rcsetup.py:454(validate_font_properties)
       45    0.000    0.000    0.000    0.000 docstring.py:48(update)
        1    0.000    0.000    0.000    0.000 lines.py:229(Line2D)
      282    0.000    0.000    0.000    0.000 pyparsing.py:3122(<genexpr>)
        1    0.000    0.000    0.000    0.000 spines.py:1(<module>)
       77    0.000    0.000    0.000    0.000 overrides.py:104(decorator)
       14    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
       17    0.000    0.000    0.000    0.000 cycler.py:468(cycler)
       27    0.000    0.000    0.001    0.000 contextlib.py:15(__enter__)
        1    0.000    0.000    0.000    0.000 colors.py:64(__init__)
       60    0.000    0.000    0.000    0.000 fromnumeric.py:2847(ndim)
       44    0.000    0.000    0.000    0.000 six.py:105(__init__)
       12    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       14    0.000    0.000    0.000    0.000 pyparsing.py:4474(__str__)
        1    0.000    0.000    0.000    0.000 __init__.py:855(mkdirs)
       19    0.000    0.000    0.000    0.000 __init__.py:210(_acquireLock)
     23/7    0.000    0.000    0.000    0.000 pyparsing.py:4453(streamline)
      265    0.000    0.000    0.000    0.000 {thread.get_ident}
        1    0.000    0.000    0.000    0.000 windowing.py:8(<module>)
       30    0.000    0.000    0.000    0.000 getlimits.py:19(_fr0)
      133    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 rcsetup.py:75(_listify_validator)
       10    0.000    0.000    0.000    0.000 pyparsing.py:4648(stopOn)
       58    0.000    0.000    0.001    0.000 linecache.py:33(getlines)
        1    0.000    0.000    0.000    0.000 numerictypes.py:445(_construct_lookups)
        1    0.000    0.000    0.000    0.000 chebyshev.py:89(<module>)
        1    0.000    0.000    0.000    0.000 path.py:26(Path)
       16    0.000    0.000    0.000    0.000 pyparsing.py:2270(__or__)
        1    0.000    0.000    0.000    0.000 _parser.py:574(parser)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:97(dtype_from_ctypes_type)
        1    0.000    0.000    0.000    0.000 __init__.py:349(__init__)
       32    0.000    0.000    0.000    0.000 rcsetup.py:802(<genexpr>)
       42    0.000    0.000    0.000    0.000 pyparsing.py:688(haskeys)
        1    0.000    0.000    0.000    0.000 Tkinter.py:377(Misc)
       16    0.000    0.000    0.000    0.000 program.py:19(__init__)
        3    0.000    0.000    0.000    0.000 decimal.py:3782(__init__)
       27    0.000    0.000    0.000    0.000 core.py:919(__init__)
        1    0.000    0.000    0.014    0.014 core.py:1(<module>)
       91    0.000    0.000    0.000    0.000 collections.py:355(<genexpr>)
      138    0.000    0.000    0.000    0.000 cycler.py:212(<genexpr>)
       17    0.000    0.000    0.000    0.000 cycler.py:529(_cycler)
        8    0.000    0.000    0.000    0.000 __init__.py:587(_get_home)
       86    0.000    0.000    0.000    0.000 pyparsing.py:4059(<genexpr>)
        1    0.000    0.000    0.000    0.000 geo.py:273(AitoffAxes)
       93    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       77    0.000    0.000    0.000    0.000 overrides.py:93(set_module)
       18    0.000    0.000    0.000    0.000 core.py:995(__init__)
        1    0.000    0.000    0.000    0.000 tricontour.py:1(<module>)
        1    0.000    0.000    0.000    0.000 machar.py:7(<module>)
       51    0.000    0.000    0.000    0.000 six.py:177(_add_module)
       90    0.000    0.000    0.000    0.000 cycler.py:138(keys)
       48    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       30    0.000    0.000    0.000    0.000 getlimits.py:27(_fr1)
        1    0.000    0.000    0.000    0.000 tempfile.py:18(<module>)
       13    0.000    0.000    0.000    0.000 contextlib.py:54(contextmanager)
        1    0.000    0.000    0.000    0.000 hermite_e.py:60(<module>)
        1    0.000    0.000    0.000    0.000 mixins.py:1(<module>)
       16    0.000    0.000    0.000    0.000 _type_aliases.py:66(_bits_of)
        1    0.000    0.000    0.022    0.022 program.py:73(compile)
      176    0.000    0.000    0.000    0.000 sre_parse.py:210(isident)
        7    0.000    0.000    0.000    0.000 threading.py:131(__init__)
        4    0.000    0.000    0.000    0.000 functools_lru_cache.py:10(update_wrapper)
       49    0.000    0.000    0.000    0.000 pyparsing.py:585(__getitem__)
        1    0.000    0.000    0.000    0.000 geo.py:20(GeoAxes)
      149    0.000    0.000    0.000    0.000 rcsetup.py:59(func)
        1    0.000    0.000    0.000    0.000 arraysetops.py:27(<module>)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:3(<module>)
       23    0.000    0.000    0.000    0.000 overrides.py:183(decorator)
       19    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 histograms.py:3(<module>)
       27    0.000    0.000    0.000    0.000 pyparsing.py:5066(__init__)
        1    0.000    0.000    0.000    0.000 legendre.py:83(<module>)
       44    0.000    0.000    0.000    0.000 __init__.py:70(_is_dunder)
       36    0.000    0.000    0.000    0.000 _add_newdocs.py:6670(<genexpr>)
        5    0.000    0.000    0.000    0.000 {numpy.empty}
      483    0.000    0.000    0.000    0.000 {globals}
        1    0.000    0.000    0.000    0.000 geo.py:324(HammerAxes)
       72    0.000    0.000    0.000    0.000 pyparsing.py:1763(get)
       16    0.000    0.000    0.000    0.000 pyparsing.py:4246(__str__)
    34/26    0.000    0.000    0.000    0.000 pyparsing.py:4054(__str__)
        4    0.000    0.000    0.000    0.000 six.py:195(load_module)
       23    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       27    0.000    0.000    0.000    0.000 locale.py:608(getpreferredencoding)
        1    0.000    0.000    0.000    0.000 cm.py:85(<dictcomp>)
       51    0.000    0.000    0.000    0.000 sre_compile.py:51(fixup)
        1    0.000    0.000    0.000    0.000 laguerre.py:60(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:2493(Locked)
       27    0.000    0.000    0.000    0.000 {_locale.nl_langinfo}
        1    0.000    0.000    0.000    0.000 tritools.py:3(<module>)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        4    0.000    0.000    0.000    0.000 {posix.access}
        1    0.000    0.000    0.000    0.000 _subplots.py:201(subplot_class_factory)
        2    0.000    0.000    0.000    0.000 core.py:2931(__array_finalize__)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 utils.py:75(__call__)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6765(Japanese)
        1    0.000    0.000    0.000    0.000 _polybase.py:19(ABCPolyBase)
       14    0.000    0.000    0.008    0.001 six.py:80(_import_module)
        1    0.000    0.000    0.000    0.000 __init__.py:2642(_StringFuncParser)
        1    0.000    0.000    0.000    0.000 decimal.py:506(Decimal)
        1    0.000    0.000    0.000    0.000 os.py:35(_get_exports_list)
        1    0.000    0.000    0.000    0.000 pyplot.py:121(install_repl_displayhook)
        1    0.000    0.000    0.000    0.000 traceback.py:27(format_list)
     12/2    0.000    0.000    0.000    0.000 pyparsing.py:2248(makeOptionalList)
        1    0.000    0.000    0.000    0.000 bisect.py:1(<module>)
       30    0.000    0.000    0.000    0.000 getlimits.py:42(<lambda>)
       97    0.000    0.000    0.000    0.000 pyparsing.py:5673(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:291(Verbose)
        1    0.000    0.000    0.000    0.000 geo.py:447(LambertAxes)
        2    0.000    0.000    0.000    0.000 __init__.py:71(search_function)
       26    0.000    0.000    0.000    0.000 core.py:6567(__init__)
        1    0.000    0.000    0.000    0.000 axis.py:691(Axis)
        1    0.000    0.000    0.000    0.000 _common.py:3(<module>)
       14    0.000    0.000    0.000    0.000 mixins.py:48(_numeric_methods)
       48    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 scale.py:587(get_scale_docs)
        6    0.000    0.000    0.000    0.000 version.py:268(parse)
       18    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
       26    0.000    0.000    0.000    0.000 posixpath.py:119(basename)
       17    0.000    0.000    0.000    0.000 genericpath.py:26(isfile)
       62    0.000    0.000    0.000    0.000 _inspect.py:146(<lambda>)
        1    0.000    0.000    0.000    0.000 geo.py:373(MollweideAxes)
        4    0.000    0.000    0.000    0.000 fontconfig_pattern.py:160(_property)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
       13    0.000    0.000    0.000    0.000 _dtype_ctypes.py:69(_from_ctypes_scalar)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1724(FigureCanvasBase)
        1    0.000    0.000    0.000    0.000 case.py:133(TestCase)
       36    0.000    0.000    0.000    0.000 getlimits.py:41(<lambda>)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:140(_family)
       14    0.000    0.000    0.000    0.000 __init__.py:2554(__init__)
       22    0.000    0.000    0.000    0.000 rcsetup.py:54(__init__)
       31    0.000    0.000    0.000    0.000 numeric.py:469(asarray)
        1    0.000    0.000    0.000    0.000 _parser.py:1363(_result)
       44    0.000    0.000    0.000    0.000 _inspect.py:15(ismethod)
        8    0.000    0.000    0.000    0.000 rcsetup.py:237(validate_fonttype)
        1    0.000    0.000    0.000    0.000 artist.py:74(Artist)
        1    0.000    0.000    0.002    0.002 font_manager.py:984(json_load)
       36    0.000    0.000    0.000    0.000 _string_helpers.py:16(english_lower)
        2    0.000    0.000    0.000    0.000 platform.py:1412(_sys_version)
      138    0.000    0.000    0.000    0.000 pyparsing.py:1629(postParse)
       48    0.000    0.000    0.000    0.000 pyparsing.py:4002(<genexpr>)
       10    0.000    0.000    0.000    0.000 UserDict.py:58(get)
       57    0.000    0.000    0.000    0.000 {method 'release' of 'thread.lock' objects}
       27    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       27    0.000    0.000    0.000    0.000 __init__.py:1012(is_url)
        7    0.000    0.000    0.000    0.000 threading.py:113(RLock)
       10    0.000    0.000    0.000    0.000 extras.py:242(getdoc)
       44    0.000    0.000    0.000    0.000 pyparsing.py:4251(<genexpr>)
        1    0.000    0.000    0.000    0.000 collections.py:36(Collection)
        2    0.000    0.000    0.000    0.000 {numpy.copyto}
       71    0.000    0.000    0.000    0.000 pyparsing.py:2419(leaveWhitespace)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:95(_add_types)
     20/6    0.000    0.000    0.001    0.000 pyparsing.py:4428(parseImpl)
        3    0.000    0.000    0.000    0.000 pyparsing.py:2193(__mul__)
        1    0.000    0.000    0.000    0.000 rrule.py:1306(rruleset)
       32    0.000    0.000    0.000    0.000 _type_aliases.py:68(<genexpr>)
        1    0.000    0.000    0.000    0.000 {posix.mkdir}
       18    0.000    0.000    0.000    0.000 __init__.py:182(_checkLevel)
       80    0.000    0.000    0.000    0.000 docstring.py:100(copy)
       21    0.000    0.000    0.000    0.000 mixins.py:20(_binary_method)
       36    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        6    0.000    0.000    0.000    0.000 numeric.py:2656(seterr)
        1    0.000    0.000    0.000    0.000 pickle.py:827(Unpickler)
        1    0.000    0.000    0.000    0.000 transforms.py:258(BboxBase)
        1    0.000    0.000    0.000    0.000 _iotools.py:493(StringConverter)
       26    0.000    0.000    0.000    0.000 core.py:57(is_style_file)
        1    0.000    0.000    0.001    0.001 fractions.py:4(<module>)
        4    0.000    0.000    0.000    0.000 function_base.py:2031(__init__)
        2    0.000    0.000    0.000    0.000 decoder.py:304(__init__)
        1    0.000    0.000    0.000    0.000 tz.py:1464(__get_gettz)
        1    0.000    0.000    0.000    0.000 _polybase.py:8(<module>)
        2    0.000    0.000    0.001    0.001 pyparsing.py:5647(srange)
        2    0.000    0.000    0.000    0.000 core.py:2905(_update_from)
        1    0.000    0.000    0.000    0.000 _util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 pyparsing.py:1852(enablePackrat)
        1    0.000    0.000    0.000    0.000 _parser.py:300(__init__)
        1    0.000    0.000    0.000    0.000 _internal.py:242(_missing_ctypes)
        2    0.000    0.000    0.000    0.000 __init__.py:635(_get_xdg_cache_dir)
       95    0.000    0.000    0.000    0.000 pyparsing.py:277(<genexpr>)
       42    0.000    0.000    0.000    0.000 pyparsing.py:1547(<genexpr>)
        6    0.000    0.000    0.000    0.000 {filter}
        1    0.000    0.000    0.000    0.000 _type_aliases.py:246(_set_array_types)
       11    0.000    0.000    0.006    0.001 six.py:159(_resolve)
        1    0.000    0.000    0.000    0.000 contour.py:54(ContourLabeler)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:187(_set_up_aliases)
        9    0.000    0.000    0.000    0.000 fontconfig_pattern.py:152(_families)
        1    0.000    0.000    0.000    0.000 mathtext.py:642(BakomaFonts)
        1    0.000    0.000    0.000    0.000 linalg.py:82(_determine_error_states)
        1    0.000    0.000    0.000    0.000 _parser.py:1361(_tzparser)
        2    0.000    0.000    0.000    0.000 helper.py:253(__init__)
        1    0.000    0.000    0.000    0.000 format.py:156(<module>)
        1    0.000    0.000    0.000    0.000 rfc822.py:71(<module>)
      200    0.000    0.000    0.000    0.000 {method 'start' of '_sre.SRE_Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 rcsetup.py:264(validate_backend)
        1    0.000    0.000    0.000    0.000 __init__.py:797(matplotlib_fname)
      9/3    0.000    0.000    0.000    0.000 pyparsing.py:4211(streamline)
       91    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        1    0.000    0.000    0.000    0.000 pyparsing.py:3956(And)
       26    0.000    0.000    0.000    0.000 __init__.py:62(_is_descriptor)
        1    0.000    0.000    0.000    0.000 image.py:183(_ImageBase)
       27    0.000    0.000    0.000    0.000 {method 'groups' of '_sre.SRE_Match' objects}
        1    0.000    0.000    0.000    0.000 FixTk.py:1(<module>)
        8    0.000    0.000    0.000    0.000 fontconfig_pattern.py:146(_name)
        2    0.000    0.000    0.000    0.000 pyparsing.py:5297(delimitedList)
        2    0.000    0.000    0.000    0.000 threading.py:259(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:828(gen_candidates)
        8    0.000    0.000    0.000    0.000 core.py:8012(getdoc)
       19    0.000    0.000    0.000    0.000 tokenize.py:45(group)
       12    0.000    0.000    0.000    0.000 inspect.py:59(isclass)
        6    0.000    0.000    0.000    0.000 core.py:1144(__init__)
       19    0.000    0.000    0.000    0.000 _methods.py:45(_all)
        1    0.000    0.000    0.000    0.000 polynomial.py:1005(poly1d)
        1    0.000    0.000    0.000    0.000 core.py:6265(__new__)
       19    0.000    0.000    0.000    0.000 __init__.py:219(_releaseLock)
        4    0.000    0.000    0.000    0.000 rcsetup.py:327(__call__)
       25    0.000    0.000    0.000    0.000 {sys.exc_info}
        1    0.000    0.000    0.000    0.000 pickle.py:171(Pickler)
       47    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
      105    0.000    0.000    0.000    0.000 {unichr}
        1    0.000    0.000    0.000    0.000 _dtype.py:5(<module>)
       66    0.000    0.000    0.000    0.000 pyparsing.py:4014(<genexpr>)
        1    0.000    0.000    0.000    0.000 defmatrix.py:74(matrix)
        1    0.000    0.000    0.000    0.000 text.py:1927(Annotation)
       22    0.000    0.000    0.000    0.000 stat.py:40(S_ISDIR)
        1    0.000    0.000    0.000    0.000 backend_bases.py:844(GraphicsContextBase)
       16    0.000    0.000    0.000    0.000 {_functools.reduce}
       18    0.000    0.000    0.000    0.000 _add_newdocs.py:6629(type_aliases_gen)
       60    0.000    0.000    0.000    0.000 {operator.index}
        1    0.000    0.000    0.000    0.000 _add_newdocs.py:6628(numeric_type_aliases)
        6    0.000    0.000    0.000    0.000 pyparsing.py:5673(<lambda>)
        1    0.000    0.000    0.004    0.004 __init__.py:22(pylab_setup)
       21    0.000    0.000    0.000    0.000 UserDict.py:70(__contains__)
       56    0.000    0.000    0.000    0.000 {method 'ljust' of 'str' objects}
        2    0.000    0.000    0.000    0.000 font_manager.py:1018(make_rcparams_key)
        9    0.000    0.000    0.000    0.000 re.py:271(_subx)
        1    0.000    0.000    0.000    0.000 StringIO.py:30(<module>)
        1    0.000    0.000    0.000    0.000 calendar.py:47(_localized_month)
        7    0.000    0.000    0.000    0.000 pyparsing.py:5718(tokenMap)
        9    0.000    0.000    0.000    0.000 re.py:251(_compile_repl)
        4    0.000    0.000    0.000    0.000 {zip}
        1    0.000    0.000    0.000    0.000 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.000    0.000 rcsetup.py:194(validate_axisbelow)
        1    0.000    0.000    0.000    0.000 ufunclike.py:5(<module>)
        1    0.000    0.000    0.001    0.001 traceback.py:272(format_stack)
        1    0.000    0.000    0.000    0.000 mixins.py:63(NDArrayOperatorsMixin)
        2    0.000    0.000    0.000    0.000 rcsetup.py:901(validate_webagg_address)
        1    0.000    0.000    0.000    0.000 core.py:2775(__new__)
        6    0.000    0.000    0.000    0.000 six.py:126(__init__)
        1    0.000    0.000    0.000    0.000 arraypad.py:5(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:31(Patch)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2886(Text)
        4    0.000    0.000    0.000    0.000 core.py:123(doc_note)
        1    0.000    0.000    0.000    0.000 twodim_base.py:154(eye)
        1    0.000    0.000    0.000    0.000 _methods.py:5(<module>)
       79    0.000    0.000    0.000    0.000 docstring.py:121(copy_dedent)
       18    0.000    0.000    0.000    0.000 {_struct.calcsize}
        1    0.000    0.000    0.000    0.000 pyparsing.py:1758(__init__)
        6    0.000    0.000    0.000    0.000 numeric.py:2758(geterr)
        1    0.000    0.000    0.000    0.000 pprint.py:35(<module>)
        2    0.000    0.000    0.000    0.000 {_warnings.warn}
        5    0.000    0.000    0.000    0.000 fractions.py:280(_operator_fallbacks)
        1    0.000    0.000    0.000    0.000 colorbar.py:220(ColorbarBase)
        7    0.000    0.000    0.000    0.000 {numpy.seterrobj}
       27    0.000    0.000    0.000    0.000 decimal.py:3816(<genexpr>)
       10    0.000    0.000    0.000    0.000 pyparsing.py:4640(__init__)
        1    0.000    0.000    0.000    0.000 subprocess32.py:506(Popen)
        3    0.000    0.000    0.000    0.000 __init__.py:171(compare_versions)
        1    0.000    0.000    0.000    0.000 transforms.py:766(Bbox)
        1    0.000    0.000    0.000    0.000 threading.py:640(Thread)
        1    0.000    0.000    0.000    0.000 fractions.py:44(Fraction)
       47    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       10    0.000    0.000    0.000    0.000 __init__.py:1345(isEnabledFor)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7fd6f947e488}
        2    0.000    0.000    0.000    0.000 {posix.putenv}
        1    0.000    0.000    0.000    0.000 case.py:180(__init__)
        4    0.000    0.000    0.000    0.000 pyparsing.py:594(__setitem__)
       27    0.000    0.000    0.000    0.000 codecs.py:235(__init__)
        1    0.000    0.000    0.000    0.000 numbers.py:34(Complex)
        7    0.000    0.000    0.000    0.000 pyparsing.py:4743(__init__)
       14    0.000    0.000    0.000    0.000 pyparsing.py:3211(charsAsStr)
       14    0.000    0.000    0.000    0.000 {delattr}
       44    0.000    0.000    0.000    0.000 _inspect.py:28(isfunction)
        1    0.000    0.000    0.000    0.000 win.py:8(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:147(EnumMeta)
        1    0.000    0.000    0.000    0.000 polar.py:837(PolarAxes)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3639(__init__)
       11    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
       27    0.000    0.000    0.000    0.000 contextlib.py:12(__init__)
       39    0.000    0.000    0.000    0.000 _inspect.py:43(iscode)
       90    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 backend_managers.py:46(ToolManager)
        1    0.000    0.000    0.000    0.000 _backports.py:1(<module>)
        1    0.000    0.000    0.000    0.000 quiver.py:415(Quiver)
       58    0.000    0.000    0.000    0.000 pyparsing.py:634(__bool__)
       54    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        3    0.000    0.000    0.000    0.000 _abcoll.py:24(_hasattr)
       15    0.000    0.000    0.000    0.000 pyparsing.py:4829(__str__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1067(StandardPsFonts)
        1    0.000    0.000    0.000    0.000 pyplot.py:74(_backend_selection)
        2    0.000    0.000    0.002    0.001 decoder.py:361(decode)
        2    0.000    0.000    0.000    0.000 posixpath.py:127(dirname)
        1    0.000    0.000    0.000    0.000 <string>:1(Attribute)
        4    0.000    0.000    0.000    0.000 rcsetup.py:588(validate_hinting)
       10    0.000    0.000    0.000    0.000 __init__.py:1331(getEffectiveLevel)
        2    0.000    0.000    0.000    0.000 {_socket.inet_aton}
       14    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        7    0.000    0.000    0.000    0.000 __init__.py:1130(debug)
        1    0.000    0.000    0.000    0.000 subprocess.py:647(Popen)
       15    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        9    0.000    0.000    0.000    0.000 six.py:601(itervalues)
        2    0.000    0.000    0.000    0.000 __init__.py:621(_get_xdg_config_dir)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1371(AnnotationBbox)
        1    0.000    0.000    0.000    0.000 threading.py:656(__init__)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 pyparsing.py:494(ParseResults)
        4    0.000    0.000    0.000    0.000 ufunclike.py:16(_deprecate_out_named_y)
        1    0.000    0.000    0.000    0.000 sre_parse.py:703(parse_template)
        4    0.000    0.000    0.000    0.000 pyparsing.py:2154(__radd__)
       16    0.000    0.000    0.000    0.000 _string_helpers.py:44(english_upper)
        1    0.000    0.000    0.000    0.000 tempfile.py:501(SpooledTemporaryFile)
       23    0.000    0.000    0.000    0.000 stat.py:24(S_IFMT)
        4    0.000    0.000    0.000    0.000 __init__.py:1157(__init__)
       11    0.000    0.000    0.000    0.000 threading.py:58(__init__)
        1    0.000    0.000    0.000    0.000 tight_bbox.py:3(<module>)
       33    0.000    0.000    0.000    0.000 pyparsing.py:4214(<genexpr>)
        8    0.000    0.000    0.000    0.000 core.py:2551(_arraymethod)
        1    0.000    0.000    0.000    0.000 decimal.py:3763(Context)
       14    0.000    0.000    0.000    0.000 mixins.py:40(_inplace_binary_method)
        1    0.000    0.000    0.000    0.000 tripcolor.py:1(<module>)
        2    0.000    0.000    0.000    0.000 arrayprint.py:460(decorating_function)
       24    0.000    0.000    0.000    0.000 dviread.py:133(_dispatch)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:359(_get_scalar_type_map)
        1    0.000    0.000    0.000    0.000 _inspect.py:7(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(Mismatch)
        2    0.000    0.000    0.000    0.000 numeric.py:175(ones)
        8    0.000    0.000    0.000    0.000 core.py:8007(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:243(RendererBase)
        2    0.000    0.000    0.000    0.000 {posix.unsetenv}
        4    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 numeric.py:2318(identity)
        1    0.000    0.000    0.000    0.000 <string>:1(Text)
        8    0.000    0.000    0.000    0.000 rrule.py:77(<genexpr>)
        1    0.000    0.000    0.000    0.000 gzip.py:36(GzipFile)
        1    0.000    0.000    0.000    0.000 collections.py:26(OrderedDict)
        6    0.000    0.000    0.000    0.000 hashlib.py:94(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 <string>:1(Traceback)
       33    0.000    0.000    0.000    0.000 cm.py:28(_reverser)
        5    0.000    0.000    0.000    0.000 rcsetup.py:509(validate_ps_distiller)
        2    0.000    0.000    0.000    0.000 {posix.sysconf}
       27    0.000    0.000    0.000    0.000 _add_newdocs.py:6669(<genexpr>)
        1    0.000    0.000    0.000    0.000 <string>:1(Page)
        1    0.000    0.000    0.000    0.000 <string>:1(CacheInfo)
        1    0.000    0.000    0.000    0.000 _layoutbox.py:52(LayoutBox)
        3    0.000    0.000    0.000    0.000 pyparsing.py:1553(addParseAction)
       27    0.000    0.000    0.000    0.000 posixpath.py:59(isabs)
        2    0.000    0.000    0.000    0.000 {numpy.zeros}
        1    0.000    0.000    0.000    0.000 Tkinter.py:2186(Canvas)
        1    0.000    0.000    0.000    0.000 numerictypes.py:593(_register_types)
        1    0.000    0.000    0.000    0.000 relativedelta.py:18(relativedelta)
        1    0.000    0.000    0.000    0.000 __init__.py:655(__init__)
       27    0.000    0.000    0.000    0.000 decimal.py:3809(<genexpr>)
        1    0.000    0.000    0.000    0.000 glob.py:1(<module>)
        9    0.000    0.000    0.000    0.000 pyparsing.py:4630(__str__)
        1    0.000    0.000    0.000    0.000 Image.py:447(Image)
        1    0.000    0.000    0.000    0.000 collections.py:387(Counter)
       42    0.000    0.000    0.000    0.000 __init__.py:78(_is_sunder)
       54    0.000    0.000    0.000    0.000 docstring.py:84(__init__)
        1    0.000    0.000    0.000    0.000 {time.localtime}
        2    0.000    0.000    0.000    0.000 __init__.py:49(normalize_encoding)
        1    0.000    0.000    0.000    0.000 <string>:1(SplitResult)
        2    0.000    0.000    0.000    0.000 rcsetup.py:283(validate_toolbar)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2727(NavigationToolbar2)
        1    0.000    0.000    0.000    0.000 <string>:1(Arguments)
        2    0.000    0.000    0.000    0.000 codecs.py:77(__new__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2655(Menu)
        6    0.000    0.000    0.000    0.000 _common.py:13(tzname_in_python2)
        4    0.000    0.000    0.000    0.000 __init__.py:218(_is_writable_dir)
        1    0.000    0.000    0.000    0.000 threading.py:1090(__init__)
        5    0.000    0.000    0.000    0.000 pyparsing.py:4753(__str__)
        1    0.000    0.000    0.000    0.000 numbers.py:169(Real)
        1    0.000    0.000    0.000    0.000 core.py:3080(view)
       19    0.000    0.000    0.000    0.000 {sys._getframe}
        1    0.000    0.000    0.000    0.000 spines.py:19(Spine)
        4    0.000    0.000    0.000    0.000 re.py:164(split)
        1    0.000    0.000    0.000    0.000 decoder.py:17(_floatconstants)
        1    0.000    0.000    0.000    0.000 <string>:1(ArgSpec)
        3    0.000    0.000    0.000    0.000 __init__.py:101(__init__)
        6    0.000    0.000    0.000    0.000 opcode.py:35(jrel_op)
        1    0.000    0.000    0.000    0.000 axis.py:40(Tick)
        1    0.000    0.000    0.000    0.000 <string>:1(ParseResult)
        8    0.000    0.000    0.000    0.000 pyparsing.py:1774(clear)
       17    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 patches.py:1134(Arrow)
        1    0.000    0.000    0.000    0.000 transforms.py:2126(IdentityTransform)
        2    0.000    0.000    0.000    0.000 {_csv.register_dialect}
        1    0.000    0.000    0.000    0.000 atexit.py:6(<module>)
        1    0.000    0.000    0.051    0.051 program.py:228(prepBeforeRun)
       16    0.000    0.000    0.000    0.000 {next}
        1    0.000    0.000    0.000    0.000 rrule.py:1417(_rrulestr)
        7    0.000    0.000    0.000    0.000 pyparsing.py:3676(__init__)
        3    0.000    0.000    0.000    0.000 result.py:14(failfast)
        1    0.000    0.000    0.000    0.000 <string>:1(Font)
       11    0.000    0.000    0.000    0.000 opcode.py:31(name_op)
        1    0.000    0.000    0.000    0.000 tz.py:380(tzfile)
        6    0.000    0.000    0.000    0.000 version.py:263(__init__)
       16    0.000    0.000    0.000    0.000 _dtype.py:36(_kind_name)
        1    0.000    0.000    0.000    0.000 stackplot.py:8(<module>)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        1    0.000    0.000    0.000    0.000 os.py:136(makedirs)
        1    0.000    0.000    0.000    0.000 <string>:1(Box)
       12    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 <string>:1(ArgInfo)
        1    0.000    0.000    0.000    0.000 ticker.py:489(ScalarFormatter)
        1    0.000    0.000    0.000    0.000 <string>:1(Match)
        1    0.000    0.000    0.000    0.000 keyword.py:11(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(ModuleInfo)
        1    0.000    0.000    0.000    0.000 {method 'decode' of 'str' objects}
        1    0.000    0.000    0.000    0.000 bezier.py:152(BezierSegment)
       10    0.000    0.000    0.000    0.000 _pytesttester.py:72(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:1879(_simpleprint_styles)
        1    0.000    0.000    0.002    0.002 __init__.py:257(load)
        1    0.000    0.000    0.000    0.000 ssl.py:196(SSLSocket)
        1    0.000    0.000    0.000    0.000 threading.py:254(_Condition)
       11    0.000    0.000    0.000    0.000 legend_handler.py:61(__init__)
        1    0.000    0.000    0.000    0.000 font_manager.py:609(FontProperties)
       13    0.000    0.000    0.000    0.000 _internal.py:889(npy_ctypes_check)
        2    0.000    0.000    0.000    0.000 getlimits.py:522(max)
       16    0.000    0.000    0.000    0.000 functools_lru_cache.py:19(<genexpr>)
        1    0.000    0.000    0.000    0.000 loader.py:38(TestLoader)
        3    0.000    0.000    0.000    0.000 pyparsing.py:3743(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1538(Wm)
        1    0.000    0.000    0.000    0.000 isoparser.py:42(isoparser)
        1    0.000    0.000    0.000    0.000 _iotools.py:270(NameValidator)
        1    0.000    0.000    0.000    0.000 mathtext.py:3222(MathTextParser)
        1    0.000    0.000    0.000    0.000 patches.py:653(Rectangle)
        1    0.000    0.000    0.000    0.000 table.py:213(Table)
        1    0.000    0.000    0.000    0.000 collections.py:1325(EventCollection)
        1    0.000    0.000    0.000    0.000 transforms.py:1819(Affine2DBase)
        1    0.000    0.000    0.000    0.000 chebyshev.py:2118(Chebyshev)
        4    0.000    0.000    0.000    0.000 rcsetup.py:492(update_savefig_format)
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'dictproxy' objects}
       11    0.000    0.000    0.000    0.000 pyparsing.py:638(__iter__)
        4    0.000    0.000    0.000    0.000 warnings.py:74(simplefilter)
        1    0.000    0.000    0.000    0.000 <string>:1(_XYPair)
        1    0.000    0.000    0.000    0.000 collections.py:1054(RegularPolyCollection)
       24    0.000    0.000    0.000    0.000 __init__.py:169(<genexpr>)
        1    0.000    0.000    0.000    0.000 numbers.py:295(Integral)
        1    0.000    0.000    0.000    0.000 socket.py:235(_fileobject)
        1    0.000    0.000    0.000    0.000 __init__.py:729(_get_data_path)
        1    0.000    0.000    0.000    0.000 ticker.py:1792(MaxNLocator)
        1    0.000    0.000    0.000    0.000 mathtext.py:3245(__init__)
        1    0.000    0.000    0.000    0.000 gates.py:15(Gates)
        1    0.000    0.000    0.000    0.000 __init__.py:822(Null)
       20    0.000    0.000    0.000    0.000 _abcoll.py:98(__subclasshook__)
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 hermite_e.py:1812(HermiteE)
        1    0.000    0.000    0.000    0.000 offsetbox.py:142(OffsetBox)
        7    0.000    0.000    0.000    0.000 legend_handler.py:138(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:483(_get_mixins_)
        4    0.000    0.000    0.000    0.000 __init__.py:395(_wrap)
        1    0.000    0.000    0.000    0.000 textpath.py:27(TextToPath)
        1    0.000    0.000    0.000    0.000 core.py:230(reload_library)
        4    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 textpath.py:35(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:1109(LockableBbox)
        5    0.000    0.000    0.000    0.000 docstring.py:39(__init__)
        1    0.000    0.000    0.000    0.000 result.py:26(TestResult)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:63(<setcomp>)
        4    0.000    0.000    0.000    0.000 function_base.py:258(iterable)
        2    0.000    0.000    0.000    0.000 threading.py:241(Condition)
        1    0.000    0.000    0.000    0.000 artist.py:1176(get_setters)
        1    0.000    0.000    0.000    0.000 tz.py:1539(__init__)
        1    0.000    0.000    0.000    0.000 rfc822.py:85(Message)
       62    0.000    0.000    0.000    0.000 version.py:273(<lambda>)
        1    0.000    0.000    0.000    0.000 legendre.py:1804(Legendre)
        8    0.000    0.000    0.000    0.000 six.py:75(_add_doc)
        6    0.000    0.000    0.000    0.000 _type_aliases.py:113(<genexpr>)
        3    0.000    0.000    0.000    0.000 __init__.py:1201(log)
        1    0.000    0.000    0.000    0.000 colors.py:419(Colormap)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:14(Gcf)
        1    0.000    0.000    0.000    0.000 csv.py:73(DictReader)
        1    0.000    0.000    0.000    0.000 threading.py:575(set)
        1    0.000    0.000    0.000    0.000 transforms.py:1238(Transform)
        5    0.000    0.000    0.000    0.000 pyparsing.py:1476(_setResultsName)
        6    0.000    0.000    0.000    0.000 UserDict.py:4(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:1538(Arc)
        1    0.000    0.000    0.000    0.000 cm.py:171(ScalarMappable)
        1    0.000    0.000    0.000    0.000 {posix.getcwdu}
        3    0.000    0.000    0.000    0.000 __init__.py:772(_get_data_path_cached)
        1    0.000    0.000    0.000    0.000 quiver.py:892(Barbs)
        1    0.000    0.000    0.000    0.000 urllib.py:116(URLopener)
       18    0.000    0.000    0.000    0.000 cycler.py:145(change_key)
        1    0.000    0.000    0.014    0.014 core.py:159(load_base_library)
        1    0.000    0.000    0.000    0.000 collections.py:1598(EllipseCollection)
        3    0.000    0.000    0.000    0.000 legend_handler.py:344(__init__)
        2    0.000    0.000    0.002    0.001 __init__.py:293(loads)
        3    0.000    0.000    0.000    0.000 _common.py:132(_validate_fromutc_inputs)
       44    0.000    0.000    0.000    0.000 pyparsing.py:4207(<genexpr>)
        4    0.000    0.000    0.000    0.000 rcsetup.py:612(validate_bbox)
        1    0.000    0.000    0.000    0.000 transforms.py:2173(BlendedGenericTransform)
        1    0.000    0.000    0.000    0.000 program.py:23(Program)
        1    0.000    0.000    0.000    0.000 getlimits.py:444(iinfo)
        1    0.000    0.000    0.000    0.000 text.py:1243(TextWithDash)
        4    0.000    0.000    0.000    0.000 isoparser.py:22(_takes_ascii)
        1    0.000    0.000    0.000    0.000 polynomial.py:1614(Polynomial)
        1    0.000    0.000    0.000    0.000 __init__.py:1378(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1097(Logger)
        1    0.000    0.000    0.000    0.000 calendar.py:66(_localized_day)
        1    0.000    0.000    0.000    0.000 _internal.py:251(_unsafe_first_element_pointer)
        1    0.000    0.000    0.000    0.000 info.py:34(<module>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1231(TimerBase)
        1    0.000    0.000    0.000    0.000 _parser.py:58(_timelex)
        3    0.000    0.000    0.000    0.000 numeric.py:3054(__init__)
        1    0.000    0.000    0.000    0.000 _common.py:267(tzrangebase)
        1    0.000    0.000    0.000    0.000 __init__.py:20(__deprecated_private_func)
        1    0.000    0.000    0.000    0.000 widgets.py:1956(RectangleSelector)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2882(Keyword)
        2    0.000    0.000    0.000    0.000 __init__.py:710(_get_cachedir)
        4    0.000    0.000    0.000    0.000 rcsetup.py:428(validate_aspect)
        4    0.000    0.000    0.000    0.000 functools_lru_cache.py:57(lru_cache)
        1    0.000    0.000    0.000    0.000 legend_handler.py:557(__init__)
        1    0.000    0.000    0.000    0.000 backend_tools.py:34(ToolBase)
        1    0.000    0.000    0.000    0.000 axis.py:1764(XAxis)
        1    0.000    0.000    0.000    0.000 widgets.py:640(TextBox)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3550(__init__)
        1    0.000    0.000    0.000    0.000 _parser.py:247(parserinfo)
        1    0.000    0.000    0.000    0.000 quiver.py:239(QuiverKey)
        4    0.000    0.000    0.000    0.000 pyparsing.py:4618(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:646(Handler)
        1    0.000    0.000    0.000    0.000 {method 'title' of 'str' objects}
        1    0.000    0.000    0.000    0.000 runner.py:28(TextTestResult)
        1    0.000    0.000    0.000    0.000 widgets.py:2540(PolygonSelector)
        7    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
        1    0.000    0.000    0.000    0.000 transforms.py:1767(__init__)
        1    0.000    0.000    0.000    0.000 polar.py:23(PolarTransform)
        1    0.000    0.000    0.000    0.000 widgets.py:27(LockDraw)
       21    0.000    0.000    0.000    0.000 __init__.py:178(<lambda>)
        1    0.000    0.000    0.000    0.000 patches.py:2466(FancyBboxPatch)
        1    0.000    0.000    0.000    0.000 backend_tools.py:559(ToolViewsPositions)
        4    0.000    0.000    0.000    0.000 rcsetup.py:169(validate_float_or_None)
        1    0.000    0.000    0.000    0.000 offsetbox.py:976(AnchoredOffsetbox)
        1    0.000    0.000    0.000    0.000 tritools.py:13(TriAnalyzer)
        1    0.000    0.000    0.000    0.000 sre_parse.py:790(expand_template)
       16    0.000    0.000    0.000    0.000 _string_helpers.py:72(english_capitalize)
        1    0.000    0.000    0.000    0.000 urllib2.py:150(HTTPError)
        1    0.000    0.000    0.000    0.000 subprocess32.py:350(CompletedProcess)
        3    0.000    0.000    0.000    0.000 legend_handler.py:214(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2561(Listbox)
        8    0.000    0.000    0.000    0.000 relativedelta.py:13(<genexpr>)
        9    0.000    0.000    0.000    0.000 {method 'itervalues' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 six.py:475(Module_six_moves_urllib)
        1    0.000    0.000    0.000    0.000 hermite.py:1819(Hermite)
        1    0.000    0.000    0.000    0.000 patches.py:934(Polygon)
       13    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 polar.py:129(InvertedPolarTransform)
        1    0.000    0.000    0.000    0.000 _internal.py:219(_getintp_ctype)
        1    0.000    0.000    0.000    0.000 triplot.py:1(<module>)
        1    0.000    0.000    0.000    0.000 threading.py:560(__init__)
        1    0.000    0.000    0.000    0.000 laguerre.py:1769(Laguerre)
        1    0.000    0.000    0.000    0.000 copy_reg.py:14(pickle)
       11    0.000    0.000    0.000    0.000 UserDict.py:18(__getitem__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2650(FigureManagerBase)
        2    0.000    0.000    0.000    0.000 {numpy.core._multiarray_umath.set_string_function}
        1    0.000    0.000    0.000    0.000 transforms.py:2386(CompositeGenericTransform)
        2    0.000    0.000    0.000    0.000 atexit.py:37(register)
        1    0.000    0.000    0.000    0.000 backend_tools.py:25(Cursors)
        1    0.000    0.000    0.000    0.000 _parser.py:575(__init__)
        1    0.000    0.000    0.000    0.000 backend_agg.py:405(FigureCanvasAgg)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3730(__init__)
        8    0.000    0.000    0.000    0.000 pyparsing.py:5675(<genexpr>)
        9    0.000    0.000    0.000    0.000 pyparsing.py:3781(parseImpl)
        1    0.000    0.000    0.000    0.000 mathtext.py:92(MathtextBackend)
        1    0.000    0.000    0.000    0.000 pyparsing.py:280(conditionAsParseAction)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2813(__init__)
        7    0.000    0.000    0.000    0.000 case.py:609(_deprecate)
       14    0.000    0.000    0.000    0.000 {numpy.geterrobj}
        2    0.000    0.000    0.000    0.000 platform.py:1510(python_implementation)
        2    0.000    0.000    0.000    0.000 _abcoll.py:63(__subclasshook__)
        3    0.000    0.000    0.000    0.000 __init__.py:276(<genexpr>)
        3    0.000    0.000    0.000    0.000 version.py:292(__cmp__)
        1    0.000    0.000    0.000    0.000 tz.py:126(tzoffset)
        4    0.000    0.000    0.000    0.000 rcsetup.py:870(validate_hist_bins)
        1    0.000    0.000    0.000    0.000 triangulation.py:11(Triangulation)
        1    0.000    0.000    0.000    0.000 offsetbox.py:573(DrawingArea)
        7    0.000    0.000    0.000    0.000 rrule.py:70(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4896(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing.py:1563(addCondition)
        1    0.000    0.000    0.000    0.000 table.py:153(CustomCell)
       10    0.000    0.000    0.000    0.000 extras.py:238(__init__)
        1    0.000    0.000    0.000    0.000 text.py:1711(_AnnotationBase)
        1    0.000    0.000    0.000    0.000 colors.py:1071(SymLogNorm)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4732(ZeroOrMore)
        4    0.000    0.000    0.000    0.000 core.py:3349(dtype)
        1    0.000    0.000    0.000    0.000 offsetbox.py:702(TextArea)
       30    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 ticker.py:812(LogFormatter)
        1    0.000    0.000    0.000    0.000 blocking_input.py:124(BlockingMouseInput)
       11    0.000    0.000    0.000    0.000 __init__.py:17(<genexpr>)
        1    0.000    0.000    0.000    0.000 tricontour.py:12(TriContourSet)
        1    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
        1    0.000    0.000    0.000    0.000 gridspec.py:35(GridSpecBase)
        1    0.000    0.000    0.000    0.000 _internal.py:291(_ctypes)
        1    0.000    0.000    0.000    0.000 hex_codec.py:70(getregentry)
        1    0.000    0.000    0.000    0.000 program.py:24(__init__)
        6    0.000    0.000    0.000    0.000 pyparsing.py:2392(__call__)
        1    0.000    0.000    0.000    0.000 transforms.py:1760(AffineBase)
        3    0.000    0.000    0.000    0.000 numeric.py:3063(__exit__)
        1    0.000    0.000    0.000    0.000 calendar.py:259(TextCalendar)
        1    0.000    0.000    0.000    0.000 _version.py:18(NumpyVersion)
        4    0.000    0.000    0.000    0.000 rcsetup.py:625(validate_sketch)
        1    0.000    0.000    0.000    0.000 httplib.py:715(HTTPConnection)
        1    0.000    0.000    0.000    0.000 tempfile.py:108(_RandomNameSequence)
      2/1    0.000    0.000    0.000    0.000 deprecation.py:206(wrapper)
        1    0.000    0.000    0.000    0.000 core.py:166(iter_user_libraries)
        1    0.000    0.000    0.000    0.000 patches.py:820(RegularPolygon)
        4    0.000    0.000    0.000    0.000 legend_handler.py:183(__init__)
        1    0.000    0.000    0.000    0.000 core.py:6255(MaskedConstant)
        1    0.000    0.000    0.000    0.000 calendar.py:126(Calendar)
        1    0.000    0.000    0.000    0.000 _parser.py:225(_resultbase)
        1    0.000    0.000    0.000    0.000 __init__.py:905(RingBuffer)
        3    0.000    0.000    0.002    0.001 six.py:114(_resolve)
        1    0.000    0.000    0.000    0.000 _factories.py:51(__init__)
        3    0.000    0.000    0.000    0.000 index_tricks.py:310(__init__)
        8    0.000    0.000    0.000    0.000 rcsetup.py:344(validate_color_or_inherit)
        1    0.000    0.000    0.000    0.000 tz.py:195(tzlocal)
        1    0.000    0.000    0.000    0.000 cycler.py:77(Cycler)
        1    0.000    0.000    0.000    0.000 __init__.py:1171(Stack)
        1    0.000    0.000    0.000    0.000 afm.py:329(AFM)
        1    0.000    0.000    0.000    0.000 units.py:88(ConversionInterface)
        1    0.000    0.000    0.000    0.000 transforms.py:1907(Affine2D)
        1    0.000    0.000    0.000    0.000 records.py:305(recarray)
        1    0.000    0.000    0.000    0.000 extras.py:1489(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:968(__iter__)
        1    0.000    0.000    0.000    0.000 ticker.py:1304(PercentFormatter)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3605(White)
        9    0.000    0.000    0.000    0.000 rcsetup.py:299(__init__)
        2    0.000    0.000    0.000    0.000 arrayprint.py:1571(set_string_function)
        1    0.000    0.000    0.000    0.000 textpath.py:417(TextPath)
        2    0.000    0.000    0.000    0.000 core.py:6347(__setattr__)
        1    0.000    0.000    0.000    0.000 utils.py:58(_Deprecate)
        1    0.000    0.000    0.000    0.000 httplib.py:1103(HTTP)
        1    0.000    0.000    0.000    0.000 patches.py:1407(CirclePolygon)
        1    0.000    0.000    0.000    0.000 dates.py:745(IndexDateFormatter)
        1    0.000    0.000    0.000    0.000 version.py:63(StrictVersion)
        1    0.000    0.000    0.000    0.000 urllib2.py:493(BaseHandler)
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 numeric.py:3069(_setdef)
        1    0.000    0.000    0.000    0.000 nosetester.py:115(NoseTester)
        1    0.000    0.000    0.000    0.000 records.py:220(record)
        1    0.000    0.000    0.000    0.000 py3k.py:200(os_PathLike)
        1    0.000    0.000    0.000    0.000 __init__.py:106(get_projection_names)
        1    0.000    0.000    0.000    0.000 tz.py:1161(_tzicalvtz)
        1    0.000    0.000    0.000    0.000 collections.py:1743(TriMesh)
        1    0.000    0.000    0.000    0.000 pyparsing.py:292(ParseBaseException)
        1    0.000    0.000    0.000    0.000 mlab.py:3633(GaussianKDE)
        1    0.000    0.000    0.000    0.000 __init__.py:636(_addHandlerRef)
        2    0.000    0.000    0.000    0.000 core.py:3365(shape)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1238(_Sparse_Matrix_coo)
        1    0.000    0.000    0.000    0.000 backend_tools.py:723(ToolHome)
        1    0.000    0.000    0.000    0.000 weakref.py:282(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:289(PackerBase)
        1    0.000    0.000    0.000    0.000 {binascii.a2b_hex}
        1    0.000    0.000    0.000    0.000 index_tricks.py:251(__init__)
        2    0.000    0.000    0.000    0.000 rcsetup.py:184(validate_string_or_None)
        1    0.000    0.000    0.000    0.000 ticker.py:346(FixedFormatter)
        1    0.000    0.000    0.000    0.000 backend_tools.py:381(ToolQuit)
        1    0.000    0.000    0.000    0.000 dates.py:1056(RRuleLocator)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6684(unicode_set)
        1    0.000    0.000    0.000    0.000 info.py:83(<module>)
        1    0.000    0.000    0.000    0.000 patches.py:1043(Wedge)
        1    0.000    0.000    0.000    0.000 __init__.py:1445(is_interactive)
        1    0.000    0.000    0.000    0.000 patches.py:4010(FancyArrowPatch)
        1    0.000    0.000    0.000    0.000 __init__.py:1674(NullHandler)
        1    0.000    0.000    0.000    0.000 {_codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 dates.py:976(DateLocator)
        1    0.000    0.000    0.000    0.000 tz.py:1469(GettzFunc)
        1    0.000    0.000    0.000    0.000 _datasource.py:627(Repository)
        1    0.000    0.000    0.000    0.000 fnmatch.py:11(<module>)
        2    0.000    0.000    0.000    0.000 os.py:494(__delitem__)
        1    0.000    0.000    0.000    0.000 backend_tools.py:146(ToolToggleBase)
       15    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 transforms.py:2604(BboxTransform)
        1    0.000    0.000    0.000    0.000 _internal.py:907(recursive)
        1    0.000    0.000    0.000    0.000 _subplots.py:18(SubplotBase)
        1    0.000    0.000    0.000    0.000 version.py:228(LooseVersion)
       19    0.000    0.000    0.000    0.000 sre_parse.py:205(tell)
        1    0.000    0.000    0.000    0.000 scale.py:196(LogScale)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:641(NavigationToolbar2Tk)
        1    0.000    0.000    0.000    0.000 widgets.py:65(Widget)
        1    0.000    0.000    0.000    0.000 rfc822.py:496(AddrlistClass)
        1    0.000    0.000    0.000    0.000 colors.py:85(<dictcomp>)
        1    0.000    0.000    0.000    0.000 patches.py:1498(Circle)
        1    0.000    0.000    0.000    0.000 hex_codec.py:52(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 backend_tools.py:509(ToolFullScreen)
        1    0.000    0.000    0.000    0.000 ticker.py:1178(EngFormatter)
        1    0.000    0.000    0.000    0.000 core.py:1314(_replace_dtype_fields)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 httplib.py:251(HTTPMessage)
        1    0.000    0.000    0.000    0.000 __init__.py:1449(Grouper)
        1    0.000    0.000    0.000    0.000 text.py:1627(OffsetFrom)
        6    0.000    0.000    0.000    0.000 opcode.py:39(jabs_op)
        1    0.000    0.000    0.000    0.000 _common.py:149(_tzinfo)
       11    0.000    0.000    0.000    0.000 _color_data.py:34(<genexpr>)
        1    0.000    0.000    0.000    0.000 transforms.py:1639(TransformWrapper)
        1    0.000    0.000    0.000    0.000 npyio.py:122(NpzFile)
        1    0.000    0.000    0.000    0.000 blocking_input.py:36(BlockingInput)
        4    0.000    0.000    0.000    0.000 backend_bases.py:94(register_backend)
        1    0.000    0.000    0.000    0.000 httplib.py:360(HTTPResponse)
        2    0.000    0.000    0.000    0.000 warnings.py:14(warnpy3k)
        1    0.000    0.000    0.000    0.000 arrayterator.py:20(Arrayterator)
        1    0.000    0.000    0.000    0.000 mathtext.py:2531(State)
        1    0.000    0.000    0.000    0.000 main.py:63(TestProgram)
        3    0.000    0.000    0.000    0.000 numeric.py:3058(__enter__)
        1    0.000    0.000    0.000    0.000 index_tricks.py:300(AxisConcatenator)
        5    0.000    0.000    0.000    0.000 pyparsing.py:3591(__str__)
        1    0.000    0.000    0.000    0.000 colors.py:1533(LightSource)
        1    0.000    0.000    0.000    0.000 Tkconstants.py:4(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:1296(rc_context)
        3    0.000    0.000    0.000    0.000 _cm.py:99(get_color_function)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        2    0.000    0.000    0.000    0.000 core.py:6448(__init__)
        1    0.000    0.000    0.000    0.000 machar.py:18(MachAr)
        1    0.000    0.000    0.000    0.000 dates.py:605(DateFormatter)
        1    0.000    0.000    0.000    0.000 backend_tools.py:236(SetCursorBase)
        2    0.000    0.000    0.000    0.000 pyparsing.py:3777(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3739(LineEnd)
        1    0.000    0.000    0.000    0.000 utf_8.py:15(decode)
        1    0.000    0.000    0.000    0.000 docstring.py:11(Substitution)
        1    0.000    0.000    0.000    0.000 mathtext.py:941(StixFonts)
        1    0.000    0.000    0.000    0.000 {_struct.unpack}
       25    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 artist.py:1065(ArtistInspector)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2846(Scrollbar)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2107(Button)
        1    0.000    0.000    0.000    0.000 random.py:650(WichmannHill)
        1    0.000    0.000    0.000    0.000 mathtext.py:754(UnicodeFonts)
        1    0.000    0.000    0.000    0.000 _internal.py:562(_Stream)
        1    0.000    0.000    0.000    0.000 transforms.py:60(TransformNode)
        1    0.000    0.000    0.000    0.000 synthesis.py:18(Synthesis)
        1    0.000    0.000    0.000    0.000 __init__.py:256(CallbackRegistry)
        1    0.000    0.000    0.000    0.000 urllib2.py:827(AbstractBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 polar.py:422(RadialLocator)
        4    0.000    0.000    0.000    0.000 pyparsing.py:6667(__init__)
        1    0.000    0.000    0.000    0.000 _globals.py:67(__new__)
        1    0.000    0.000    0.000    0.000 trirefine.py:51(UniformTriRefiner)
        1    0.000    0.000    0.000    0.000 ticker.py:2570(OldAutoLocator)
        1    0.000    0.000    0.000    0.000 platform.py:388(_popen)
        1    0.000    0.000    0.000    0.000 backend_bases.py:129(_Backend)
        1    0.000    0.000    0.000    0.000 backend_tools.py:489(ToolMinorGrid)
        5    0.000    0.000    0.000    0.000 six.py:181(_get_module)
        1    0.000    0.000    0.000    0.000 rrule.py:93(rrulebase)
        2    0.000    0.000    0.000    0.000 __init__.py:686(_get_configdir)
        1    0.000    0.000    0.000    0.000 table.py:39(Cell)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1963(Grid)
       38    0.000    0.000    0.000    0.000 {_ctypes.sizeof}
        1    0.000    0.000    0.000    0.000 units.py:137(__init__)
        1    0.000    0.000    0.000    0.000 encoder.py:101(__init__)
        1    0.000    0.000    0.000    0.000 image.py:1151(FigureImage)
        1    0.000    0.000    0.000    0.000 __init__.py:38(_RouteClassAttributeToGetattr)
        1    0.000    0.000    0.000    0.000 colors.py:298(ColorConverter)
        1    0.000    0.000    0.000    0.000 axis.py:2134(YAxis)
        1    0.000    0.000    0.000    0.000 _common.py:58(_DatetimeWithFold)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:455(FigureManagerTk)
        1    0.000    0.000    0.000    0.000 difflib.py:1670(HtmlDiff)
        1    0.000    0.000    0.000    0.000 figure.py:63(AxesStack)
        1    0.000    0.000    0.000    0.000 widgets.py:1334(MultiCursor)
        2    0.000    0.000    0.000    0.000 font_manager.py:1014(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:584(Shadow)
        1    0.000    0.000    0.000    0.000 patches.py:4427(ConnectionPatch)
        2    0.000    0.000    0.000    0.000 __init__.py:1431(get_backend)
        1    0.000    0.000    0.000    0.000 info.py:156(<module>)
        1    0.000    0.000    0.000    0.000 font_manager.py:1037(FontManager)
        6    0.000    0.000    0.000    0.000 pyparsing.py:5134(postParse)
        2    0.000    0.000    0.000    0.000 __init__.py:429(__init__)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:297(CubicTriInterpolator)
       15    0.000    0.000    0.000    0.000 mixins.py:30(_reflected_binary_method)
        1    0.000    0.000    0.000    0.000 urlparse.py:73(ResultMixin)
        1    0.000    0.000    0.000    0.000 __init__.py:17(register)
        1    0.000    0.000    0.000    0.000 info.py:184(<module>)
        1    0.000    0.000    0.000    0.000 rrule.py:1111(_iterinfo)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1180(_DOF_estimator_min_E)
        1    0.000    0.000    0.000    0.000 _factories.py:11(__call__)
        1    0.000    0.000    0.000    0.000 calendar.py:376(HTMLCalendar)
        1    0.000    0.000    0.000    0.000 encoder.py:70(JSONEncoder)
        1    0.000    0.000    0.000    0.000 index_tricks.py:515(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3262(Image)
        1    0.000    0.000    0.000    0.000 urllib2.py:197(Request)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1275(StructuredVoidFormat)
        1    0.000    0.000    0.000    0.000 container.py:10(Container)
        1    0.000    0.000    0.000    0.000 _parser.py:400(_ymd)
        1    0.000    0.000    0.000    0.000 _factories.py:7(__init__)
        7    0.000    0.000    0.000    0.000 {method 'isalnum' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 ascii.py:41(getregentry)
        1    0.000    0.000    0.000    0.000 ImageMode.py:17(<module>)
        1    0.000    0.000    0.000    0.000 widgets.py:1454(_SelectorWidget)
        1    0.000    0.000    0.000    0.000 mathtext.py:926(DejaVuSansFonts)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2456(Entry)
        1    0.000    0.000    0.000    0.000 mathtext.py:2044(Ship)
        1    0.000    0.000    0.000    0.000 tz.py:41(tzutc)
        1    0.000    0.000    0.000    0.000 mathtext.py:379(Fonts)
        1    0.000    0.000    0.000    0.000 _datasource.py:166(__init__)
        1    0.000    0.000    0.000    0.000 mathtext.py:1601(Hlist)
        3    0.000    0.000    0.000    0.000 pyparsing.py:3644(<genexpr>)
        1    0.000    0.000    0.000    0.000 six.py:598(iterkeys)
        1    0.000    0.000    0.000    0.000 collections.py:1813(QuadMesh)
        1    0.000    0.000    0.000    0.000 _globals.py:59(_NoValueType)
        1    0.000    0.000    0.000    0.000 tempfile.py:372(_TemporaryFileWrapper)
        1    0.000    0.000    0.004    0.004 __init__.py:992(rc_params)
        1    0.000    0.000    0.000    0.000 colorbar.py:905(Colorbar)
        1    0.000    0.000    0.000    0.000 subprocess32.py:56(CalledProcessError)
        1    0.000    0.000    0.000    0.000 core.py:6059(mvoid)
        1    0.000    0.000    0.000    0.000 threading.py:372(notify)
        2    0.000    0.000    0.000    0.000 {locals}
        4    0.000    0.000    0.000    0.000 pyparsing.py:2345(__invert__)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:2134(RArrow)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3577(PanedWindow)
        2    0.000    0.000    0.000    0.000 utils.py:70(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:1033(TransformedBbox)
        1    0.000    0.000    0.000    0.000 dates.py:1384(YearLocator)
       16    0.000    0.000    0.000    0.000 pyparsing.py:487(__getitem__)
        1    0.000    0.000    0.000    0.000 {_ctypes.dlopen}
        1    0.000    0.000    0.000    0.000 utils.py:1975(suppress_warnings)
        1    0.000    0.000    0.000    0.000 dates.py:1161(AutoDateLocator)
        1    0.000    0.000    0.000    0.000 __init__.py:332(CDLL)
        1    0.000    0.000    0.000    0.000 widgets.py:1897(ToolHandles)
        1    0.000    0.000    0.000    0.000 collections.py:940(PolyCollection)
        4    0.000    0.000    0.000    0.000 rcsetup.py:206(validate_dpi)
        1    0.000    0.000    0.000    0.000 collections.py:865(_CollectionWithSizes)
        1    0.000    0.000    0.000    0.000 csv.py:26(Dialect)
        1    0.000    0.000    0.000    0.000 widgets.py:2753(Lasso)
        1    0.000    0.000    0.000    0.000 httplib.py:1312(LineTooLong)
        1    0.000    0.000    0.000    0.000 urllib2.py:753(HTTPPasswordMgr)
        1    0.000    0.000    0.000    0.000 legend_handler.py:653(__init__)
        1    0.000    0.000    0.000    0.000 urllib.py:610(FancyURLopener)
        3    0.000    0.000    0.000    0.000 pyparsing.py:5130(__init__)
        1    0.000    0.000    0.000    0.000 offsetbox.py:490(PaddedBox)
        1    0.000    0.000    0.000    0.000 collections.py:914(PathCollection)
        3    0.000    0.000    0.000    0.000 {method 'toordinal' of 'datetime.date' objects}
        1    0.000    0.000    0.000    0.000 urllib.py:110(ContentTooShortError)
        1    0.000    0.000    0.000    0.000 core.py:7994(_convert2ma)
        1    0.000    0.000    0.000    0.000 threading.py:1088(_MainThread)
        1    0.000    0.000    0.000    0.000 case.py:1018(FunctionTestCase)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1743(Tk)
        1    0.000    0.000    0.000    0.000 mathtext.py:2017(AutoWidthChar)
        1    0.000    0.000    0.000    0.000 patches.py:3733(BarAB)
        1    0.000    0.000    0.000    0.000 docstring.py:65(Appender)
        1    0.000    0.000    0.000    0.000 pyparsing.py:355(ParseException)
        1    0.000    0.000    0.000    0.000 tz.py:1247(tzical)
        1    0.000    0.000    0.000    0.000 urllib.py:993(addinfo)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:954(SaveFigureTk)
        1    0.000    0.000    0.000    0.000 core.py:6283(__array_finalize__)
        1    0.000    0.000    0.000    0.000 threading.py:789(_set_ident)
        1    0.000    0.000    0.000    0.000 __init__.py:1000(__init__)
        1    0.000    0.000    0.000    0.000 legend_handler.py:178(HandlerNpointsYoffsets)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4723(__str__)
        9    0.000    0.000    0.000    0.000 _globals.py:77(__repr__)
        3    0.000    0.000    0.000    0.000 __init__.py:494(CFunctionType)
        1    0.000    0.000    0.000    0.000 records.py:87(format_parser)
        1    0.000    0.000    0.000    0.000 ticker.py:313(IndexFormatter)
        1    0.000    0.000    0.000    0.000 random.py:800(SystemRandom)
        1    0.000    0.000    0.000    0.000 patches.py:3707(BracketB)
        1    0.000    0.000    0.000    0.000 csv.py:166(Sniffer)
        1    0.000    0.000    0.000    0.000 calendar.py:132(__init__)
        1    0.000    0.000    0.000    0.000 dates.py:1528(HourLocator)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2983(CaselessKeyword)
        1    0.000    0.000    0.000    0.000 decimal.py:161(DecimalException)
        1    0.000    0.000    0.000    0.000 collections.py:1578(CircleCollection)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3218(ToolContainerBase)
        1    0.000    0.000    0.000    0.000 __init__.py:313(__init__)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1868(Pack)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1096(_DOF_estimator_geom)
        1    0.000    0.000    0.000    0.000 image.py:776(AxesImage)
        1    0.000    0.000    0.000    0.000 dates.py:188(_UTC)
        1    0.000    0.000    0.000    0.000 ticker.py:1519(IndexLocator)
        1    0.000    0.000    0.000    0.000 container.py:137(ErrorbarContainer)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4838(SkipTo)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3530(CharsNotIn)
        1    0.000    0.000    0.000    0.000 urllib.py:854(ftpwrapper)
        1    0.000    0.000    0.000    0.000 trifinder.py:29(TrapezoidMapTriFinder)
        1    0.000    0.000    0.000    0.000 Image.py:417(_E)
        1    0.000    0.000    0.000    0.000 __init__.py:2548(_FuncInfo)
        1    0.000    0.000    0.000    0.000 _iotools.py:480(ConversionWarning)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1476(LocationEvent)
        1    0.000    0.000    0.000    0.000 patches.py:1888(_Style)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:836(RubberbandTk)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1613(DraggableBase)
        1    0.000    0.000    0.000    0.000 threading.py:399(notifyAll)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2769(_PendingSkip)
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 dates.py:1568(SecondLocator)
        1    0.000    0.000    0.000    0.000 six.py:124(_LazyModule)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:200(_concrete_ndptr)
        1    0.000    0.000    0.000    0.000 index_tricks.py:552(ndenumerate)
        1    0.000    0.000    0.000    0.000 patches.py:3063(Bar)
        1    0.000    0.000    0.000    0.000 pickle.py:58(PickleError)
        1    0.000    0.000    0.000    0.000 tokenize.py:146(TokenError)
        1    0.000    0.000    0.000    0.000 gridspec.py:168(GridSpec)
        1    0.000    0.000    0.000    0.000 colors.py:1188(PowerNorm)
        3    0.000    0.000    0.000    0.000 pyparsing.py:2412(suppress)
        1    0.000    0.000    0.000    0.000 ascii.py:34(StreamConverter)
        3    0.000    0.000    0.000    0.000 __init__.py:104(CFunctionType)
        1    0.000    0.000    0.000    0.000 __init__.py:260(c_bool)
        1    0.000    0.000    0.000    0.000 __init__.py:1151(maxdict)
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 offsetbox.py:1269(OffsetImage)
        1    0.000    0.000    0.000    0.000 backend_tools.py:829(ToolZoom)
        1    0.000    0.000    0.000    0.000 core.py:2378(_MaskedPrintOption)
        8    0.000    0.000    0.000    0.000 mathtext.py:1860(__init__)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 pyplot.py:2016(colormaps)
        2    0.000    0.000    0.000    0.000 pyparsing.py:1453(setResultsName)
        1    0.000    0.000    0.000    0.000 __init__.py:201(c_double)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2820(NoMatch)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3835(ParseExpression)
        1    0.000    0.000    0.000    0.000 widgets.py:1683(SpanSelector)
        1    0.000    0.000    0.000    0.000 transforms.py:2716(BboxTransformFrom)
        1    0.000    0.000    0.000    0.000 decimal.py:311(Subnormal)
        1    0.000    0.000    0.000    0.000 getlimits.py:293(finfo)
        1    0.000    0.000    0.000    0.000 axis.py:659(_LazyTickList)
        1    0.000    0.000    0.000    0.000 __init__.py:147(_BoundMethodProxy)
        1    0.000    0.000    0.000    0.000 _subplots.py:223(_PicklableSubplotClassConstructor)
        2    0.000    0.000    0.000    0.000 __init__.py:47(__init__)
        1    0.000    0.000    0.000    0.000 colorbar.py:1309(ColorbarPatch)
        1    0.000    0.000    0.000    0.000 patches.py:2073(Circle)
        1    0.000    0.000    0.000    0.000 patches.py:3644(BracketAB)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:10(FigureCanvasTkAgg)
        1    0.000    0.000    0.000    0.000 transforms.py:88(__init__)
        8    0.000    0.000    0.000    0.000 getlimits.py:92(_register_type)
        1    0.000    0.000    0.000    0.000 __init__.py:10(ProjectionRegistry)
        1    0.000    0.000    0.000    0.000 _parser.py:1578(UnknownTimezoneWarning)
        2    0.000    0.000    0.000    0.000 __init__.py:376(__getattr__)
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'unicode' objects}
        4    0.000    0.000    0.000    0.000 mixins.py:55(_unary_method)
        1    0.000    0.000    0.000    0.000 mathtext.py:911(DejaVuSerifFonts)
        1    0.000    0.000    0.000    0.000 contextlib.py:9(GeneratorContextManager)
        1    0.000    0.000    0.000    0.000 _internal.py:207(dummy_ctype)
        1    0.000    0.000    0.000    0.000 tokenize.py:179(Untokenizer)
        1    0.000    0.000    0.000    0.000 Tkinter.py:201(Variable)
        1    0.000    0.000    0.000    0.000 polar.py:90(PolarAffine)
        1    0.000    0.000    0.000    0.000 transforms.py:2515(CompositeAffine2D)
        1    0.000    0.000    0.000    0.000 mathtext.py:1980(AutoHeightChar)
        1    0.000    0.000    0.000    0.000 pyparsing.py:5176(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:1710(_ImageCrop)
        1    0.000    0.000    0.000    0.000 mathtext.py:1912(NegFilll)
        1    0.000    0.000    0.000    0.000 backend_tools.py:391(ToolQuitAll)
        1    0.000    0.000    0.000    0.000 utils.py:1867(IgnoreException)
        1    0.000    0.000    0.000    0.000 legend_handler.py:210(HandlerLine2D)
        1    0.000    0.000    0.000    0.000 __init__.py:1283(addHandler)
        1    0.000    0.000    0.000    0.000 npyio.py:58(BagObj)
        1    0.000    0.000    0.000    0.000 functools_lru_cache.py:26(_HashedSeq)
        1    0.000    0.000    0.000    0.000 scale.py:368(SymmetricalLogScale)
        1    0.000    0.000    0.000    0.000 urllib2.py:1360(FTPHandler)
        1    0.000    0.000    0.000    0.000 ticker.py:213(_DummyAxis)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3322(PhotoImage)
        1    0.000    0.000    0.000    0.000 {_ctypes.set_conversion_mode}
        1    0.000    0.000    0.000    0.000 __init__.py:881(FileHandler)
        1    0.000    0.000    0.000    0.000 six.py:103(MovedModule)
        2    0.000    0.000    0.000    0.000 rcsetup.py:115(validate_path_exists)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:577(AxisMenu)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1386(Event)
        1    0.000    0.000    0.000    0.000 core.py:975(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 httplib.py:1199(HTTPSConnection)
        1    0.000    0.000    0.000    0.000 legend_handler.py:691(HandlerPolyCollection)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2016(BaseWidget)
        2    0.000    0.000    0.000    0.000 utils.py:53(_set_function_name)
        1    0.000    0.000    0.000    0.000 dates.py:347(strpdate2num)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:22(FigureManagerTkAgg)
        1    0.000    0.000    0.000    0.000 core.py:820(_DomainTan)
        1    0.000    0.000    0.000    0.000 mathtext.py:1856(GlueSpec)
        1    0.000    0.000    0.000    0.000 image.py:896(NonUniformImage)
        1    0.000    0.000    0.000    0.000 tokenize.py:148(StopTokenizing)
        1    0.000    0.000    0.000    0.000 legend_handler.py:444(__init__)
        1    0.000    0.000    0.000    0.000 streamplot.py:243(DomainMap)
        6    0.000    0.000    0.000    0.000 scale.py:556(get_scale_names)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4770(Optional)
        2    0.000    0.000    0.000    0.000 rcsetup.py:271(validate_qt4)
        1    0.000    0.000    0.000    0.000 patches.py:3196(_Base)
        1    0.000    0.000    0.000    0.000 __init__.py:135(toint)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6785(CJK)
        1    0.000    0.000    0.000    0.000 scale.py:58(LinearScale)
        1    0.000    0.000    0.000    0.000 six.py:139(MovedAttribute)
        1    0.000    0.000    0.000    0.000 units.py:53(AxisInfo)
        1    0.000    0.000    0.000    0.000 extras.py:273(_fromnxfunction_single)
        1    0.000    0.000    0.000    0.000 __init__.py:490(Bunch)
        1    0.000    0.000    0.000    0.000 urllib2.py:1219(HTTPSHandler)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4639(_MultipleMatch)
        1    0.000    0.000    0.000    0.000 mathtext.py:220(MathtextBackendBitmap)
        1    0.000    0.000    0.000    0.000 blocking_input.py:296(BlockingContourLabeler)
        1    0.000    0.000    0.000    0.000 core.py:901(_MaskedUnaryOperation)
        1    0.000    0.000    0.001    0.001 pyparsing.py:5811(makeHTMLTags)
        1    0.000    0.000    0.000    0.000 __init__.py:2164(_NestedClassGetter)
        1    0.000    0.000    0.000    0.000 contour.py:39(ClabelText)
        1    0.000    0.000    0.000    0.000 __init__.py:494(BufferingFormatter)
        1    0.000    0.000    0.000    0.000 _version.py:20(get_versions)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3397(Spinbox)
        1    0.000    0.000    0.000    0.000 patches.py:2267(Round4)
        1    0.000    0.000    0.000    0.000 mathtext.py:1712(Vlist)
        1    0.000    0.000    0.000    0.000 decimal.py:196(InvalidOperation)
        1    0.000    0.000    0.000    0.000 six.py:173(__init__)
        2    0.000    0.000    0.000    0.000 index_tricks.py:726(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:318(set_level)
        1    0.000    0.000    0.000    0.000 mathtext.py:226(MathtextBackendPs)
        1    0.000    0.000    0.000    0.000 synthesis.py:19(__init__)
        1    0.000    0.000    0.000    0.000 geo.py:450(LambertTransform)
        1    0.000    0.000    0.000    0.000 __init__.py:193(c_uint)
        1    0.000    0.000    0.000    0.000 backend_managers.py:27(ToolTriggerEvent)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:855(SetCursorTk)
        1    0.000    0.000    0.000    0.000 widgets.py:485(CheckButtons)
        1    0.000    0.000    0.000    0.000 urllib2.py:1244(UnknownHandler)
        1    0.000    0.000    0.000    0.000 threading.py:422(_Semaphore)
        1    0.000    0.000    0.000    0.000 ticker.py:1133(LogFormatterSciNotation)
        1    0.000    0.000    0.000    0.000 extras.py:1443(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 backend_tools.py:308(ToolCursorPosition)
        1    0.000    0.000    0.000    0.000 __init__.py:722(_decode_filesystem_path)
        1    0.000    0.000    0.000    0.000 ticker.py:2507(AutoMinorLocator)
        1    0.000    0.000    0.000    0.000 rcsetup.py:324(__init__)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        3    0.000    0.000    0.000    0.000 backend_bases.py:224(Show)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2427(Checkbutton)
        1    0.000    0.000    0.000    0.000 __init__.py:810(StreamHandler)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2079(Toplevel)
        3    0.000    0.000    0.000    0.000 {cmp}
        1    0.000    0.000    0.000    0.000 calendar.py:21(IllegalMonthError)
        1    0.000    0.000    0.000    0.000 font_manager.py:948(JSONEncoder)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3791(WordStart)
        1    0.000    0.000    0.000    0.000 dviread.py:788(PsfontsMap)
        1    0.000    0.000    0.000    0.000 utils.py:1909(clear_and_catch_warnings)
        1    0.000    0.000    0.000    0.000 string.py:281(split)
        1    0.000    0.000    0.000    0.000 inspect.py:632(BlockFinder)
        1    0.000    0.000    0.000    0.000 __init__.py:503(__init__)
        1    0.000    0.000    0.000    0.000 trirefine.py:14(TriRefiner)
        2    0.000    0.000    0.000    0.000 rcsetup.py:277(validate_qt5)
        2    0.000    0.000    0.000    0.000 sre_parse.py:85(checkgroup)
        1    0.000    0.000    0.000    0.000 httplib.py:1320(LineAndFileWrapper)
        1    0.000    0.000    0.000    0.000 mathtext.py:1920(HCentered)
        1    0.000    0.000    0.000    0.000 _iotools.py:170(LineSplitter)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:241(LinearTriInterpolator)
        1    0.000    0.000    0.000    0.000 hex_codec.py:57(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1260(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1187(ComplexFormat)
        1    0.000    0.000    0.000    0.000 index_tricks.py:682(IndexExpression)
        1    0.000    0.000    0.000    0.000 shutil.py:38(ExecError)
        1    0.000    0.000    0.000    0.000 ticker.py:1614(LinearLocator)
        1    0.000    0.000    0.000    0.000 patches.py:904(PathPatch)
        1    0.000    0.000    0.000    0.000 font_manager.py:368(FontEntry)
        1    0.000    0.000    0.000    0.000 __init__.py:14(<module>)
        1    0.000    0.000    0.000    0.000 socket.py:167(_closedsocket)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:1036(_BackendTk)
        1    0.000    0.000    0.000    0.000 category.py:35(StrCategoryConverter)
        1    0.000    0.000    0.000    0.000 __init__.py:573(Filterer)
        1    0.000    0.000    0.000    0.000 patches.py:2322(Sawtooth)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3065(Word)
        1    0.000    0.000    0.000    0.000 generator.py:11(Generator)
        1    0.000    0.000    0.000    0.000 widgets.py:96(AxesWidget)
        3    0.000    0.000    0.000    0.000 six.py:835(add_metaclass)
        1    0.000    0.000    0.000    0.000 __init__.py:85(tostr)
        1    0.000    0.000    0.000    0.000 hex_codec.py:27(hex_decode)
        1    0.000    0.000    0.000    0.000 decorators.py:99(skipif)
        1    0.000    0.000    0.000    0.000 category.py:139(StrCategoryFormatter)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:56(TimerTk)
        1    0.000    0.000    0.000    0.000 streamplot.py:404(InvalidIndexError)
        1    0.000    0.000    0.000    0.000 __init__.py:168(c_short)
        1    0.000    0.000    0.000    0.000 __init__.py:1372(RootLogger)
        1    0.000    0.000    0.000    0.000 pyparsing.py:260(<genexpr>)
        2    0.000    0.000    0.000    0.000 {posix.getpid}
        1    0.000    0.000    0.000    0.000 geo.py:418(InvertedMollweideTransform)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6749(Greek)
        1    0.000    0.000    0.000    0.000 Tkinter.py:279(StringVar)
        1    0.000    0.000    0.000    0.000 _distributor_init.py:10(<module>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1511(Accent)
        1    0.000    0.000    0.000    0.000 __init__.py:297(<dictcomp>)
        1    0.000    0.000    0.000    0.000 urllib2.py:932(AbstractDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 scale.py:90(LogTransformBase)
        1    0.000    0.000    0.000    0.000 __init__.py:172(c_ushort)
        1    0.000    0.000    0.000    0.000 pprint.py:84(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 widgets.py:1094(SubplotTool)
        4    0.000    0.000    0.000    0.000 six.py:189(__get_module)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1019(_DOF_estimator)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:19(TriInterpolator)
        1    0.000    0.000    0.000    0.000 backend_tools.py:711(ViewsPositionsBase)
        1    0.000    0.000    0.000    0.000 httplib.py:1224(HTTPS)
        1    0.000    0.000    0.000    0.000 patches.py:3286(_Curve)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:786(ToolTip)
        1    0.000    0.000    0.000    0.000 re.py:277(filter)
        3    0.000    0.000    0.000    0.000 __init__.py:42(private_class)
        1    0.000    0.000    0.000    0.000 mlab.py:3053(FormatPercent)
        1    0.000    0.000    0.000    0.000 threading.py:56(_Verbose)
        1    0.000    0.000    0.000    0.000 httplib.py:1265(InvalidURL)
        1    0.000    0.000    0.000    0.000 scale.py:143(InvertedLog10Transform)
        1    0.000    0.000    0.000    0.000 core.py:875(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 difflib.py:764(Differ)
        1    0.000    0.000    0.000    0.000 colors.py:868(Normalize)
        1    0.000    0.000    0.000    0.000 threading.py:541(Event)
        1    0.000    0.000    0.000    0.000 _datasource.py:142(_FileOpeners)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3763(__init__)
        4    0.000    0.000    0.000    0.000 rrule.py:80(_invalidates_cache)
        1    0.000    0.000    0.000    0.000 patches.py:1435(Ellipse)
        3    0.000    0.000    0.000    0.000 core.py:1361(getmask)
        1    0.000    0.000    0.000    0.000 scale.py:136(Log10Transform)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4064(Or)
        1    0.000    0.000    0.000    0.000 calendar.py:488(TimeEncoding)
        1    0.000    0.000    0.000    0.000 patches.py:1201(FancyArrow)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 rcsetup.py:298(validate_nseq_float)
        1    0.000    0.000    0.000    0.000 subprocess32.py:93(TimeoutExpired)
        3    0.000    0.000    0.000    0.000 core.py:804(__init__)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:32(_BackendTkAgg)
        1    0.000    0.000    0.000    0.000 geo.py:246(_GeoTransform)
        1    0.000    0.000    0.000    0.000 legend_handler.py:45(HandlerBase)
        1    0.000    0.000    0.000    0.000 patches.py:2096(LArrow)
        1    0.000    0.000    0.000    0.000 urllib2.py:1102(AbstractHTTPHandler)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1577(MouseEvent)
        1    0.000    0.000    0.000    0.000 mathtext.py:1360(Node)
        1    0.000    0.000    0.000    0.000 __init__.py:66(converter)
        2    0.000    0.000    0.000    0.000 axis.py:667(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6769(Kanji)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1913(Place)
        1    0.000    0.000    0.000    0.000 polar.py:763(_WedgeBbox)
        1    0.000    0.000    0.000    0.000 _base.py:143(_process_plot_var_args)
        1    0.000    0.000    0.000    0.000 collections.py:1133(LineCollection)
        1    0.000    0.000    0.000    0.000 mlab.py:1585(PCA)
        1    0.000    0.000    0.000    0.000 ticker.py:1420(Locator)
        1    0.000    0.000    0.000    0.000 __init__.py:346(Formatter)
        1    0.000    0.000    0.000    0.000 backend_tools.py:434(_ToolGridBase)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3379(QuotedString)
        1    0.000    0.000    0.000    0.000 mathtext.py:537(TruetypeFonts)
        4    0.000    0.000    0.000    0.000 rcsetup.py:351(validate_color_or_auto)
        1    0.000    0.000    0.000    0.000 dates.py:772(AutoDateFormatter)
        1    0.000    0.000    0.000    0.000 patches.py:1303(YAArrow)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3682(GoToColumn)
        1    0.000    0.000    0.000    0.000 streamplot.py:306(Grid)
        1    0.000    0.000    0.000    0.000 polar.py:234(ThetaLocator)
        1    0.000    0.000    0.000    0.000 geo.py:22(ThetaFormatter)
        2    0.000    0.000    0.000    0.000 pyparsing.py:833(__getattr__)
        1    0.000    0.000    0.000    0.000 tz.py:868(tzrange)
        1    0.000    0.000    0.000    0.000 dviread.py:733(Tfm)
        1    0.000    0.000    0.000    0.000 pyparsing.py:5205(Suppress)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6797(Hebrew)
        1    0.000    0.000    0.000    0.000 function_base.py:1878(vectorize)
        1    0.000    0.000    0.000    0.000 mathtext.py:1433(Char)
        1    0.000    0.000    0.000    0.000 collections.py:1007(BrokenBarHCollection)
        1    0.000    0.000    0.000    0.000 utils.py:994(SafeEval)
        1    0.000    0.000    0.000    0.000 six.py:436(Module_six_moves_urllib_response)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1312(StructureFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:270(_parse_commandline)
        1    0.000    0.000    0.000    0.000 _datasource.py:269(DataSource)
        1    0.000    0.000    0.000    0.000 patches.py:2742(SimpleEvent)
        1    0.000    0.000    0.000    0.000 httplib.py:1279(IncompleteRead)
        1    0.000    0.000    0.000    0.000 dates.py:1780(DateConverter)
        1    0.000    0.000    0.000    0.000 __init__.py:92(todatetime)
        1    0.000    0.000    0.000    0.000 numbers.py:270(Rational)
        1    0.000    0.000    0.000    0.000 __init__.py:712(Sorter)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4273(Each)
        1    0.000    0.000    0.000    0.000 polar.py:211(_AxisWrapper)
        1    0.000    0.000    0.000    0.000 threading.py:299(_is_owned)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 mathtext.py:146(MathtextBackendAgg)
        1    0.000    0.000    0.000    0.000 dates.py:871(rrulewrapper)
        1    0.000    0.000    0.000    0.000 suite.py:252(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 mathtext.py:1786(Rule)
        1    0.000    0.000    0.000    0.000 index_tricks.py:545(__init__)
        1    0.000    0.000    0.000    0.000 ticker.py:239(TickHelper)
        7    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1249(FontConstantsBase)
        1    0.000    0.000    0.000    0.000 core.py:92(MaskedArrayFutureWarning)
        2    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 backend_tools.py:417(ToolEnableNavigation)
        1    0.000    0.000    0.000    0.000 core.py:1282(_replace_dtype_fields_recursive)
        1    0.000    0.000    0.000    0.000 patches.py:1980(_Base)
        1    0.000    0.000    0.000    0.000 axis.py:531(YTick)
        1    0.000    0.000    0.000    0.000 decimal.py:3748(_ContextManager)
        1    0.000    0.000    0.000    0.000 offsetbox.py:333(VPacker)
        1    0.000    0.000    0.000    0.000 csv.py:57(excel)
        1    0.000    0.000    0.000    0.000 pyparsing.py:484(_ParseResultsWithOffset)
        5    0.000    0.000    0.000    0.000 rcsetup.py:577(validate_svg_fonttype)
        1    0.000    0.000    0.000    0.000 collections.py:1688(PatchCollection)
        1    0.000    0.000    0.000    0.000 __init__.py:912(__Full)
        4    0.000    0.000    0.000    0.000 pyparsing.py:5227(postParse)
        1    0.000    0.000    0.000    0.000 threading.py:551(_Event)
        1    0.000    0.000    0.000    0.000 __init__.py:399(silent_list)
        1    0.000    0.000    0.000    0.000 image.py:1019(PcolorImage)
        2    0.000    0.000    0.000    0.000 {method 'endswith' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:2507(TimeoutError)
        1    0.000    0.000    0.000    0.000 ascii.py:24(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 core.py:2596(MaskedIterator)
       23    0.000    0.000    0.000    0.000 overrides.py:179(array_function_from_dispatcher)
        1    0.000    0.000    0.000    0.000 transforms.py:2652(BboxTransformTo)
        1    0.000    0.000    0.000    0.000 dviread.py:602(Vf)
        1    0.000    0.000    0.000    0.000 pickle.py:1261(_EmptyClass)
        1    0.000    0.000    0.000    0.000 subprocess.py:400(CalledProcessError)
        1    0.000    0.000    0.000    0.000 legend_handler.py:428(HandlerCircleCollection)
        1    0.000    0.000    0.000    0.000 mathtext.py:1285(ComputerModernFontConstants)
        1    0.000    0.000    0.000    0.000 decimal.py:5418(_WorkRep)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4187(MatchFirst)
        1    0.000    0.000    0.000    0.000 colors.py:778(ListedColormap)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1729(DraggableOffsetBox)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1640(PickEvent)
        1    0.000    0.000    0.000    0.000 rrule.py:304(rrule)
        1    0.000    0.000    0.000    0.000 colors.py:625(LinearSegmentedColormap)
        1    0.000    0.000    0.000    0.000 core.py:838(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 threading.py:124(_RLock)
        1    0.000    0.000    0.000    0.000 ticker.py:2027(LogLocator)
        1    0.000    0.000    0.000    0.000 csv.py:127(DictWriter)
        1    0.000    0.000    0.000    0.000 runner.py:119(TextTestRunner)
        1    0.000    0.000    0.000    0.000 geo.py:493(InvertedLambertTransform)
        1    0.000    0.000    0.000    0.000 mlab.py:3001(FormatFormatStr)
        1    0.000    0.000    0.000    0.000 __init__.py:107(todate)
        1    0.000    0.000    0.000    0.000 Tkinter.py:301(IntVar)
        3    0.000    0.000    0.000    0.000 __init__.py:1485(__init__)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:179(_ndptr)
        1    0.000    0.000    0.000    0.000 geo.py:276(AitoffTransform)
        1    0.000    0.000    0.000    0.000 mathtext.py:294(MathtextBackendSvg)
        1    0.000    0.000    0.000    0.000 linalg.py:52(LinAlgError)
        1    0.000    0.000    0.000    0.000 _binary.py:14(<module>)
        1    0.000    0.000    0.000    0.000 ImageMode.py:22(ModeDescriptor)
        1    0.000    0.000    0.000    0.000 polar.py:377(ThetaAxis)
        1    0.000    0.000    0.000    0.000 helper.py:232(_FFTCache)
        2    0.000    0.000    0.000    0.000 os.py:470(__setitem__)
        1    0.000    0.000    0.000    0.000 numeric.py:2653(<dictcomp>)
        1    0.000    0.000    0.000    0.000 mlab.py:3071(FormatDate)
        1    0.000    0.000    0.000    0.000 transforms.py:2695(BboxTransformToMaxOnly)
        1    0.000    0.000    0.000    0.000 memmap.py:24(memmap)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:860(ToolbarTk)
        1    0.000    0.000    0.000    0.000 urllib2.py:533(HTTPRedirectHandler)
        2    0.000    0.000    0.000    0.000 calendar.py:71(__init__)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6737(Latin1)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6666(_lazyclassproperty)
        1    0.000    0.000    0.000    0.000 dviread.py:512(DviFont)
        1    0.000    0.000    0.000    0.000 urllib2.py:311(OpenerDirector)
        1    0.000    0.000    0.000    0.000 collections.py:1119(StarPolygonCollection)
        4    0.000    0.000    0.000    0.000 pyparsing.py:3575(parseImpl)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3774(StringEnd)
        1    0.000    0.000    0.000    0.000 __init__.py:760(Xlator)
        1    0.000    0.000    0.000    0.000 gridspec.py:387(SubplotSpec)
        1    0.000    0.000    0.000    0.000 suite.py:78(TestSuite)
        1    0.000    0.000    0.000    0.000 mathtext.py:1393(Box)
        1    0.000    0.000    0.000    0.000 mlab.py:2975(FormatObj)
        1    0.000    0.000    0.000    0.000 axis.py:408(XTick)
        1    0.000    0.000    0.000    0.000 legend.py:54(DraggableLegend)
        1    0.000    0.000    0.000    0.000 __init__.py:388(PyDLL)
        1    0.000    0.000    0.000    0.000 geo.py:349(InvertedHammerTransform)
        1    0.000    0.000    0.000    0.000 _pytesttester.py:47(PytestTester)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1757(DraggableAnnotation)
        1    0.000    0.000    0.000    0.000 core.py:6439(_extrema_operation)
        1    0.000    0.000    0.000    0.000 ticker.py:1694(Base)
        1    0.000    0.000    0.000    0.000 transforms.py:2756(ScaledTranslation)
        1    0.000    0.000    0.000    0.000 offsetbox.py:411(HPacker)
        2    0.000    0.000    0.000    0.000 index_tricks.py:144(__init__)
        1    0.000    0.000    0.000    0.000 Image.py:33(_imaging_not_installed)
        1    0.000    0.000    0.000    0.000 dates.py:1588(MicrosecondLocator)
       11    0.000    0.000    0.000    0.000 rcsetup.py:642(__init__)
        1    0.000    0.000    0.000    0.000 transforms.py:2788(TransformedPath)
        1    0.000    0.000    0.000    0.000 image.py:1212(BboxImage)
        1    0.000    0.000    0.000    0.000 widgets.py:1243(Cursor)
        1    0.000    0.000    0.000    0.000 __init__.py:954(__init__)
        1    0.000    0.000    0.000    0.000 six.py:164(_SixMetaPathImporter)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 contour.py:1436(QuadContourSet)
        1    0.000    0.000    0.000    0.000 transforms.py:2862(TransformedPatchPath)
        1    0.000    0.000    0.000    0.000 __init__.py:176(c_long)
        1    0.000    0.000    0.000    0.000 patches.py:3544(CurveFilledAB)
        1    0.000    0.000    0.000    0.000 rcsetup.py:53(ValidateInStrings)
        1    0.000    0.000    0.000    0.000 blocking_input.py:349(BlockingKeyMouseInput)
        1    0.000    0.000    0.000    0.000 rfc822.py:770(AddressList)
        1    0.000    0.000    0.000    0.000 decimal.py:225(ConversionSyntax)
        1    0.000    0.000    0.000    0.000 mathtext.py:1937(Kern)
        1    0.000    0.000    0.000    0.000 ticker.py:1063(LogFormatterMathtext)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2786(Radiobutton)
        1    0.000    0.000    0.000    0.000 core.py:859(_DomainGreater)
        1    0.000    0.000    0.000    0.000 extras.py:218(_fromnxfunction)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6781(Korean)
        1    0.000    0.000    0.000    0.000 tokenize.py:46(any)
        1    0.000    0.000    0.000    0.000 __init__.py:9(<module>)
        1    0.000    0.000    0.000    0.000 contextlib.py:132(closing)
        1    0.000    0.000    0.000    0.000 httplib.py:1276(UnimplementedFileMode)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6745(LatinB)
        6    0.000    0.000    0.000    0.000 case.py:210(addTypeEqualityFunc)
        1    0.000    0.000    0.000    0.000 urllib2.py:890(HTTPBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 urlparse.py:129(ParseResult)
        1    0.000    0.000    0.000    0.000 ticker.py:335(NullFormatter)
        1    0.000    0.000    0.000    0.000 widgets.py:260(Slider)
        3    0.000    0.000    0.000    0.000 core.py:865(__init__)
        1    0.000    0.000    0.000    0.000 decimal.py:285(InvalidContext)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2813(Scale)
        1    0.000    0.000    0.000    0.000 __init__.py:2184(_InstanceMethodPickler)
        6    0.000    0.000    0.000    0.000 pyparsing.py:2221(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:16(DeprecatedTzFormatWarning)
        1    0.000    0.000    0.000    0.000 scale.py:187(InvertedLogTransform)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1265(SubArrayFormat)
        1    0.000    0.000    0.000    0.000 pyparsing.py:448(ParseFatalException)
        1    0.000    0.000    0.000    0.000 index_tricks.py:209(MGridClass)
        1    0.000    0.000    0.000    0.000 triinterpolate.py:1087(_DOF_estimator_user)
        1    0.000    0.000    0.000    0.000 scale.py:17(ScaleBase)
        2    0.000    0.000    0.000    0.000 rcsetup.py:110(validate_any)
        1    0.000    0.000    0.000    0.000 scale.py:123(InvertedLogTransformBase)
        1    0.000    0.000    0.000    0.000 category.py:171(UnitData)
        2    0.000    0.000    0.000    0.000 pyparsing.py:847(<lambda>)
        1    0.000    0.000    0.000    0.000 mathtext.py:1814(Vrule)
        1    0.000    0.000    0.000    0.000 transforms.py:2295(BlendedAffine2D)
        1    0.000    0.000    0.000    0.000 ascii.py:28(StreamWriter)
        1    0.000    0.000    0.000    0.000 pyparsing.py:5070(Combine)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1418(DrawEvent)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2802(Token)
        1    0.000    0.000    0.000    0.000 ascii.py:13(Codec)
        1    0.000    0.000    0.000    0.000 getlimits.py:34(MachArLike)
        1    0.000    0.000    0.000    0.000 httplib.py:1299(CannotSendHeader)
        1    0.000    0.000    0.000    0.000 urllib.py:978(addclosehook)
        1    0.000    0.000    0.000    0.000 six.py:60(X)
        1    0.000    0.000    0.000    0.000 mlab.py:3089(FormatDatetime)
        4    0.000    0.000    0.000    0.000 rcsetup.py:225(validate_int_or_None)
        1    0.000    0.000    0.000    0.000 httplib.py:1296(CannotSendRequest)
        1    0.000    0.000    0.000    0.000 backend_tools.py:539(ToolYScale)
        1    0.000    0.000    0.000    0.000 backend_tools.py:522(AxisScaleBase)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2776(Menubutton)
        1    0.000    0.000    0.000    0.000 backend_tools.py:353(RubberbandBase)
        1    0.000    0.000    0.000    0.000 streamplot.py:353(StreamMask)
        1    0.000    0.000    0.000    0.000 scale.py:504(LogitScale)
        1    0.000    0.000    0.000    0.000 index_tricks.py:256(OGridClass)
        1    0.000    0.000    0.000    0.000 decimal.py:5672(_Log10Memoize)
        1    0.000    0.000    0.000    0.000 __init__.py:1386(LoggerAdapter)
        1    0.000    0.000    0.000    0.000 Tkinter.py:345(BooleanVar)
        1    0.000    0.000    0.000    0.000 colors.py:1263(BoundaryNorm)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3675(_PositionToken)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1684(KeyEvent)
        1    0.000    0.000    0.000    0.000 __init__.py:523(checkdep_ps_distiller)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3812(WordEnd)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2781(Message)
        1    0.000    0.000    0.000    0.000 scale.py:455(LogitTransform)
        1    0.000    0.000    0.000    0.000 backend_tools.py:741(ToolForward)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6761(Chinese)
        1    0.000    0.000    0.000    0.000 rrule.py:66(weekday)
        1    0.000    0.000    0.000    0.000 rcsetup.py:323(validate_nseq_int)
        1    0.000    0.000    0.000    0.000 threading.py:1058(_Timer)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6801(Devanagari)
        1    0.000    0.000    0.000    0.000 hex_codec.py:45(Codec)
        1    0.000    0.000    0.000    0.000 ticker.py:1153(LogitFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:255(c_void_p)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3214(_setit)
        1    0.000    0.000    0.000    0.000 __init__.py:557(checkdep_usetex)
        1    0.000    0.000    0.000    0.000 version.py:32(Version)
        1    0.000    0.000    0.000    0.000 Image.py:1749(ImageTransformHandler)
        1    0.000    0.000    0.000    0.000 ticker.py:399(FormatStrFormatter)
        1    0.000    0.000    0.000    0.000 calendar.py:138(setfirstweekday)
        1    0.000    0.000    0.000    0.000 _iotools.py:472(ConverterLockError)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:16(DummyArray)
        1    0.000    0.000    0.000    0.000 _parser.py:664(_result)
        1    0.000    0.000    0.000    0.000 _factories.py:17(_TzFactory)
        1    0.000    0.000    0.000    0.000 mathtext.py:1312(DejaVuSerifFontConstants)
        1    0.000    0.000    0.000    0.000 _factories.py:23(_TzOffsetFactory)
        1    0.000    0.000    0.000    0.000 pyparsing.py:474(RecursiveGrammarException)
        4    0.000    0.000    0.000    0.000 pyparsing.py:485(__init__)
        1    0.000    0.000    0.000    0.000 six.py:86(_LazyDescr)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1202(_TimelikeFormat)
        1    0.000    0.000    0.000    0.000 urllib2.py:710(ProxyHandler)
        5    0.000    0.000    0.000    0.000 _inspect.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 version.py:5(<module>)
        1    0.000    0.000    0.000    0.000 pyparsing.py:453(ParseSyntaxException)
        1    0.000    0.000    0.000    0.000 __init__.py:14(__init__)
        1    0.000    0.000    0.000    0.000 dates.py:1473(WeekdayLocator)
        1    0.000    0.000    0.000    0.000 mathtext.py:323(MathtextBackendPath)
        1    0.000    0.000    0.000    0.000 legend_handler.py:134(HandlerNpoints)
        1    0.000    0.000    0.000    0.000 backend_tools.py:750(ConfigureSubplotsBase)
        1    0.000    0.000    0.000    0.000 httplib.py:1268(UnknownProtocol)
        1    0.000    0.000    0.000    0.000 __init__.py:874(GetRealpathAndStat)
        1    0.000    0.000    0.000    0.000 ticker.py:1735(MultipleLocator)
        1    0.000    0.000    0.000    0.000 Image.py:1745(ImagePointHandler)
        1    0.000    0.000    0.000    0.000 __init__.py:205(c_longdouble)
        1    0.000    0.000    0.000    0.000 pyparsing.py:5062(TokenConverter)
        1    0.000    0.000    0.000    0.000 rcsetup.py:638(ValidateInterval)
        1    0.000    0.000    0.000    0.000 urllib2.py:1211(HTTPHandler)
        1    0.000    0.000    0.000    0.000 _type_aliases.py:36(TypeNADict)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2996(CloseMatch)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4697(OneOrMore)
        1    0.000    0.000    0.000    0.000 urllib.py:1003(addinfourl)
        1    0.000    0.000    0.000    0.000 __init__.py:197(c_float)
        1    0.000    0.000    0.000    0.000 urllib2.py:529(HTTPDefaultErrorHandler)
        1    0.000    0.000    0.000    0.000 backend_managers.py:18(ToolEvent)
        1    0.000    0.000    0.000    0.000 patches.py:3432(CurveA)
        4    0.000    0.000    0.000    0.000 core.py:6259(__has_singleton)
        1    0.000    0.000    0.000    0.000 widgets.py:138(Button)
        1    0.000    0.000    0.000    0.000 backend_tools.py:765(ZoomPanBase)
        1    0.000    0.000    0.000    0.000 Tkinter.py:326(DoubleVar)
        1    0.000    0.000    0.000    0.000 patches.py:2829(Arc3)
        1    0.000    0.000    0.000    0.000 _globals.py:46(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 geo.py:303(InvertedAitoffTransform)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 arrayprint.py:1148(BoolFormat)
        1    0.000    0.000    0.000    0.000 urllib2.py:137(URLError)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3776(Tributton)
        1    0.000    0.000    0.000    0.000 dviread.py:953(Encoding)
        1    0.000    0.000    0.000    0.000 _parser.py:1368(_attr)
        1    0.000    0.000    0.000    0.000 _iotools.py:464(ConverterError)
        1    0.000    0.000    0.000    0.000 decimal.py:251(DivisionImpossible)
        1    0.000    0.000    0.000    0.000 mathtext.py:1060(StixSansFonts)
        1    0.000    0.000    0.000    0.000 urllib2.py:902(ProxyBasicAuthHandler)
        1    0.000    0.000    0.000    0.000 scale.py:336(InvertedSymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 numeric.py:2995(errstate)
        6    0.000    0.000    0.000    0.000 core.py:844(__init__)
        1    0.000    0.000    0.000    0.000 decoder.py:274(JSONDecoder)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3708(LineStart)
        1    0.000    0.000    0.000    0.000 index_tricks.py:109(nd_grid)
        1    0.000    0.000    0.000    0.000 {method 'iterkeys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 numerictypes.py:429(_typedict)
        1    0.000    0.000    0.000    0.000 _factories.py:50(_TzStrFactory)
        1    0.000    0.000    0.000    0.000 streamplot.py:233(StreamplotSet)
        1    0.000    0.000    0.000    0.000 utils.py:1263(_Dummy)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4520(PrecededBy)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 axis.py:654(Ticker)
        1    0.000    0.000    0.000    0.000 Tkinter.py:129(Event)
        1    0.000    0.000    0.000    0.000 __init__.py:425(IgnoredKeywordWarning)
        1    0.000    0.000    0.000    0.000 io.py:75(BufferedIOBase)
        1    0.000    0.000    0.000    0.000 widgets.py:2382(EllipseSelector)
        1    0.000    0.000    0.000    0.000 __init__.py:226(c_ubyte)
        1    0.000    0.000    0.000    0.000 scale.py:303(SymmetricalLogTransform)
        1    0.000    0.000    0.000    0.000 core.py:1328(make_mask_descr)
        1    0.000    0.000    0.000    0.000 urllib.py:949(addbase)
        1    0.000    0.000    0.000    0.000 numeric.py:96(ComplexWarning)
        1    0.000    0.000    0.000    0.000 polar.py:274(ThetaTick)
        1    0.000    0.000    0.000    0.000 io.py:78(TextIOBase)
        1    0.000    0.000    0.000    0.000 runner.py:12(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4485(FollowedBy)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4595(NotAny)
        1    0.000    0.000    0.000    0.000 posixpath.py:51(normcase)
        1    0.000    0.000    0.000    0.000 extras.py:304(_fromnxfunction_args)
        1    0.000    0.000    0.000    0.000 backend_tools.py:757(SaveFigureBase)
        1    0.000    0.000    0.000    0.000 scale.py:171(InvertedNaturalLogTransform)
        1    0.000    0.000    0.000    0.000 decimal.py:360(Underflow)
        1    0.000    0.000    0.000    0.000 __init__.py:230(LogRecord)
        1    0.000    0.000    0.000    0.000 gridspec.py:326(GridSpecFromSubplotSpec)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1135(IntegerFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:995(Manager)
        1    0.000    0.000    0.000    0.000 figure.py:172(SubplotParams)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 six.py:384(Module_six_moves_urllib_request)
        1    0.000    0.000    0.000    0.000 polyutils.py:62(PolyError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1892(Fil)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:937(StatusbarTk)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3974(_ErrorStop)
        1    0.000    0.000    0.000    0.000 __init__.py:233(c_byte)
        1    0.000    0.000    0.000    0.000 deprecation.py:6(MatplotlibDeprecationWarning)
        1    0.000    0.000    0.000    0.000 urllib2.py:817(HTTPPasswordMgrWithDefaultRealm)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2834(Literal)
        1    0.000    0.000    0.000    0.000 arrayprint.py:832(FloatingFormat)
        1    0.000    0.000    0.000    0.000 ticker.py:1047(LogFormatterExponent)
        1    0.000    0.000    0.000    0.000 __init__.py:818(IntEnum)
        1    0.000    0.000    0.000    0.000 patches.py:2204(Round)
        1    0.000    0.000    0.000    0.000 gates.py:63(Operator)
        1    0.000    0.000    0.000    0.000 case.py:98(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 colors.py:1349(NoNorm)
        1    0.000    0.000    0.000    0.000 tz.py:367(_tzfile)
        1    0.000    0.000    0.000    0.000 scale.py:157(InvertedLog2Transform)
        1    0.000    0.000    0.000    0.000 dates.py:1501(DayLocator)
        1    0.000    0.000    0.000    0.000 ticker.py:379(FuncFormatter)
        2    0.000    0.000    0.000    0.000 arrayprint.py:450(_recursive_guard)
        1    0.000    0.000    0.000    0.000 __init__.py:536(Filter)
        1    0.000    0.000    0.000    0.000 pyparsing.py:1734(_UnboundedCache)
        1    0.000    0.000    0.000    0.000 six.py:322(Module_six_moves_urllib_parse)
        1    0.000    0.000    0.000    0.000 urllib2.py:1072(HTTPDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 utils.py:47(KnownFailureException)
        1    0.000    0.000    0.000    0.000 copy_reg.py:27(constructor)
        1    0.000    0.000    0.000    0.000 _internal.py:802(TooHardError)
        1    0.000    0.000    0.000    0.000 core.py:795(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 urllib2.py:512(HTTPErrorProcessor)
        1    0.000    0.000    0.000    0.000 patches.py:3476(CurveAB)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3224(_WordRegex)
        1    0.000    0.000    0.000    0.000 ascii.py:20(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2646(NonGuiException)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2539(Label)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3759(StringStart)
        1    0.000    0.000    0.000    0.000 backend_bases.py:232(ShowBase)
        1    0.000    0.000    0.000    0.000 patches.py:3454(CurveB)
        1    0.000    0.000    0.000    0.000 ascii.py:31(StreamReader)
        1    0.000    0.000    0.000    0.000 mathtext.py:1305(STIXSansFontConstants)
        1    0.000    0.000    0.000    0.000 ticker.py:418(StrMethodFormatter)
        1    0.000    0.000    0.000    0.000 __init__.py:189(c_int)
        1    0.000    0.000    0.000    0.000 units.py:133(Registry)
        1    0.000    0.000    0.000    0.000 offsetbox.py:1224(AnchoredText)
        1    0.000    0.000    0.000    0.000 geo.py:376(MollweideTransform)
        1    0.000    0.000    0.000    0.000 backend_tools.py:732(ToolBack)
        1    0.000    0.000    0.000    0.000 ticker.py:439(OldScalarFormatter)
        1    0.000    0.000    0.000    0.000 _endian.py:26(_swapped_meta)
        1    0.000    0.000    0.000    0.000 arrayprint.py:982(LongFloatFormat)
        1    0.000    0.000    0.000    0.000 tz.py:1030(tzstr)
        1    0.000    0.000    0.000    0.000 decimal.py:262(DivisionUndefined)
        1    0.000    0.000    0.000    0.000 __init__.py:948(PlaceHolder)
        2    0.000    0.000    0.000    0.000 core.py:881(__init__)
        1    0.000    0.000    0.000    0.000 lines.py:1426(VertexSelector)
        1    0.000    0.000    0.000    0.000 stat.py:49(S_ISREG)
        1    0.000    0.000    0.000    0.000 backend_tools.py:955(ToolPan)
        1    0.000    0.000    0.000    0.000 httplib.py:1302(ResponseNotReady)
        1    0.000    0.000    0.000    0.000 scale.py:150(Log2Transform)
        1    0.000    0.000    0.000    0.000 suite.py:299(_DebugResult)
        1    0.000    0.000    0.000    0.000 case.py:34(_ExpectedFailure)
        1    0.000    0.000    0.000    0.000 random.py:91(__init__)
        1    0.000    0.000    0.000    0.000 colors.py:1000(LogNorm)
        1    0.000    0.000    0.000    0.000 dates.py:1448(MonthLocator)
        1    0.000    0.000    0.000    0.000 py3k.py:104(contextlib_nullcontext)
        1    0.000    0.000    0.000    0.000 bezier.py:17(NonIntersectingPathException)
        1    0.000    0.000    0.000    0.000 index_tricks.py:603(ndindex)
        1    0.000    0.000    0.000    0.000 patches.py:3850(Fancy)
        1    0.000    0.000    0.000    0.000 six.py:561(Iterator)
        1    0.000    0.000    0.000    0.000 core.py:171(MaskError)
        1    0.000    0.000    0.000    0.000 core.py:891(_MaskedUFunc)
        2    0.000    0.000    0.000    0.000 rcsetup.py:151(deprecate_axes_hold)
        1    0.000    0.000    0.000    0.000 __init__.py:291(c_wchar_p)
        1    0.000    0.000    0.000    0.000 io.py:72(RawIOBase)
        1    0.000    0.000    0.000    0.000 legend_handler.py:262(HandlerPatch)
        1    0.000    0.000    0.000    0.000 decimal.py:184(Clamped)
        1    0.000    0.000    0.000    0.000 hex_codec.py:62(StreamWriter)
        1    0.000    0.000    0.000    0.000 patches.py:3681(BracketA)
        1    0.000    0.000    0.000    0.000 urlparse.py:121(SplitResult)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2521(Frame)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1476(CallWrapper)
        1    0.000    0.000    0.000    0.000 extras.py:1473(mr_class)
        1    0.000    0.000    0.000    0.000 mlab.py:3065(FormatMillions)
        1    0.000    0.000    0.000    0.000 backend_tools.py:401(ToolEnableAllNavigation)
        1    0.000    0.000    0.000    0.000 category.py:121(StrCategoryLocator)
        1    0.000    0.000    0.000    0.000 tz.py:1150(_tzicalvtzcomp)
        1    0.000    0.000    0.000    0.000 backend_tkagg.py:27(NavigationToolbar2TkAgg)
        1    0.000    0.000    0.000    0.000 polyutils.py:58(RankWarning)
        1    0.000    0.000    0.000    0.000 {method 'isdigit' of 'unicode' objects}
        1    0.000    0.000    0.000    0.000 mathtext.py:1916(SsGlue)
        1    0.000    0.000    0.000    0.000 font_manager.py:1000(TempCache)
        1    0.000    0.000    0.000    0.000 mathtext.py:266(MathtextBackendPdf)
        1    0.000    0.000    0.000    0.000 backend_tools.py:549(ToolXScale)
        2    0.000    0.000    0.000    0.000 sre_parse.py:213(isdigit)
        1    0.000    0.000    0.000    0.000 mathtext.py:1296(STIXFontConstants)
        1    0.000    0.000    0.000    0.000 index_tricks.py:420(RClass)
        1    0.000    0.000    0.000    0.000 __init__.py:428(LibraryLoader)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3768(Studbutton)
        1    0.000    0.000    0.000    0.000 shutil.py:34(SpecialFileError)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1446(ResizeEvent)
        1    0.000    0.000    0.000    0.000 core.py:173(update_user_library)
        1    0.000    0.000    0.000    0.000 dates.py:1548(MinuteLocator)
        1    0.000    0.000    0.000    0.000 pyparsing.py:5234(OnlyOnce)
        1    0.000    0.000    0.000    0.000 _internal.py:246(c_void_p)
        1    0.000    0.000    0.000    0.000 polyutils.py:66(PolyDomainError)
        1    0.000    0.000    0.000    0.000 Tkinter.py:2072(Widget)
        1    0.000    0.000    0.000    0.000 numeric.py:2988(_unspecified)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6757(Cyrillic)
        1    0.000    0.000    0.000    0.000 pyparsing.py:5137(Dict)
        4    0.000    0.000    0.000    0.000 pyparsing.py:631(__len__)
        1    0.000    0.000    0.000    0.000 dates.py:363(bytespdate2num)
        1    0.000    0.000    0.000    0.000 patches.py:2153(DArrow)
        1    0.000    0.000    0.000    0.000 __init__.py:31(get_projection_names)
        1    0.000    0.000    0.000    0.000 httplib.py:1262(NotConnected)
        1    0.000    0.000    0.000    0.000 core.py:1123(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 patches.py:3498(CurveFilledA)
        1    0.000    0.000    0.000    0.000 httplib.py:1305(BadStatusLine)
        1    0.000    0.000    0.000    0.000 __init__.py:1954(<dictcomp>)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6777(Katakana)
        1    0.000    0.000    0.000    0.000 mathtext.py:1929(VCentered)
        1    0.000    0.000    0.000    0.000 _globals.py:32(ModuleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 mathtext.py:1540(List)
        1    0.000    0.000    0.000    0.000 scale.py:483(LogisticTransform)
        2    0.000    0.000    0.000    0.000 legend_handler.py:266(__init__)
        1    0.000    0.000    0.000    0.000 subprocess32.py:53(SubprocessError)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 pyparsing.py:5115(Group)
        1    0.000    0.000    0.000    0.000 mathtext.py:351(MathtextBackendCairo)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3225(OptionMenu)
        1    0.000    0.000    0.000    0.000 calendar.py:501(LocaleTextCalendar)
        1    0.000    0.000    0.000    0.000 legend_handler.py:553(HandlerStem)
        1    0.000    0.000    0.000    0.000 ast.py:254(NodeTransformer)
        1    0.000    0.000    0.000    0.000 core.py:163(MAError)
        1    0.000    0.000    0.000    0.000 polyutils.py:79(PolyBase)
        1    0.000    0.000    0.000    0.000 extras.py:329(_fromnxfunction_allargs)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1496(XView)
        1    0.000    0.000    0.000    0.000 mlab.py:3059(FormatThousands)
        1    0.000    0.000    0.000    0.000 _backend_tk.py:1001(ConfigureSubplotsTk)
        1    0.000    0.000    0.000    0.000 patches.py:2968(Arc)
        1    0.000    0.000    0.000    0.000 decimal.py:322(Overflow)
        1    0.000    0.000    0.000    0.000 __init__.py:390(__init__)
        1    0.000    0.000    0.000    0.000 mlab.py:2994(FormatString)
        1    0.000    0.000    0.000    0.000 backend_tools.py:468(ToolGrid)
        1    0.000    0.000    0.000    0.000 legend_handler.py:636(HandlerTuple)
        1    0.000    0.000    0.000    0.000 geo.py:327(HammerTransform)
        1    0.000    0.000    0.000    0.000 core.py:2384(__init__)
        1    0.000    0.000    0.000    0.000 program.py:18(State)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1228(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 patches.py:3567(_Bracket)
        1    0.000    0.000    0.000    0.000 patches.py:2043(Square)
        1    0.000    0.000    0.000    0.000 pyparsing.py:149(SimpleNamespace)
        1    0.000    0.000    0.000    0.000 container.py:112(BarContainer)
        1    0.000    0.000    0.000    0.000 gates.py:10(gateType)
        1    0.000    0.000    0.000    0.000 patches.py:2905(Angle)
        1    0.000    0.000    0.000    0.000 mlab.py:3031(FormatInt)
        1    0.000    0.000    0.000    0.000 __init__.py:238(c_char)
        1    0.000    0.000    0.000    0.000 _endian.py:49(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 __init__.py:875(__init__)
        1    0.000    0.000    0.000    0.000 httplib.py:1293(ImproperConnectionState)
        1    0.000    0.000    0.000    0.000 __init__.py:180(c_ulong)
        1    0.000    0.000    0.000    0.000 decimal.py:235(DivisionByZero)
        1    0.000    0.000    0.000    0.000 polar.py:466(_ThetaShift)
        1    0.000    0.000    0.000    0.000 widgets.py:945(RadioButtons)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2810(Empty)
        1    0.000    0.000    0.000    0.000 patches.py:2866(Angle3)
        1    0.000    0.000    0.000    0.000 _factories.py:6(_TzSingleton)
        3    0.000    0.000    0.000    0.000 pyparsing.py:3642(<genexpr>)
        1    0.000    0.000    0.000    0.000 threading.py:1097(_set_daemon)
        1    0.000    0.000    0.000    0.000 index_tricks.py:520(CClass)
        1    0.000    0.000    0.000    0.000 shutil.py:31(Error)
        6    0.000    0.000    0.000    0.000 _abcoll.py:26(<genexpr>)
        1    0.000    0.000    0.000    0.000 threading.py:514(_BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 io.py:69(IOBase)
        1    0.000    0.000    0.000    0.000 _internal.py:806(AxisError)
        1    0.000    0.000    0.000    0.000 __init__.py:159(py_object)
        1    0.000    0.000    0.000    0.000 pyparsing.py:3234(Char)
        1    0.000    0.000    0.000    0.000 urllib2.py:1308(FileHandler)
        1    0.000    0.000    0.000    0.000 mlab.py:3044(FormatBool)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6773(Hiragana)
        1    0.000    0.000    0.000    0.000 mathtext.py:1908(NegFill)
        1    0.000    0.000    0.000    0.000 mathtext.py:1966(SubSuperCluster)
        1    0.000    0.000    0.000    0.000 legend_handler.py:340(HandlerRegularPolyCollection)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6789(Thai)
        1    0.000    0.000    0.000    0.000 numbers.py:13(Number)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3555(LabelFrame)
        1    0.000    0.000    0.000    0.000 isoparser.py:43(__init__)
        1    0.000    0.000    0.000    0.000 pickle.py:69(UnpicklingError)
        1    0.000    0.000    0.000    0.000 inspect.py:630(EndOfBlock)
        1    0.000    0.000    0.000    0.000 patches.py:3521(CurveFilledB)
        1    0.000    0.000    0.000    0.000 mathtext.py:1803(Hrule)
        1    0.000    0.000    0.000    0.000 patches.py:2431(Roundtooth)
        1    0.000    0.000    0.000    0.000 _cm.py:60(cubehelix)
        1    0.000    0.000    0.000    0.000 six.py:229(_MovedItems)
        1    0.000    0.000    0.000    0.000 patches.py:3763(Simple)
        1    0.000    0.000    0.000    0.000 httplib.py:1257(HTTPException)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1410(IdleEvent)
        1    0.000    0.000    0.000    0.000 case.py:45(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 core.py:828(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:294(c_wchar)
        1    0.000    0.000    0.000    0.000 tz.py:322(_ttinfo)
        1    0.000    0.000    0.000    0.000 httplib.py:1273(UnknownTransferEncoding)
        1    0.000    0.000    0.000    0.000 mathtext.py:1316(DejaVuSansFontConstants)
        1    0.000    0.000    0.000    0.000 decimal.py:5676(__init__)
        1    0.000    0.000    0.000    0.000 decimal.py:273(Inexact)
        1    0.000    0.000    0.000    0.000 mathtext.py:1823(Glue)
        1    0.000    0.000    0.000    0.000 calendar.py:28(IllegalWeekdayError)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4956(Forward)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4763(_NullToken)
        1    0.000    0.000    0.000    0.000 colors.py:63(_ColorMapping)
        1    0.000    0.000    0.000    0.000 Tkinter.py:3382(BitmapImage)
        1    0.000    0.000    0.000    0.000 ticker.py:1594(NullLocator)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6741(LatinA)
        1    0.000    0.000    0.000    0.000 polynomial.py:30(RankWarning)
        1    0.000    0.000    0.000    0.000 ticker.py:1548(FixedLocator)
        1    0.000    0.000    0.000    0.000 legend_handler.py:308(HandlerLineCollection)
        1    0.000    0.000    0.000    0.000 __init__.py:243(c_char_p)
        1    0.000    0.000    0.000    0.000 __init__.py:94(_EnumDict)
        1    0.000    0.000    0.000    0.000 ticker.py:2395(LogitLocator)
        2    0.000    0.000    0.000    0.000 calendar.py:52(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:217(NodeVisitor)
        1    0.000    0.000    0.000    0.000 urllib2.py:1090(ProxyDigestAuthHandler)
        1    0.000    0.000    0.000    0.000 mathtext.py:868(DejaVuFonts)
        1    0.000    0.000    0.000    0.000 arrayprint.py:975(FloatFormat)
        1    0.000    0.000    0.000    0.000 mathtext.py:1904(NegFil)
        1    0.000    0.000    0.000    0.000 urllib2.py:1420(CacheFTPHandler)
        1    0.000    0.000    0.000    0.000 trifinder.py:11(TriFinder)
        1    0.000    0.000    0.000    0.000 _version.py:4(<module>)
        1    0.000    0.000    0.000    0.000 backend_agg.py:603(_BackendAgg)
        1    0.000    0.000    0.000    0.000 core.py:6556(_frommethod)
        1    0.000    0.000    0.000    0.000 offsetbox.py:869(AuxTransformBox)
        1    0.000    0.000    0.000    0.000 extras.py:291(_fromnxfunction_seq)
        1    0.000    0.000    0.000    0.000 decimal.py:299(Rounded)
        2    0.000    0.000    0.000    0.000 tokenize.py:47(maybe)
        1    0.000    0.000    0.000    0.000 legend_handler.py:415(HandlerPathCollection)
        1    0.000    0.000    0.000    0.000 polar.py:525(RadialTick)
        1    0.000    0.000    0.000    0.000 backend_managers.py:34(ToolManagerMessageEvent)
        1    0.000    0.000    0.000    0.000 pyparsing.py:6793(Arabic)
        1    0.000    0.000    0.000    0.000 mlab.py:3012(FormatFloat)
        1    0.000    0.000    0.000    0.000 six.py:62(__len__)
        1    0.000    0.000    0.000    0.000 calendar.py:536(LocaleHTMLCalendar)
        1    0.000    0.000    0.000    0.000 collections.py:1126(AsteriskPolygonCollection)
        1    0.000    0.000    0.000    0.000 threading.py:1128(_DummyThread)
        1    0.000    0.000    0.000    0.000 ticker.py:2222(SymmetricalLogLocator)
        1    0.000    0.000    0.000    0.000 csv.py:67(excel_tab)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3363(StatusbarBase)
        1    0.000    0.000    0.000    0.000 streamplot.py:408(TerminateTrajectory)
        1    0.000    0.000    0.000    0.000 __init__.py:1690(createLock)
        1    0.000    0.000    0.000    0.000 patches.py:3953(Wedge)
        1    0.000    0.000    0.000    0.000 __init__.py:122(tofloat)
        1    0.000    0.000    0.000    0.000 mathtext.py:1896(Fill)
        1    0.000    0.000    0.000    0.000 mathtext.py:1426(Hbox)
        1    0.000    0.000    0.000    0.000 scale.py:164(NaturalLogTransform)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2873(_SingleCharLiteral)
        1    0.000    0.000    0.000    0.000 widgets.py:2453(LassoSelector)
        1    0.000    0.000    0.000    0.000 windowing.py:26(FocusManager)
        1    0.000    0.000    0.000    0.000 Tkinter.py:1517(YView)
        1    0.000    0.000    0.000    0.000 mimetools.py:20(Message)
        1    0.000    0.000    0.000    0.000 pickle.py:62(PicklingError)
        1    0.000    0.000    0.000    0.000 mathtext.py:1900(Filll)
        1    0.000    0.000    0.000    0.000 polar.py:188(ThetaFormatter)
        1    0.000    0.000    0.000    0.000 tz.py:1822(_nullcontext)
        1    0.000    0.000    0.000    0.000 __init__.py:359(_FuncPtr)
       14    0.000    0.000    0.000    0.000 _common.py:9(__init__)
        1    0.000    0.000    0.000    0.000 patches.py:3421(Curve)
        1    0.000    0.000    0.000    0.000 mathtext.py:1357(MathTextWarning)
        1    0.000    0.000    0.000    0.000 six.py:364(Module_six_moves_urllib_error)
        1    0.000    0.000    0.000    0.000 rrule.py:1314(_genitem)
        1    0.000    0.000    0.000    0.000 scale.py:178(LogTransform)
        1    0.000    0.000    0.000    0.000 mathtext.py:1419(Vbox)
        1    0.000    0.000    0.000    0.000 pyplot.py:132(_NotIPython)
        1    0.000    0.000    0.000    0.000 pyparsing.py:1757(_FifoCache)
        1    0.000    0.000    0.000    0.000 pyparsing.py:2960(CaselessLiteral)
        1    0.000    0.000    0.000    0.000 {numpy.core._multiarray_umath.set_typeDict}
        1    0.000    0.000    0.000    0.000 legend_handler.py:440(HandlerErrorbar)
        1    0.000    0.000    0.000    0.000 hex_codec.py:65(StreamReader)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1158(ComplexFloatingFormat)
        1    0.000    0.000    0.000    0.000 polar.py:709(RadialAxis)
        1    0.000    0.000    0.000    0.000 ticker.py:2487(AutoLocator)
        1    0.000    0.000    0.000    0.000 pyparsing.py:4406(ParseElementEnhance)
        1    0.000    0.000    0.000    0.000 urllib2.py:1226(HTTPCookieProcessor)
        1    0.000    0.000    0.000    0.000 ssl.py:101(CertificateError)
        1    0.000    0.000    0.000    0.000 container.py:169(StemContainer)
        1    0.000    0.000    0.000    0.000 six.py:457(Module_six_moves_urllib_robotparser)
        1    0.000    0.000    0.000    0.000 pickle.py:82(_Stop)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1467(CloseEvent)
        1    0.000    0.000    0.000    0.000 arrayprint.py:1194(LongComplexFormat)


